{"version":3,"file":"index.mjs","sources":["../lib/utils/logger.ts","../lib/newFileMenu.ts","../lib/humanfilesize.ts","../lib/fileAction.ts","../lib/fileListHeaders.ts","../lib/permissions.ts","../lib/dav/davProperties.ts","../lib/dav/davPermissions.ts","../lib/files/fileType.ts","../lib/files/nodeData.ts","../lib/files/node.ts","../lib/files/file.ts","../lib/files/folder.ts","../lib/dav/dav.ts","../lib/navigation/navigation.ts","../lib/navigation/column.ts","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/strnum/strnum.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/is-svg/index.js","../lib/navigation/view.ts","../lib/index.ts"],"sourcesContent":["/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nconst getLogger = user => {\n\tif (user === null) {\n\t\treturn getLoggerBuilder()\n\t\t\t.setApp('files')\n\t\t\t.build()\n\t}\n\treturn getLoggerBuilder()\n\t\t.setApp('files')\n\t\t.setUid(user.uid)\n\t\t.build()\n}\n\nexport default getLogger(getCurrentUser())\n","/**\n * @copyright Copyright (c) 2021 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Folder } from './files/folder'\nimport logger from './utils/logger'\n\nexport interface Entry {\n\t/** Unique ID */\n\tid: string\n\t/** Translatable string displayed in the menu */\n\tdisplayName: string\n\t/** Default new file name */\n\ttemplateName?: string\n\t/**\n\t * Condition wether this entry is shown or not\n\t * @param {Folder} context the creation context. Usually the current folder\n\t */\n\tif?: (context: Folder) => boolean\n\t/**\n\t * Either iconSvgInline or iconClass must be defined\n\t * Svg as inline string. <svg><path fill=\"...\" /></svg>\n\t */\n\ticonSvgInline?: string\n\t/**\n\t * Existing icon css class\n\t * @deprecated use iconSvgInline instead\n\t */\n\ticonClass?: string\n\t/**\n\t * Function to be run after creation\n\t * @param {Folder} context the creation context. Usually the current folder\n\t * @param {Node[]} content list of file/folders present in the context folder\n\t */\n\thandler: (context: Folder, content: Node[]) => void\n}\n\nexport class NewFileMenu {\n\n\tprivate _entries: Array<Entry> = []\n\n\tpublic registerEntry(entry: Entry) {\n\t\tthis.validateEntry(entry)\n\t\tthis._entries.push(entry)\n\t}\n\n\tpublic unregisterEntry(entry: Entry | string) {\n\t\tconst entryIndex = typeof entry === 'string'\n\t\t\t? this.getEntryIndex(entry)\n\t\t\t: this.getEntryIndex(entry.id)\n\n\t\tif (entryIndex === -1) {\n\t\t\tlogger.warn('Entry not found, nothing removed', { entry, entries: this.getEntries() })\n\t\t\treturn\n\t\t}\n\n\t\tthis._entries.splice(entryIndex, 1)\n\t}\n\n\t/**\n\t * Get the list of registered entries\n\t *\n\t * @param {Folder} context the creation context. Usually the current folder\n\t */\n\tpublic getEntries(context?: Folder): Array<Entry> {\n\t\tif (context) {\n\t\t\treturn this._entries\n\t\t\t\t.filter(entry => typeof entry.if === 'function' ? entry.if(context) : true)\n\t\t}\n\t\treturn this._entries\n\t}\n\n\tprivate getEntryIndex(id: string): number {\n\t\treturn this._entries.findIndex(entry => entry.id === id)\n\t}\n\n\tprivate validateEntry(entry: Entry) {\n\t\tif (!entry.id || !entry.displayName || !(entry.iconSvgInline || entry.iconClass || entry.handler)) {\n\t\t\tthrow new Error('Invalid entry')\n\t\t}\n\n\t\tif (typeof entry.id !== 'string'\n\t\t\t|| typeof entry.displayName !== 'string') {\n\t\t\tthrow new Error('Invalid id or displayName property')\n\t\t}\n\n\t\tif ((entry.iconClass && typeof entry.iconClass !== 'string')\n\t\t\t|| (entry.iconSvgInline && typeof entry.iconSvgInline !== 'string')) {\n\t\t\tthrow new Error('Invalid icon provided')\n\t\t}\n\n\t\tif (entry.if !== undefined && typeof entry.if !== 'function') {\n\t\t\tthrow new Error('Invalid if property')\n\t\t}\n\n\t\tif (entry.templateName && typeof entry.templateName !== 'string') {\n\t\t\tthrow new Error('Invalid templateName property')\n\t\t}\n\n\t\tif (entry.handler && typeof entry.handler !== 'function') {\n\t\t\tthrow new Error('Invalid handler property')\n\t\t}\n\n\t\tif (!entry.templateName && !entry.handler) {\n\t\t\tthrow new Error('At least a templateName or a handler must be provided')\n\t\t}\n\n\t\tif (this.getEntryIndex(entry.id) !== -1) {\n\t\t\tthrow new Error('Duplicate entry')\n\t\t}\n\t}\n\n}\n\nexport const getNewFileMenu = function(): NewFileMenu {\n\tif (typeof window._nc_newfilemenu === 'undefined') {\n\t\twindow._nc_newfilemenu = new NewFileMenu()\n\t\tlogger.debug('NewFileMenu initialized')\n\t}\n\treturn window._nc_newfilemenu\n}\n","/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCanonicalLocale } from '@nextcloud/l10n'\n\nconst humanList = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\nconst humanListBinary = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB']\n\n/**\n * Format a file size in a human-like format. e.g. 42GB\n *\n * @param size in bytes\n * @param skipSmallSizes avoid rendering tiny sizes and return '< 1 KB' instead\n * @param binaryPrefixes True if binary prefixes like `KiB` should be used (size base 2)\n */\nexport function formatFileSize(size: number|string, skipSmallSizes = false, binaryPrefixes = false): string {\n\n\tif (typeof size === 'string') {\n\t\tsize = Number(size)\n\t}\n\n\t/*\n\t* @note This block previously used Log base 1024, per IEC 80000-13;\n\t* however, the wrong prefix was used. Now we use decimal calculation\n\t* with base 1000 per the SI. Base 1024 calculation with binary\n\t* prefixes is optional, but has yet to be added to the UI.\n\t*/\n\t// Calculate Log with base 1024 or 1000: size = base ** order\n\tlet order = size > 0 ? Math.floor(Math.log(size) / Math.log(binaryPrefixes ? 1024 : 1000)) : 0\n\t// Stay in range of the byte sizes that are defined\n\torder = Math.min((binaryPrefixes ? humanListBinary.length : humanList.length) - 1, order)\n\tconst readableFormat = binaryPrefixes ? humanListBinary[order] : humanList[order]\n\tlet relativeSize = (size / Math.pow(binaryPrefixes ? 1024 : 1000, order)).toFixed(1)\n\n\tif (skipSmallSizes === true && order === 0) {\n\t\treturn (relativeSize !== '0.0' ? '< 1 ' : '0 ') + (binaryPrefixes ? humanListBinary[1] : humanList[1])\n\t}\n\n\tif (order < 2) {\n\t\trelativeSize = parseFloat(relativeSize).toFixed(0)\n\t} else {\n\t\trelativeSize = parseFloat(relativeSize).toLocaleString(getCanonicalLocale())\n\t}\n\n\treturn relativeSize + ' ' + readableFormat\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Node } from './files/node'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport enum DefaultType {\n\tDEFAULT = 'default',\n\tHIDDEN = 'hidden',\n}\n\ninterface FileActionData {\n\t/** Unique ID */\n\tid: string\n\t/** Translatable string displayed in the menu */\n\tdisplayName: (files: Node[], view: View) => string\n\t/** Svg as inline string. <svg><path fill=\"...\" /></svg> */\n\ticonSvgInline: (files: Node[], view: View) => string\n\t/** Condition wether this action is shown or not */\n\tenabled?: (files: Node[], view: View) => boolean\n\t/**\n\t * Function executed on single file action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texec: (file: Node, view: View, dir: string) => Promise<boolean|null>,\n\t/**\n\t * Function executed on multiple files action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texecBatch?: (files: Node[], view: View, dir: string) => Promise<(boolean|null)[]>\n\t/** This action order in the list */\n\torder?: number,\n\n\t/**\n\t * Make this action the default.\n\t * If multiple actions are default, the first one\n\t * will be used. The other ones will be put as first\n\t * entries in the actions menu iff DefaultType.Hidden is not used.\n\t * A DefaultType.Hidden action will never be shown\n\t * in the actions menu even if another action takes\n\t * its place as default.\n\t */\n\tdefault?: DefaultType,\n\t/**\n\t * If true, the renderInline function will be called\n\t */\n\tinline?: (file: Node, view: View) => boolean,\n\t/**\n\t * If defined, the returned html element will be\n\t * appended before the actions menu.\n\t */\n\trenderInline?: (file: Node, view: View) => Promise<HTMLElement | null>,\n}\n\nexport class FileAction {\n\n\tprivate _action: FileActionData\n\n\tconstructor(action: FileActionData) {\n\t\tthis.validateAction(action)\n\t\tthis._action = action\n\t}\n\n\tget id() {\n\t\treturn this._action.id\n\t}\n\n\tget displayName() {\n\t\treturn this._action.displayName\n\t}\n\n\tget iconSvgInline() {\n\t\treturn this._action.iconSvgInline\n\t}\n\n\tget enabled() {\n\t\treturn this._action.enabled\n\t}\n\n\tget exec() {\n\t\treturn this._action.exec\n\t}\n\n\tget execBatch() {\n\t\treturn this._action.execBatch\n\t}\n\n\tget order() {\n\t\treturn this._action.order\n\t}\n\n\tget default() {\n\t\treturn this._action.default\n\t}\n\n\tget inline() {\n\t\treturn this._action.inline\n\t}\n\n\tget renderInline() {\n\t\treturn this._action.renderInline\n\t}\n\n\tprivate validateAction(action: FileActionData) {\n\t\tif (!action.id || typeof action.id !== 'string') {\n\t\t\tthrow new Error('Invalid id')\n\t\t}\n\n\t\tif (!action.displayName || typeof action.displayName !== 'function') {\n\t\t\tthrow new Error('Invalid displayName function')\n\t\t}\n\n\t\tif (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n\t\t\tthrow new Error('Invalid iconSvgInline function')\n\t\t}\n\n\t\tif (!action.exec || typeof action.exec !== 'function') {\n\t\t\tthrow new Error('Invalid exec function')\n\t\t}\n\n\t\t// Optional properties --------------------------------------------\n\t\tif ('enabled' in action && typeof action.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled function')\n\t\t}\n\n\t\tif ('execBatch' in action && typeof action.execBatch !== 'function') {\n\t\t\tthrow new Error('Invalid execBatch function')\n\t\t}\n\n\t\tif ('order' in action && typeof action.order !== 'number') {\n\t\t\tthrow new Error('Invalid order')\n\t\t}\n\n\t\tif (action.default && !Object.values(DefaultType).includes(action.default)) {\n\t\t\tthrow new Error('Invalid default')\n\t\t}\n\n\t\tif ('inline' in action && typeof action.inline !== 'function') {\n\t\t\tthrow new Error('Invalid inline function')\n\t\t}\n\n\t\tif ('renderInline' in action && typeof action.renderInline !== 'function') {\n\t\t\tthrow new Error('Invalid renderInline function')\n\t\t}\n\t}\n\n}\n\nexport const registerFileAction = function(action: FileAction): void {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_fileactions.find(search => search.id === action.id)) {\n\t\tlogger.error(`FileAction ${action.id} already registered`, { action })\n\t\treturn\n\t}\n\n\twindow._nc_fileactions.push(action)\n}\n\nexport const getFileActions = function(): FileAction[] {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\treturn window._nc_fileactions\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Folder } from './files/folder'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport interface HeaderData {\n\t/** Unique ID */\n\tid: string\n\t/** Order */\n\torder: number\n\t/** Condition wether this header is shown or not */\n\tenabled?: (folder: Folder, view: View) => boolean\n\t/** Executed when file list is initialized */\n\trender: (el: HTMLElement, folder: Folder, view: View) => void\n\t/** Executed when root folder changed */\n\tupdated(folder: Folder, view: View)\n}\n\nexport class Header {\n\n\tprivate _header: HeaderData\n\n\tconstructor(header: HeaderData) {\n\t\tthis.validateHeader(header)\n\t\tthis._header = header\n\t}\n\n\tget id() {\n\t\treturn this._header.id\n\t}\n\n\tget order() {\n\t\treturn this._header.order\n\t}\n\n\tget enabled() {\n\t\treturn this._header.enabled\n\t}\n\n\tget render() {\n\t\treturn this._header.render\n\t}\n\n\tget updated() {\n\t\treturn this._header.updated\n\t}\n\n\tprivate validateHeader(header: HeaderData) {\n\t\tif (!header.id || !header.render || !header.updated) {\n\t\t\tthrow new Error('Invalid header: id, render and updated are required')\n\t\t}\n\n\t\tif (typeof header.id !== 'string') {\n\t\t\tthrow new Error('Invalid id property')\n\t\t}\n\n\t\tif (header.enabled !== undefined && typeof header.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled property')\n\t\t}\n\n\t\tif (header.render && typeof header.render !== 'function') {\n\t\t\tthrow new Error('Invalid render property')\n\t\t}\n\n\t\tif (header.updated && typeof header.updated !== 'function') {\n\t\t\tthrow new Error('Invalid updated property')\n\t\t}\n\t}\n\n}\n\nexport const registerFileListHeaders = function(header: Header): void {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_filelistheader.find(search => search.id === header.id)) {\n\t\tlogger.error(`Header ${header.id} already registered`, { header })\n\t\treturn\n\t}\n\n\twindow._nc_filelistheader.push(header)\n}\n\nexport const getFileListHeaders = function(): Header[] {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\treturn window._nc_filelistheader\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * Node permissions\n */\nexport enum Permission {\n\tNONE = 0,\n\tCREATE = 4,\n\tREAD = 1,\n\tUPDATE = 2,\n\tDELETE = 8,\n\tSHARE = 16,\n\tALL = 31,\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getCurrentUser } from '@nextcloud/auth'\nimport logger from '../utils/logger'\n\nexport type DavProperty = { [key: string]: string }\n\nexport const defaultDavProperties = [\n\t'd:getcontentlength',\n\t'd:getcontenttype',\n\t'd:getetag',\n\t'd:getlastmodified',\n\t'd:quota-available-bytes',\n\t'd:resourcetype',\n\t'nc:has-preview',\n\t'nc:is-encrypted',\n\t'nc:mount-type',\n\t'nc:share-attributes',\n\t'oc:comments-unread',\n\t'oc:favorite',\n\t'oc:fileid',\n\t'oc:owner-display-name',\n\t'oc:owner-id',\n\t'oc:permissions',\n\t'oc:share-types',\n\t'oc:size',\n\t'ocs:share-permissions',\n]\n\nexport const defaultDavNamespaces = {\n\td: 'DAV:',\n\tnc: 'http://nextcloud.org/ns',\n\toc: 'http://owncloud.org/ns',\n\tocs: 'http://open-collaboration-services.org/ns',\n}\n\n/**\n * Register custom DAV properties\n *\n * Can be used if your app introduces custom DAV properties, so e.g. the files app can make use of it.\n *\n * @param prop The property\n * @param namespace The namespace of the property\n */\nexport const registerDavProperty = function(prop: string, namespace: DavProperty = { nc: 'http://nextcloud.org/ns' }): boolean {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\tconst namespaces = { ...window._nc_dav_namespaces, ...namespace }\n\n\t// Check duplicates\n\tif (window._nc_dav_properties.find((search) => search === prop)) {\n\t\tlogger.error(`${prop} already registered`, { prop })\n\t\treturn false\n\t}\n\n\tif (prop.startsWith('<') || prop.split(':').length !== 2) {\n\t\tlogger.error(`${prop} is not valid. See example: 'oc:fileid'`, { prop })\n\t\treturn false\n\t}\n\n\tconst ns = prop.split(':')[0]\n\tif (!namespaces[ns]) {\n\t\tlogger.error(`${prop} namespace unknown`, { prop, namespaces })\n\t\treturn false\n\t}\n\n\twindow._nc_dav_properties.push(prop)\n\twindow._nc_dav_namespaces = namespaces\n\treturn true\n}\n\n/**\n * Get the registered dav properties\n */\nexport const getDavProperties = function(): string {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t}\n\n\treturn window._nc_dav_properties.map((prop) => `<${prop} />`).join(' ')\n}\n\n/**\n * Get the registered dav namespaces\n */\nexport const getDavNameSpaces = function(): string {\n\tif (typeof window._nc_dav_namespaces === 'undefined') {\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\treturn Object.keys(window._nc_dav_namespaces)\n\t\t.map((ns) => `xmlns:${ns}=\"${window._nc_dav_namespaces?.[ns]}\"`)\n\t\t.join(' ')\n}\n\n/**\n * Get the default PROPFIND request body\n */\nexport const davGetDefaultPropfind = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<d:propfind ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:propfind>`\n}\n\n/**\n * Get the REPORT body to filter for favorite nodes\n */\nexport const davGetFavoritesReport = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<oc:filter-files ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t\t<oc:filter-rules>\n\t\t\t\t<oc:favorite>1</oc:favorite>\n\t\t\t</oc:filter-rules>\n\t\t</oc:filter-files>`\n}\n\n/**\n * Get the SEARCH body to search for recently modified files\n *\n * @param lastModified Oldest timestamp to include (Unix timestamp)\n * @example\n * ```ts\n * // SEARCH for recent files need a different DAV endpoint\n * const client = davGetClient(generateRemoteUrl('dav'))\n * // Timestamp of last week\n * const lastWeek = Math.round(Date.now() / 1000) - (60 * 60 * 24 * 7)\n * const contentsResponse = await client.getDirectoryContents(path, {\n *     details: true,\n *     data: davGetRecentSearch(lastWeek),\n *     headers: {\n *         method: 'SEARCH',\n *         'Content-Type': 'application/xml; charset=utf-8',\n *     },\n *     deep: true,\n * }) as ResponseDataDetailed<FileStat[]>\n * ```\n */\nexport const davGetRecentSearch = function(lastModified: number): string {\n\treturn `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<d:searchrequest ${getDavNameSpaces()}\n\txmlns:ns=\"https://github.com/icewind1991/SearchDAV/ns\">\n\t<d:basicsearch>\n\t\t<d:select>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:select>\n\t\t<d:from>\n\t\t\t<d:scope>\n\t\t\t\t<d:href>/files/${getCurrentUser()?.uid}/</d:href>\n\t\t\t\t<d:depth>infinity</d:depth>\n\t\t\t</d:scope>\n\t\t</d:from>\n\t\t<d:where>\n\t\t\t<d:and>\n\t\t\t\t<d:or>\n\t\t\t\t\t<d:not>\n\t\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t\t<d:getcontenttype/>\n\t\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t\t<d:literal>httpd/unix-directory</d:literal>\n\t\t\t\t\t\t</d:eq>\n\t\t\t\t\t</d:not>\n\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t<oc:size/>\n\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t<d:literal>0</d:literal>\n\t\t\t\t\t</d:eq>\n\t\t\t\t</d:or>\n\t\t\t\t<d:gt>\n\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t\t</d:prop>\n\t\t\t\t\t<d:literal>${lastModified}</d:literal>\n\t\t\t\t</d:gt>\n\t\t\t</d:and>\n\t\t</d:where>\n\t\t<d:orderby>\n\t\t\t<d:order>\n\t\t\t\t<d:prop>\n\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t</d:prop>\n\t\t\t\t<d:descending/>\n\t\t\t</d:order>\n\t\t</d:orderby>\n\t\t<d:limit>\n\t\t\t<d:nresults>100</d:nresults>\n\t\t\t<ns:firstresult>0</ns:firstresult>\n\t\t</d:limit>\n\t</d:basicsearch>\n</d:searchrequest>`\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { Permission } from '../permissions'\n\n/**\n * Parse the webdav permission string to a permission enum\n *\n * @param permString The DAV permission string\n */\nexport const davParsePermissions = function(permString = ''): number {\n\tlet permissions = Permission.NONE\n\n\tif (!permString) { return permissions }\n\n\tif (permString.includes('C') || permString.includes('K')) { permissions |= Permission.CREATE }\n\n\tif (permString.includes('G')) { permissions |= Permission.READ }\n\n\tif (permString.includes('W') || permString.includes('N') || permString.includes('V')) { permissions |= Permission.UPDATE }\n\n\tif (permString.includes('D')) { permissions |= Permission.DELETE }\n\n\tif (permString.includes('R')) { permissions |= Permission.SHARE }\n\n\treturn permissions\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport enum FileType {\n\tFolder = 'folder',\n\tFile = 'file',\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { join } from 'path'\nimport { Permission } from '../permissions'\nimport { NodeStatus } from './node'\n\nexport interface Attribute { [key: string]: any }\n\nexport interface NodeData {\n\t/** Unique ID */\n\tid?: number\n\n\t/**\n\t * URL to the ressource.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t * or https://domain.com/Photos/picture.jpg\n\t */\n\tsource: string\n\n\t/** Last modified time */\n\tmtime?: Date\n\n\t/** Creation time */\n\tcrtime?: Date\n\n\t/** The mime type Optional for folders only */\n\tmime?: string\n\n\t/** The node size type */\n\tsize?: number\n\n\t/** The node permissions */\n\tpermissions?: Permission\n\n\t/** The owner  UID of this node */\n\towner: string|null\n\n\t/** The node attributes */\n\tattributes?: Attribute\n\n\t/**\n\t * The absolute root of the home relative to the service.\n\t * It is highly recommended to provide that information.\n\t * e.g. /files/emma\n\t */\n\troot?: string\n\n\t/** The node status */\n\tstatus?: NodeStatus\n}\n\n/**\n * Check if a node source is from a specific DAV service\n *\n * @param source The source to check\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const isDavRessource = function(source: string, davService: RegExp): boolean {\n\treturn source.match(davService) !== null\n}\n\n/**\n * Validate Node construct data\n *\n * @param data The node data\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const validateData = (data: NodeData, davService: RegExp) => {\n\tif (data.id && typeof data.id !== 'number') {\n\t\tthrow new Error('Invalid id type of value')\n\t}\n\n\tif (!data.source) {\n\t\tthrow new Error('Missing mandatory source')\n\t}\n\n\ttry {\n\t\t// eslint-disable-next-line no-new\n\t\tnew URL(data.source)\n\t} catch (e) {\n\t\tthrow new Error('Invalid source format, source must be a valid URL')\n\t}\n\n\tif (!data.source.startsWith('http')) {\n\t\tthrow new Error('Invalid source format, only http(s) is supported')\n\t}\n\n\tif (data.mtime && !(data.mtime instanceof Date)) {\n\t\tthrow new Error('Invalid mtime type')\n\t}\n\n\tif (data.crtime && !(data.crtime instanceof Date)) {\n\t\tthrow new Error('Invalid crtime type')\n\t}\n\n\tif (!data.mime || typeof data.mime !== 'string'\n\t\t|| !data.mime.match(/^[-\\w.]+\\/[-+\\w.]+$/gi)) {\n\t\tthrow new Error('Missing or invalid mandatory mime')\n\t}\n\n\t// Allow size to be 0\n\tif ('size' in data && typeof data.size !== 'number' && data.size !== undefined) {\n\t\tthrow new Error('Invalid size type')\n\t}\n\n\t// Allow permissions to be 0\n\tif ('permissions' in data\n\t\t&& data.permissions !== undefined\n\t\t&& !(typeof data.permissions === 'number'\n\t\t\t&& data.permissions >= Permission.NONE\n\t\t\t&& data.permissions <= Permission.ALL\n\t\t)) {\n\t\tthrow new Error('Invalid permissions')\n\t}\n\n\tif (data.owner\n\t\t&& data.owner !== null\n\t\t&& typeof data.owner !== 'string') {\n\t\tthrow new Error('Invalid owner type')\n\t}\n\n\tif (data.attributes && typeof data.attributes !== 'object') {\n\t\tthrow new Error('Invalid attributes type')\n\t}\n\n\tif (data.root && typeof data.root !== 'string') {\n\t\tthrow new Error('Invalid root type')\n\t}\n\n\tif (data.root && !data.root.startsWith('/')) {\n\t\tthrow new Error('Root must start with a leading slash')\n\t}\n\n\tif (data.root && !data.source.includes(data.root)) {\n\t\tthrow new Error('Root must be part of the source')\n\t}\n\n\tif (data.root && isDavRessource(data.source, davService)) {\n\t\tconst service = data.source.match(davService)![0]\n\t\tif (!data.source.includes(join(service, data.root))) {\n\t\t\tthrow new Error('The root must be relative to the service. e.g /files/emma')\n\t\t}\n\t}\n\n\tif (data.status && !Object.values(NodeStatus).includes(data.status)) {\n\t\tthrow new Error('Status must be a valid NodeStatus')\n\t}\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { basename, extname, dirname } from 'path'\nimport { Permission } from '../permissions'\nimport { FileType } from './fileType'\nimport { Attribute, NodeData, isDavRessource, validateData } from './nodeData'\n\nexport enum NodeStatus {\n\t/** This is a new node and it doesn't exists on the filesystem yet */\n\tNEW = 'new',\n\t/** This node has failed and is unavailable  */\n\tFAILED = 'failed',\n\t/** This node is currently loading or have an operation in progress */\n\tLOADING = 'loading',\n\t/** This node is locked and cannot be modified */\n\tLOCKED = 'locked',\n}\n\nexport abstract class Node {\n\n\tprivate _data: NodeData\n\tprivate _attributes: Attribute\n\tprivate _knownDavService = /(remote|public)\\.php\\/(web)?dav/i\n\n\tconstructor(data: NodeData, davService?: RegExp) {\n\t\t// Validate data\n\t\tvalidateData(data, davService || this._knownDavService)\n\n\t\tthis._data = data\n\n\t\tconst handler = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tset: (target: Attribute, prop: string, value: any): any => {\n\t\t\t\t// Edit modification time\n\t\t\t\tthis.updateMtime()\n\t\t\t\t// Apply original changes\n\t\t\t\treturn Reflect.set(target, prop, value)\n\t\t\t},\n\t\t\tdeleteProperty: (target: Attribute, prop: string) => {\n\t\t\t\t// Edit modification time\n\t\t\t\tthis.updateMtime()\n\t\t\t\t// Apply original changes\n\t\t\t\treturn Reflect.deleteProperty(target, prop)\n\t\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t} as ProxyHandler<any>\n\n\t\t// Proxy the attributes to update the mtime on change\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tthis._attributes = new Proxy(data.attributes || {} as any, handler)\n\t\tdelete this._data.attributes\n\n\t\tif (davService) {\n\t\t\tthis._knownDavService = davService\n\t\t}\n\t}\n\n\t/**\n\t * Get the source url to this object\n\t */\n\tget source(): string {\n\t\t// strip any ending slash\n\t\treturn this._data.source.replace(/\\/$/i, '')\n\t}\n\n\t/**\n\t * Get this object name\n\t */\n\tget basename(): string {\n\t\treturn basename(this.source)\n\t}\n\n\t/**\n\t * Get this object's extension\n\t */\n\tget extension(): string|null {\n\t\treturn extname(this.source)\n\t}\n\n\t/**\n\t * Get the directory path leading to this object\n\t * Will use the relative path to root if available\n\t */\n\tget dirname(): string {\n\t\tif (this.root) {\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = this.source.indexOf(this.root)\n\t\t\treturn dirname(this.source.slice(firstMatch + this.root.length) || '/')\n\t\t}\n\n\t\t// This should always be a valid URL\n\t\t// as this is tested in the constructor\n\t\tconst url = new URL(this.source)\n\t\treturn dirname(url.pathname)\n\t}\n\n\t/**\n\t * Is it a file or a folder ?\n\t */\n\tabstract get type(): FileType\n\n\t/**\n\t * Get the file mime\n\t */\n\tget mime(): string|undefined {\n\t\treturn this._data.mime\n\t}\n\n\t/**\n\t * Get the file modification time\n\t */\n\tget mtime(): Date|undefined {\n\t\treturn this._data.mtime\n\t}\n\n\t/**\n\t * Get the file creation time\n\t */\n\tget crtime(): Date|undefined {\n\t\treturn this._data.crtime\n\t}\n\n\t/**\n\t * Get the file size\n\t */\n\tget size(): number|undefined {\n\t\treturn this._data.size\n\t}\n\n\t/**\n\t * Get the file attribute\n\t */\n\tget attributes(): Attribute {\n\t\treturn this._attributes\n\t}\n\n\t/**\n\t * Get the file permissions\n\t */\n\tget permissions(): Permission {\n\t\t// If this is not a dav ressource, we can only read it\n\t\tif (this.owner === null && !this.isDavRessource) {\n\t\t\treturn Permission.READ\n\t\t}\n\n\t\t// If the permissions are not defined, we have none\n\t\treturn this._data.permissions !== undefined\n\t\t\t? this._data.permissions\n\t\t\t: Permission.NONE\n\t}\n\n\t/**\n\t * Get the file owner\n\t */\n\tget owner(): string|null {\n\t\t// Remote ressources have no owner\n\t\tif (!this.isDavRessource) {\n\t\t\treturn null\n\t\t}\n\t\treturn this._data.owner\n\t}\n\n\t/**\n\t * Is this a dav-related ressource ?\n\t */\n\tget isDavRessource(): boolean {\n\t\treturn isDavRessource(this.source, this._knownDavService)\n\t}\n\n\t/**\n\t * Get the dav root of this object\n\t */\n\tget root(): string|null {\n\t\t// If provided (recommended), use the root and strip away the ending slash\n\t\tif (this._data.root) {\n\t\t\treturn this._data.root.replace(/^(.+)\\/$/, '$1')\n\t\t}\n\n\t\t// Use the source to get the root from the dav service\n\t\tif (this.isDavRessource) {\n\t\t\tconst root = dirname(this.source)\n\t\t\treturn root.split(this._knownDavService).pop() || null\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Get the absolute path of this object relative to the root\n\t */\n\tget path(): string {\n\t\tif (this.root) {\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = this.source.indexOf(this.root)\n\t\t\treturn this.source.slice(firstMatch + this.root.length) || '/'\n\t\t}\n\t\treturn (this.dirname + '/' + this.basename).replace(/\\/\\//g, '/')\n\t}\n\n\t/**\n\t * Get the node id if defined.\n\t * Will look for the fileid in attributes if undefined.\n\t */\n\tget fileid(): number|undefined {\n\t\treturn this._data?.id || this.attributes?.fileid\n\t}\n\n\t/**\n\t * Get the node status.\n\t */\n\tget status(): NodeStatus|undefined {\n\t\treturn this._data?.status\n\t}\n\n\t/**\n\t * Set the node status.\n\t */\n\tset status(status: NodeStatus|undefined) {\n\t\tthis._data.status = status\n\t}\n\n\t/**\n\t * Move the node to a new destination\n\t *\n\t * @param {string} destination the new source.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t */\n\tmove(destination: string) {\n\t\tvalidateData({ ...this._data, source: destination }, this._knownDavService)\n\t\tthis._data.source = destination\n\t\tthis.updateMtime()\n\t}\n\n\t/**\n\t * Rename the node\n\t * This aliases the move method for easier usage\n\t *\n\t * @param basename The new name of the node\n\t */\n\trename(basename: string) {\n\t\tif (basename.includes('/')) {\n\t\t\tthrow new Error('Invalid basename')\n\t\t}\n\t\tthis.move(dirname(this.source) + '/' + basename)\n\t}\n\n\t/**\n\t * Update the mtime if exists.\n\t */\n\tprivate updateMtime() {\n\t\tif (this._data.mtime) {\n\t\t\tthis._data.mtime = new Date()\n\t\t}\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileType } from './fileType'\nimport { Node } from './node'\n\nexport class File extends Node {\n\n\tget type(): FileType {\n\t\treturn FileType.File\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileType } from './fileType'\nimport { Node } from './node'\nimport { NodeData } from './nodeData'\n\nexport class Folder extends Node {\n\n\tconstructor(data: NodeData) {\n\t\t// enforcing mimes\n\t\tsuper({\n\t\t\t...data,\n\t\t\tmime: 'httpd/unix-directory',\n\t\t})\n\t}\n\n\tget type(): FileType {\n\t\treturn FileType.Folder\n\t}\n\n\tget extension(): string|null {\n\t\treturn null\n\t}\n\n\tget mime(): string {\n\t\treturn 'httpd/unix-directory'\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { DAVResultResponseProps, FileStat, Response, ResponseDataDetailed, WebDAVClient } from 'webdav'\nimport type { Node } from '../files/node'\n\nimport { File } from '../files/file'\nimport { Folder } from '../files/folder'\nimport { NodeData } from '../files/nodeData'\nimport { davParsePermissions } from './davPermissions'\nimport { davGetFavoritesReport } from './davProperties'\n\nimport { getCurrentUser, getRequestToken } from '@nextcloud/auth'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { createClient, getPatcher, RequestOptions } from 'webdav'\nimport { request } from 'webdav/dist/node/request.js'\n\n/**\n * Nextcloud DAV result response\n */\ninterface ResponseProps extends DAVResultResponseProps {\n\tpermissions: string\n\tfileid: number\n\tsize: number\n}\n\n/**\n * The DAV root path for the current user\n */\nexport const davRootPath = `/files/${getCurrentUser()?.uid}`\n\n/**\n * The DAV remote URL used as base URL for the WebDAV client\n */\nexport const davRemoteURL = generateRemoteUrl('dav')\n\n/**\n * Get a WebDAV client configured to include the Nextcloud request token\n *\n * @param remoteURL The DAV server remote URL\n */\nexport const davGetClient = function(remoteURL = davRemoteURL) {\n\tconst client = createClient(remoteURL, {\n\t\theaders: {\n\t\t\trequesttoken: getRequestToken() || '',\n\t\t},\n\t})\n\n\t/**\n\t * Allow to override the METHOD to support dav REPORT\n\t *\n\t * @see https://github.com/perry-mitchell/webdav-client/blob/8d9694613c978ce7404e26a401c39a41f125f87f/source/request.ts\n\t */\n\tconst patcher = getPatcher()\n\t// https://github.com/perry-mitchell/hot-patcher/issues/6\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tpatcher.patch('request', (options: RequestOptions): Promise<Response> => {\n\t\tif (options.headers?.method) {\n\t\t\toptions.method = options.headers.method\n\t\t\tdelete options.headers.method\n\t\t}\n\t\treturn request(options)\n\t})\n\treturn client\n}\n\n/**\n * Use WebDAV to query for favorite Nodes\n *\n * @param davClient The WebDAV client to use for performing the request\n * @param path Base path for the favorites, if unset all favorites are queried\n * @param davRoot The root path for the DAV user (defaults to `davRootPath`)\n * @example\n * ```js\n * import { davGetClient, davRootPath, getFavoriteNodes } from '@nextcloud/files'\n *\n * const client = davGetClient()\n * // query favorites for the root\n * const favorites = await getFavoriteNodes(client)\n * // which is the same as writing:\n * const favorites = await getFavoriteNodes(client, '/', davRootPath)\n * ```\n */\nexport const getFavoriteNodes = async (davClient: WebDAVClient, path = '/', davRoot = davRootPath) => {\n\tconst contentsResponse = await davClient.getDirectoryContents(`${davRoot}${path}`, {\n\t\tdetails: true,\n\t\tdata: davGetFavoritesReport(),\n\t\theaders: {\n\t\t\t// see davGetClient for patched webdav client\n\t\t\tmethod: 'REPORT',\n\t\t},\n\t\tincludeSelf: true,\n\t}) as ResponseDataDetailed<FileStat[]>\n\n\treturn contentsResponse.data\n\t\t.filter(node => node.filename !== path) // exclude current dir\n\t\t.map((result) => davResultToNode(result, davRoot))\n}\n\n/**\n * Covert DAV result `FileStat` to `Node`\n *\n * @param node The DAV result\n * @param filesRoot The DAV files root path\n * @param remoteURL The DAV server remote URL (same as on `davGetClient`)\n */\nexport const davResultToNode = function(node: FileStat, filesRoot = davRootPath, remoteURL = davRemoteURL): Node {\n\tconst props = node.props as ResponseProps\n\tconst permissions = davParsePermissions(props?.permissions)\n\tconst owner = getCurrentUser()?.uid as string\n\n\tconst nodeData: NodeData = {\n\t\tid: (props?.fileid as number) || 0,\n\t\tsource: `${remoteURL}${node.filename}`,\n\t\tmtime: new Date(Date.parse(node.lastmod)),\n\t\tmime: node.mime as string,\n\t\tsize: props?.size || Number.parseInt(props.getcontentlength || '0'),\n\t\tpermissions,\n\t\towner,\n\t\troot: filesRoot,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...props,\n\t\t\thasPreview: props?.['has-preview'],\n\t\t},\n\t}\n\n\tdelete nodeData.attributes?.props\n\n\treturn node.type === 'file' ? new File(nodeData) : new Folder(nodeData)\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { View } from './view'\nimport logger from '../utils/logger'\n\nexport class Navigation {\n\n\tprivate _views: View[] = []\n\tprivate _currentView: View | null = null\n\n\tregister(view: View) {\n\t\tif (this._views.find(search => search.id === view.id)) {\n\t\t\tthrow new Error(`View id ${view.id} is already registered`)\n\t\t}\n\n\t\tthis._views.push(view)\n\t}\n\n\tremove(id: string) {\n\t\tconst index = this._views.findIndex(view => view.id === id)\n\t\tif (index !== -1) {\n\t\t\tthis._views.splice(index, 1)\n\t\t}\n\t}\n\n\tget views(): View[] {\n\t\treturn this._views\n\t}\n\n\tsetActive(view: View | null) {\n\t\tthis._currentView = view\n\t}\n\n\tget active(): View | null {\n\t\treturn this._currentView\n\t}\n\n}\n\nexport const getNavigation = function(): Navigation {\n\tif (typeof window._nc_navigation === 'undefined') {\n\t\twindow._nc_navigation = new Navigation()\n\t\tlogger.debug('Navigation service initialized')\n\t}\n\n\treturn window._nc_navigation\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { View } from './view'\nimport { Node } from '../files/node'\n\ninterface ColumnData {\n\t/** Unique column ID */\n\tid: string\n\t/** Translated column title */\n\ttitle: string\n\t/** The content of the cell. The element will be appended within */\n\trender: (node: Node, view: View) => HTMLElement\n\t/** Function used to sort Nodes between them */\n\tsort?: (nodeA: Node, nodeB: Node) => number\n\t/**\n\t * Custom summary of the column to display at the end of the list.\n\t * Will not be displayed if  nothing is provided\n\t */\n\tsummary?: (node: Node[], view: View) => string\n}\n\nexport class Column implements ColumnData {\n\n\tprivate _column: ColumnData\n\n\tconstructor(column: ColumnData) {\n\t\tisValidColumn(column)\n\t\tthis._column = column\n\t}\n\n\tget id() {\n\t\treturn this._column.id\n\t}\n\n\tget title() {\n\t\treturn this._column.title\n\t}\n\n\tget render() {\n\t\treturn this._column.render\n\t}\n\n\tget sort() {\n\t\treturn this._column.sort\n\t}\n\n\tget summary() {\n\t\treturn this._column.summary\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the Column interface requirements.\n *\n * @param {ColumnData} column the column to check\n * @return {boolean} true if the column is valid\n */\nconst isValidColumn = function(column: ColumnData): boolean {\n\tif (!column.id || typeof column.id !== 'string') {\n\t\tthrow new Error('A column id is required')\n\t}\n\n\tif (!column.title || typeof column.title !== 'string') {\n\t\tthrow new Error('A column title is required')\n\t}\n\n\tif (!column.render || typeof column.render !== 'function') {\n\t\tthrow new Error('A render function is required')\n\t}\n\n\t// Optional properties\n\tif (column.sort && typeof column.sort !== 'function') {\n\t\tthrow new Error('Column sortFunction must be a function')\n\t}\n\n\tif (column.summary && typeof column.summary !== 'function') {\n\t\tthrow new Error('Column summary must be a function')\n\t}\n\n\treturn true\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import {XMLParser, XMLValidator} from 'fast-xml-parser';\n\nexport default function isSvg(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\tstring = string.trim();\n\n\tif (string.length === 0) {\n\t\treturn false;\n\t}\n\n\t// Has to be `!==` as it can also return an object with error info.\n\tif (XMLValidator.validate(string) !== true) {\n\t\treturn false;\n\t}\n\n\tlet jsonObject;\n\tconst parser = new XMLParser();\n\n\ttry {\n\t\tjsonObject = parser.parse(string);\n\t} catch {\n\t\treturn false;\n\t}\n\n\tif (!jsonObject) {\n\t\treturn false;\n\t}\n\n\tif (!('svg' in jsonObject)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* eslint-disable no-use-before-define */\nimport type { Folder, Node } from '@nextcloud/files'\nimport isSvg from 'is-svg'\n\nimport { Column } from './column.js'\n\nexport type ContentsWithRoot = {\n\tfolder: Folder,\n\tcontents: Node[]\n}\n\ninterface ViewData {\n\t/** Unique view ID */\n\tid: string\n\t/** Translated view name */\n\tname: string\n\t/** Translated accessible description of the view */\n\tcaption?: string\n\n\t/** Translated title of the empty view */\n\temptyTitle?: string\n\t/** Translated description of the empty view */\n\temptyCaption?: string\n\n\t/**\n\t * Method return the content of the  provided path\n\t * This ideally should be a cancellable promise.\n\t * promise.cancel(reason) will be called when the directory\n\t * change and the promise is not resolved yet.\n\t * You _must_ also return the current directory\n\t * information alongside with its content.\n\t */\n\tgetContents: (path: string) => Promise<ContentsWithRoot>\n\t/** The view icon as an inline svg */\n\ticon: string\n\t/** The view order */\n\torder: number\n\n\t/**\n\t * Custom params to give to the router on click\n\t * If defined, will be treated as a dummy view and\n\t * will just redirect and not fetch any contents.\n\t */\n\tparams?: Record<string, string>\n\n\t/**\n\t * This view column(s). Name and actions are\n\t * by default always included\n\t */\n\tcolumns?: Column[]\n\t/** The empty view element to render your empty content into */\n\temptyView?: (div: HTMLDivElement) => void\n\t/** The parent unique ID */\n\tparent?: string\n\t/** This view is sticky (sent at the bottom) */\n\tsticky?: boolean\n\n\t/**\n\t * This view has children and is expanded (by default)\n\t * or not. This will be overridden by user config.\n\t */\n\texpanded?: boolean\n\n\t/**\n\t * Will be used as default if the user\n\t * haven't customized their sorting column\n\t */\n\tdefaultSortKey?: string\n}\n\nexport class View implements ViewData {\n\n\tprivate _view: ViewData\n\n\tconstructor(view: ViewData) {\n\t\tisValidView(view)\n\t\tthis._view = view\n\t}\n\n\tget id() {\n\t\treturn this._view.id\n\t}\n\n\tget name() {\n\t\treturn this._view.name\n\t}\n\n\tget caption() {\n\t\treturn this._view.caption\n\t}\n\n\tget emptyTitle() {\n\t\treturn this._view.emptyTitle\n\t}\n\n\tget emptyCaption() {\n\t\treturn this._view.emptyCaption\n\t}\n\n\tget getContents() {\n\t\treturn this._view.getContents\n\t}\n\n\tget icon() {\n\t\treturn this._view.icon\n\t}\n\n\tset icon(icon) {\n\t\tthis._view.icon = icon\n\t}\n\n\tget order() {\n\t\treturn this._view.order\n\t}\n\n\tset order(order) {\n\t\tthis._view.order = order\n\t}\n\n\tget params() {\n\t\treturn this._view.params\n\t}\n\n\tset params(params) {\n\t\tthis._view.params = params\n\t}\n\n\tget columns() {\n\t\treturn this._view.columns\n\t}\n\n\tget emptyView() {\n\t\treturn this._view.emptyView\n\t}\n\n\tget parent() {\n\t\treturn this._view.parent\n\t}\n\n\tget sticky() {\n\t\treturn this._view.sticky\n\t}\n\n\tget expanded() {\n\t\treturn this._view.expanded\n\t}\n\n\tset expanded(expanded: boolean | undefined) {\n\t\tthis._view.expanded = expanded\n\t}\n\n\tget defaultSortKey() {\n\t\treturn this._view.defaultSortKey\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the View interface requirements.\n *\n * @param {ViewData} view the view to check\n * @return {boolean} true if the column is valid\n * @throws {Error} if the view is not valid\n */\nconst isValidView = function(view: ViewData): boolean {\n\tif (!view.id || typeof view.id !== 'string') {\n\t\tthrow new Error('View id is required and must be a string')\n\t}\n\n\tif (!view.name || typeof view.name !== 'string') {\n\t\tthrow new Error('View name is required and must be a string')\n\t}\n\n\tif (view.columns && view.columns.length > 0\n\t\t&& (!view.caption || typeof view.caption !== 'string')) {\n\t\tthrow new Error('View caption is required for top-level views and must be a string')\n\t}\n\n\tif (!view.getContents || typeof view.getContents !== 'function') {\n\t\tthrow new Error('View getContents is required and must be a function')\n\t}\n\n\tif (!view.icon || typeof view.icon !== 'string' || !isSvg(view.icon)) {\n\t\tthrow new Error('View icon is required and must be a valid svg string')\n\t}\n\n\tif (!('order' in view) || typeof view.order !== 'number') {\n\t\tthrow new Error('View order is required and must be a number')\n\t}\n\n\t// Optional properties\n\tif (view.columns) {\n\t\tview.columns.forEach((column) => {\n\t\t\tif (!(column instanceof Column)) {\n\t\t\t\tthrow new Error('View columns must be an array of Column. Invalid column found')\n\t\t\t}\n\t\t})\n\t}\n\n\tif (view.emptyView && typeof view.emptyView !== 'function') {\n\t\tthrow new Error('View emptyView must be a function')\n\t}\n\n\tif (view.parent && typeof view.parent !== 'string') {\n\t\tthrow new Error('View parent must be a string')\n\t}\n\n\tif ('sticky' in view && typeof view.sticky !== 'boolean') {\n\t\tthrow new Error('View sticky must be a boolean')\n\t}\n\n\tif ('expanded' in view && typeof view.expanded !== 'boolean') {\n\t\tthrow new Error('View expanded must be a boolean')\n\t}\n\n\tif (view.defaultSortKey && typeof view.defaultSortKey !== 'string') {\n\t\tthrow new Error('View defaultSortKey must be a string')\n\t}\n\n\treturn true\n}\n","/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { type Entry, getNewFileMenu } from './newFileMenu'\nimport { type Folder } from './files/folder'\n\nexport { formatFileSize } from './humanfilesize'\nexport { FileAction, getFileActions, registerFileAction, DefaultType } from './fileAction'\nexport { Header, getFileListHeaders, registerFileListHeaders } from './fileListHeaders'\nexport { type Entry } from './newFileMenu'\nexport { Permission } from './permissions'\n\nexport * from './dav/davProperties'\nexport * from './dav/davPermissions'\nexport * from './dav/dav'\n\nexport { FileType } from './files/fileType'\nexport { File } from './files/file'\nexport { Folder } from './files/folder'\nexport { Node, NodeStatus } from './files/node'\n\nexport * from './navigation/navigation'\nexport * from './navigation/column'\nexport * from './navigation/view'\n\n/**\n * Add a new menu entry to the upload manager menu\n *\n * @param entry The new file menu entry\n */\nexport const addNewFileMenuEntry = function(entry: Entry) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.registerEntry(entry)\n}\n\n/**\n * Remove a previously registered entry from the upload menu\n *\n * @param entry Entry to remove (or name of entry)\n */\nexport const removeNewFileMenuEntry = function(entry: Entry | string) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.unregisterEntry(entry)\n}\n\n/**\n * Get the list of registered entries from the upload menu\n *\n * @param {Folder} context the creation context. Usually the current folder FileInfo\n */\nexport const getNewFileMenuEntries = function(context?: Folder) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.getEntries(context)\n}\n"],"names":["getLogger","user","getLoggerBuilder","logger","getCurrentUser","NewFileMenu","entry","entryIndex","context","id","getNewFileMenu","humanList","humanListBinary","formatFileSize","size","skipSmallSizes","binaryPrefixes","order","readableFormat","relativeSize","getCanonicalLocale","DefaultType","FileAction","action","registerFileAction","search","getFileActions","Header","header","registerFileListHeaders","getFileListHeaders","Permission","defaultDavProperties","defaultDavNamespaces","registerDavProperty","prop","namespace","namespaces","ns","getDavProperties","getDavNameSpaces","davGetDefaultPropfind","davGetFavoritesReport","davGetRecentSearch","lastModified","davParsePermissions","permString","permissions","FileType","isDavRessource","source","davService","validateData","data","service","join","NodeStatus","Node","handler","target","value","basename","extname","firstMatch","dirname","url","status","destination","File","Folder","davRootPath","davRemoteURL","generateRemoteUrl","davGetClient","remoteURL","client","createClient","getRequestToken","getPatcher","options","request","getFavoriteNodes","davClient","path","davRoot","node","result","davResultToNode","filesRoot","props","owner","nodeData","Navigation","view","index","getNavigation","Column","column","isValidColumn","nameStartChar","nameChar","nameRegexp","regexName","getAllMatches","string","regex","matches","match","allmatches","len","isName","exports","v","obj","a","arrayMode","keys","i","util","require$$0","defaultOptions","validator","xmlData","tags","tagFound","reachedRoot","readPI","tagStartPos","readCommentAndCDATA","closingTag","tagName","validateTagName","msg","getErrorObject","getLineNumberForPosition","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","otg","openPos","afterAmp","validateAmpersand","isWhiteSpace","t","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","tagClosed","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","validateNumberAmpersand","re","count","code","message","lineNumber","lines","val","jPath","attrs","buildOptions","OptionsBuilder","XmlNode","key","xmlNode","readDocType","entities","hasBody","comment","exp","isEntity","readEntityExp","validateEntityName","isElement","isAttlist","isNotation","isComment","entityName","name","DocTypeReader","hexRegex","numRegex","consider","toNumber","str","trimmedStr","sign","leadingZeros","numTrimmedByZeros","trimZeros","eNotation","num","numStr","strnum","require$$1","require$$2","require$$3","OrderedObjParser$1","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","newval","parseValue","prefix","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","endIndex","tagExp","attrExpPresent","lastTag","tagContent","entity","stopNodes","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","ch","errMsg","closingIndex","removeNSPrefix","separatorIndex","startIndex","openTagCount","shouldParse","OrderedObjParser_1","OrderedObjParser","prettify","compress","arr","text","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","textNodeName","propCount","node2json","XMLParser$1","validationOption","orderedObjParser","orderedResult","XMLParser_1","XMLParser","EOL","toXml","jArray","indentation","arrToStr","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","attr","attrVal","textValue","orderedJs2Xml","buildFromOrderedJs","Builder","isAttribute","processTextOrObjNode","indentate","jObj","level","arrLen","listTagVal","j","item","Ks","L","object","tagEndExp","piClosingChar","closeTag","json2xml","XMLBuilder","fxp","isSvg","XMLValidator","jsonObject","parser","View","isValidView","icon","params","expanded","addNewFileMenuEntry","removeNewFileMenuEntry","getNewFileMenuEntries"],"mappings":"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","x_google_ignoreList":[16,17,18,19,20,21,22,23,24,25,26,27,28]}