/**
 * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @author John Molakvoæ <skjnldsv@protonmail.com>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
import { View } from './view';
import { Node } from '../files/node';
interface ColumnData {
    /** Unique column ID */
    id: string;
    /** Translated column title */
    title: string;
    /** The content of the cell. The element will be appended within */
    render: (node: Node, view: View) => HTMLElement;
    /** Function used to sort Nodes between them */
    sort?: (nodeA: Node, nodeB: Node) => number;
    /**
     * Custom summary of the column to display at the end of the list.
     * Will not be displayed if  nothing is provided
     */
    summary?: (node: Node[], view: View) => string;
}
export declare class Column implements ColumnData {
    private _column;
    constructor(column: ColumnData);
    get id(): string;
    get title(): string;
    get render(): (node: Node, view: View) => HTMLElement;
    get sort(): ((nodeA: Node, nodeB: Node) => number) | undefined;
    get summary(): ((node: Node[], view: View) => string) | undefined;
}
export {};
