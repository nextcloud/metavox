{"version":3,"file":"index.cjs","sources":["../lib/utils/logger.ts","../lib/newFileMenu.ts","../lib/humanfilesize.ts","../lib/fileAction.ts","../lib/fileListHeaders.ts","../lib/permissions.ts","../lib/dav/davProperties.ts","../lib/dav/davPermissions.ts","../lib/files/fileType.ts","../lib/files/nodeData.ts","../lib/files/node.ts","../lib/files/file.ts","../lib/files/folder.ts","../lib/dav/dav.ts","../lib/navigation/navigation.ts","../lib/navigation/column.ts","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/strnum/strnum.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/is-svg/index.js","../lib/navigation/view.ts","../lib/index.ts"],"sourcesContent":["/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nconst getLogger = user => {\n\tif (user === null) {\n\t\treturn getLoggerBuilder()\n\t\t\t.setApp('files')\n\t\t\t.build()\n\t}\n\treturn getLoggerBuilder()\n\t\t.setApp('files')\n\t\t.setUid(user.uid)\n\t\t.build()\n}\n\nexport default getLogger(getCurrentUser())\n","/**\n * @copyright Copyright (c) 2021 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Folder } from './files/folder'\nimport logger from './utils/logger'\n\nexport interface Entry {\n\t/** Unique ID */\n\tid: string\n\t/** Translatable string displayed in the menu */\n\tdisplayName: string\n\t/** Default new file name */\n\ttemplateName?: string\n\t/**\n\t * Condition wether this entry is shown or not\n\t * @param {Folder} context the creation context. Usually the current folder\n\t */\n\tif?: (context: Folder) => boolean\n\t/**\n\t * Either iconSvgInline or iconClass must be defined\n\t * Svg as inline string. <svg><path fill=\"...\" /></svg>\n\t */\n\ticonSvgInline?: string\n\t/**\n\t * Existing icon css class\n\t * @deprecated use iconSvgInline instead\n\t */\n\ticonClass?: string\n\t/**\n\t * Function to be run after creation\n\t * @param {Folder} context the creation context. Usually the current folder\n\t * @param {Node[]} content list of file/folders present in the context folder\n\t */\n\thandler: (context: Folder, content: Node[]) => void\n}\n\nexport class NewFileMenu {\n\n\tprivate _entries: Array<Entry> = []\n\n\tpublic registerEntry(entry: Entry) {\n\t\tthis.validateEntry(entry)\n\t\tthis._entries.push(entry)\n\t}\n\n\tpublic unregisterEntry(entry: Entry | string) {\n\t\tconst entryIndex = typeof entry === 'string'\n\t\t\t? this.getEntryIndex(entry)\n\t\t\t: this.getEntryIndex(entry.id)\n\n\t\tif (entryIndex === -1) {\n\t\t\tlogger.warn('Entry not found, nothing removed', { entry, entries: this.getEntries() })\n\t\t\treturn\n\t\t}\n\n\t\tthis._entries.splice(entryIndex, 1)\n\t}\n\n\t/**\n\t * Get the list of registered entries\n\t *\n\t * @param {Folder} context the creation context. Usually the current folder\n\t */\n\tpublic getEntries(context?: Folder): Array<Entry> {\n\t\tif (context) {\n\t\t\treturn this._entries\n\t\t\t\t.filter(entry => typeof entry.if === 'function' ? entry.if(context) : true)\n\t\t}\n\t\treturn this._entries\n\t}\n\n\tprivate getEntryIndex(id: string): number {\n\t\treturn this._entries.findIndex(entry => entry.id === id)\n\t}\n\n\tprivate validateEntry(entry: Entry) {\n\t\tif (!entry.id || !entry.displayName || !(entry.iconSvgInline || entry.iconClass || entry.handler)) {\n\t\t\tthrow new Error('Invalid entry')\n\t\t}\n\n\t\tif (typeof entry.id !== 'string'\n\t\t\t|| typeof entry.displayName !== 'string') {\n\t\t\tthrow new Error('Invalid id or displayName property')\n\t\t}\n\n\t\tif ((entry.iconClass && typeof entry.iconClass !== 'string')\n\t\t\t|| (entry.iconSvgInline && typeof entry.iconSvgInline !== 'string')) {\n\t\t\tthrow new Error('Invalid icon provided')\n\t\t}\n\n\t\tif (entry.if !== undefined && typeof entry.if !== 'function') {\n\t\t\tthrow new Error('Invalid if property')\n\t\t}\n\n\t\tif (entry.templateName && typeof entry.templateName !== 'string') {\n\t\t\tthrow new Error('Invalid templateName property')\n\t\t}\n\n\t\tif (entry.handler && typeof entry.handler !== 'function') {\n\t\t\tthrow new Error('Invalid handler property')\n\t\t}\n\n\t\tif (!entry.templateName && !entry.handler) {\n\t\t\tthrow new Error('At least a templateName or a handler must be provided')\n\t\t}\n\n\t\tif (this.getEntryIndex(entry.id) !== -1) {\n\t\t\tthrow new Error('Duplicate entry')\n\t\t}\n\t}\n\n}\n\nexport const getNewFileMenu = function(): NewFileMenu {\n\tif (typeof window._nc_newfilemenu === 'undefined') {\n\t\twindow._nc_newfilemenu = new NewFileMenu()\n\t\tlogger.debug('NewFileMenu initialized')\n\t}\n\treturn window._nc_newfilemenu\n}\n","/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCanonicalLocale } from '@nextcloud/l10n'\n\nconst humanList = ['B', 'KB', 'MB', 'GB', 'TB', 'PB']\nconst humanListBinary = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB']\n\n/**\n * Format a file size in a human-like format. e.g. 42GB\n *\n * @param size in bytes\n * @param skipSmallSizes avoid rendering tiny sizes and return '< 1 KB' instead\n * @param binaryPrefixes True if binary prefixes like `KiB` should be used (size base 2)\n */\nexport function formatFileSize(size: number|string, skipSmallSizes = false, binaryPrefixes = false): string {\n\n\tif (typeof size === 'string') {\n\t\tsize = Number(size)\n\t}\n\n\t/*\n\t* @note This block previously used Log base 1024, per IEC 80000-13;\n\t* however, the wrong prefix was used. Now we use decimal calculation\n\t* with base 1000 per the SI. Base 1024 calculation with binary\n\t* prefixes is optional, but has yet to be added to the UI.\n\t*/\n\t// Calculate Log with base 1024 or 1000: size = base ** order\n\tlet order = size > 0 ? Math.floor(Math.log(size) / Math.log(binaryPrefixes ? 1024 : 1000)) : 0\n\t// Stay in range of the byte sizes that are defined\n\torder = Math.min((binaryPrefixes ? humanListBinary.length : humanList.length) - 1, order)\n\tconst readableFormat = binaryPrefixes ? humanListBinary[order] : humanList[order]\n\tlet relativeSize = (size / Math.pow(binaryPrefixes ? 1024 : 1000, order)).toFixed(1)\n\n\tif (skipSmallSizes === true && order === 0) {\n\t\treturn (relativeSize !== '0.0' ? '< 1 ' : '0 ') + (binaryPrefixes ? humanListBinary[1] : humanList[1])\n\t}\n\n\tif (order < 2) {\n\t\trelativeSize = parseFloat(relativeSize).toFixed(0)\n\t} else {\n\t\trelativeSize = parseFloat(relativeSize).toLocaleString(getCanonicalLocale())\n\t}\n\n\treturn relativeSize + ' ' + readableFormat\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Node } from './files/node'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport enum DefaultType {\n\tDEFAULT = 'default',\n\tHIDDEN = 'hidden',\n}\n\ninterface FileActionData {\n\t/** Unique ID */\n\tid: string\n\t/** Translatable string displayed in the menu */\n\tdisplayName: (files: Node[], view: View) => string\n\t/** Svg as inline string. <svg><path fill=\"...\" /></svg> */\n\ticonSvgInline: (files: Node[], view: View) => string\n\t/** Condition wether this action is shown or not */\n\tenabled?: (files: Node[], view: View) => boolean\n\t/**\n\t * Function executed on single file action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texec: (file: Node, view: View, dir: string) => Promise<boolean|null>,\n\t/**\n\t * Function executed on multiple files action\n\t * @return true if the action was executed successfully,\n\t * false otherwise and null if the action is silent/undefined.\n\t * @throws Error if the action failed\n\t */\n\texecBatch?: (files: Node[], view: View, dir: string) => Promise<(boolean|null)[]>\n\t/** This action order in the list */\n\torder?: number,\n\n\t/**\n\t * Make this action the default.\n\t * If multiple actions are default, the first one\n\t * will be used. The other ones will be put as first\n\t * entries in the actions menu iff DefaultType.Hidden is not used.\n\t * A DefaultType.Hidden action will never be shown\n\t * in the actions menu even if another action takes\n\t * its place as default.\n\t */\n\tdefault?: DefaultType,\n\t/**\n\t * If true, the renderInline function will be called\n\t */\n\tinline?: (file: Node, view: View) => boolean,\n\t/**\n\t * If defined, the returned html element will be\n\t * appended before the actions menu.\n\t */\n\trenderInline?: (file: Node, view: View) => Promise<HTMLElement | null>,\n}\n\nexport class FileAction {\n\n\tprivate _action: FileActionData\n\n\tconstructor(action: FileActionData) {\n\t\tthis.validateAction(action)\n\t\tthis._action = action\n\t}\n\n\tget id() {\n\t\treturn this._action.id\n\t}\n\n\tget displayName() {\n\t\treturn this._action.displayName\n\t}\n\n\tget iconSvgInline() {\n\t\treturn this._action.iconSvgInline\n\t}\n\n\tget enabled() {\n\t\treturn this._action.enabled\n\t}\n\n\tget exec() {\n\t\treturn this._action.exec\n\t}\n\n\tget execBatch() {\n\t\treturn this._action.execBatch\n\t}\n\n\tget order() {\n\t\treturn this._action.order\n\t}\n\n\tget default() {\n\t\treturn this._action.default\n\t}\n\n\tget inline() {\n\t\treturn this._action.inline\n\t}\n\n\tget renderInline() {\n\t\treturn this._action.renderInline\n\t}\n\n\tprivate validateAction(action: FileActionData) {\n\t\tif (!action.id || typeof action.id !== 'string') {\n\t\t\tthrow new Error('Invalid id')\n\t\t}\n\n\t\tif (!action.displayName || typeof action.displayName !== 'function') {\n\t\t\tthrow new Error('Invalid displayName function')\n\t\t}\n\n\t\tif (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n\t\t\tthrow new Error('Invalid iconSvgInline function')\n\t\t}\n\n\t\tif (!action.exec || typeof action.exec !== 'function') {\n\t\t\tthrow new Error('Invalid exec function')\n\t\t}\n\n\t\t// Optional properties --------------------------------------------\n\t\tif ('enabled' in action && typeof action.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled function')\n\t\t}\n\n\t\tif ('execBatch' in action && typeof action.execBatch !== 'function') {\n\t\t\tthrow new Error('Invalid execBatch function')\n\t\t}\n\n\t\tif ('order' in action && typeof action.order !== 'number') {\n\t\t\tthrow new Error('Invalid order')\n\t\t}\n\n\t\tif (action.default && !Object.values(DefaultType).includes(action.default)) {\n\t\t\tthrow new Error('Invalid default')\n\t\t}\n\n\t\tif ('inline' in action && typeof action.inline !== 'function') {\n\t\t\tthrow new Error('Invalid inline function')\n\t\t}\n\n\t\tif ('renderInline' in action && typeof action.renderInline !== 'function') {\n\t\t\tthrow new Error('Invalid renderInline function')\n\t\t}\n\t}\n\n}\n\nexport const registerFileAction = function(action: FileAction): void {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_fileactions.find(search => search.id === action.id)) {\n\t\tlogger.error(`FileAction ${action.id} already registered`, { action })\n\t\treturn\n\t}\n\n\twindow._nc_fileactions.push(action)\n}\n\nexport const getFileActions = function(): FileAction[] {\n\tif (typeof window._nc_fileactions === 'undefined') {\n\t\twindow._nc_fileactions = []\n\t\tlogger.debug('FileActions initialized')\n\t}\n\n\treturn window._nc_fileactions\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { Folder } from './files/folder'\nimport { View } from './navigation/view'\nimport logger from './utils/logger'\n\nexport interface HeaderData {\n\t/** Unique ID */\n\tid: string\n\t/** Order */\n\torder: number\n\t/** Condition wether this header is shown or not */\n\tenabled?: (folder: Folder, view: View) => boolean\n\t/** Executed when file list is initialized */\n\trender: (el: HTMLElement, folder: Folder, view: View) => void\n\t/** Executed when root folder changed */\n\tupdated(folder: Folder, view: View)\n}\n\nexport class Header {\n\n\tprivate _header: HeaderData\n\n\tconstructor(header: HeaderData) {\n\t\tthis.validateHeader(header)\n\t\tthis._header = header\n\t}\n\n\tget id() {\n\t\treturn this._header.id\n\t}\n\n\tget order() {\n\t\treturn this._header.order\n\t}\n\n\tget enabled() {\n\t\treturn this._header.enabled\n\t}\n\n\tget render() {\n\t\treturn this._header.render\n\t}\n\n\tget updated() {\n\t\treturn this._header.updated\n\t}\n\n\tprivate validateHeader(header: HeaderData) {\n\t\tif (!header.id || !header.render || !header.updated) {\n\t\t\tthrow new Error('Invalid header: id, render and updated are required')\n\t\t}\n\n\t\tif (typeof header.id !== 'string') {\n\t\t\tthrow new Error('Invalid id property')\n\t\t}\n\n\t\tif (header.enabled !== undefined && typeof header.enabled !== 'function') {\n\t\t\tthrow new Error('Invalid enabled property')\n\t\t}\n\n\t\tif (header.render && typeof header.render !== 'function') {\n\t\t\tthrow new Error('Invalid render property')\n\t\t}\n\n\t\tif (header.updated && typeof header.updated !== 'function') {\n\t\t\tthrow new Error('Invalid updated property')\n\t\t}\n\t}\n\n}\n\nexport const registerFileListHeaders = function(header: Header): void {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\t// Check duplicates\n\tif (window._nc_filelistheader.find(search => search.id === header.id)) {\n\t\tlogger.error(`Header ${header.id} already registered`, { header })\n\t\treturn\n\t}\n\n\twindow._nc_filelistheader.push(header)\n}\n\nexport const getFileListHeaders = function(): Header[] {\n\tif (typeof window._nc_filelistheader === 'undefined') {\n\t\twindow._nc_filelistheader = []\n\t\tlogger.debug('FileListHeaders initialized')\n\t}\n\n\treturn window._nc_filelistheader\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * Node permissions\n */\nexport enum Permission {\n\tNONE = 0,\n\tCREATE = 4,\n\tREAD = 1,\n\tUPDATE = 2,\n\tDELETE = 8,\n\tSHARE = 16,\n\tALL = 31,\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getCurrentUser } from '@nextcloud/auth'\nimport logger from '../utils/logger'\n\nexport type DavProperty = { [key: string]: string }\n\nexport const defaultDavProperties = [\n\t'd:getcontentlength',\n\t'd:getcontenttype',\n\t'd:getetag',\n\t'd:getlastmodified',\n\t'd:quota-available-bytes',\n\t'd:resourcetype',\n\t'nc:has-preview',\n\t'nc:is-encrypted',\n\t'nc:mount-type',\n\t'nc:share-attributes',\n\t'oc:comments-unread',\n\t'oc:favorite',\n\t'oc:fileid',\n\t'oc:owner-display-name',\n\t'oc:owner-id',\n\t'oc:permissions',\n\t'oc:share-types',\n\t'oc:size',\n\t'ocs:share-permissions',\n]\n\nexport const defaultDavNamespaces = {\n\td: 'DAV:',\n\tnc: 'http://nextcloud.org/ns',\n\toc: 'http://owncloud.org/ns',\n\tocs: 'http://open-collaboration-services.org/ns',\n}\n\n/**\n * Register custom DAV properties\n *\n * Can be used if your app introduces custom DAV properties, so e.g. the files app can make use of it.\n *\n * @param prop The property\n * @param namespace The namespace of the property\n */\nexport const registerDavProperty = function(prop: string, namespace: DavProperty = { nc: 'http://nextcloud.org/ns' }): boolean {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\tconst namespaces = { ...window._nc_dav_namespaces, ...namespace }\n\n\t// Check duplicates\n\tif (window._nc_dav_properties.find((search) => search === prop)) {\n\t\tlogger.error(`${prop} already registered`, { prop })\n\t\treturn false\n\t}\n\n\tif (prop.startsWith('<') || prop.split(':').length !== 2) {\n\t\tlogger.error(`${prop} is not valid. See example: 'oc:fileid'`, { prop })\n\t\treturn false\n\t}\n\n\tconst ns = prop.split(':')[0]\n\tif (!namespaces[ns]) {\n\t\tlogger.error(`${prop} namespace unknown`, { prop, namespaces })\n\t\treturn false\n\t}\n\n\twindow._nc_dav_properties.push(prop)\n\twindow._nc_dav_namespaces = namespaces\n\treturn true\n}\n\n/**\n * Get the registered dav properties\n */\nexport const getDavProperties = function(): string {\n\tif (typeof window._nc_dav_properties === 'undefined') {\n\t\twindow._nc_dav_properties = [...defaultDavProperties]\n\t}\n\n\treturn window._nc_dav_properties.map((prop) => `<${prop} />`).join(' ')\n}\n\n/**\n * Get the registered dav namespaces\n */\nexport const getDavNameSpaces = function(): string {\n\tif (typeof window._nc_dav_namespaces === 'undefined') {\n\t\twindow._nc_dav_namespaces = { ...defaultDavNamespaces }\n\t}\n\n\treturn Object.keys(window._nc_dav_namespaces)\n\t\t.map((ns) => `xmlns:${ns}=\"${window._nc_dav_namespaces?.[ns]}\"`)\n\t\t.join(' ')\n}\n\n/**\n * Get the default PROPFIND request body\n */\nexport const davGetDefaultPropfind = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<d:propfind ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:propfind>`\n}\n\n/**\n * Get the REPORT body to filter for favorite nodes\n */\nexport const davGetFavoritesReport = function(): string {\n\treturn `<?xml version=\"1.0\"?>\n\t\t<oc:filter-files ${getDavNameSpaces()}>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t\t<oc:filter-rules>\n\t\t\t\t<oc:favorite>1</oc:favorite>\n\t\t\t</oc:filter-rules>\n\t\t</oc:filter-files>`\n}\n\n/**\n * Get the SEARCH body to search for recently modified files\n *\n * @param lastModified Oldest timestamp to include (Unix timestamp)\n * @example\n * ```ts\n * // SEARCH for recent files need a different DAV endpoint\n * const client = davGetClient(generateRemoteUrl('dav'))\n * // Timestamp of last week\n * const lastWeek = Math.round(Date.now() / 1000) - (60 * 60 * 24 * 7)\n * const contentsResponse = await client.getDirectoryContents(path, {\n *     details: true,\n *     data: davGetRecentSearch(lastWeek),\n *     headers: {\n *         method: 'SEARCH',\n *         'Content-Type': 'application/xml; charset=utf-8',\n *     },\n *     deep: true,\n * }) as ResponseDataDetailed<FileStat[]>\n * ```\n */\nexport const davGetRecentSearch = function(lastModified: number): string {\n\treturn `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<d:searchrequest ${getDavNameSpaces()}\n\txmlns:ns=\"https://github.com/icewind1991/SearchDAV/ns\">\n\t<d:basicsearch>\n\t\t<d:select>\n\t\t\t<d:prop>\n\t\t\t\t${getDavProperties()}\n\t\t\t</d:prop>\n\t\t</d:select>\n\t\t<d:from>\n\t\t\t<d:scope>\n\t\t\t\t<d:href>/files/${getCurrentUser()?.uid}/</d:href>\n\t\t\t\t<d:depth>infinity</d:depth>\n\t\t\t</d:scope>\n\t\t</d:from>\n\t\t<d:where>\n\t\t\t<d:and>\n\t\t\t\t<d:or>\n\t\t\t\t\t<d:not>\n\t\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t\t<d:getcontenttype/>\n\t\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t\t<d:literal>httpd/unix-directory</d:literal>\n\t\t\t\t\t\t</d:eq>\n\t\t\t\t\t</d:not>\n\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t<oc:size/>\n\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t<d:literal>0</d:literal>\n\t\t\t\t\t</d:eq>\n\t\t\t\t</d:or>\n\t\t\t\t<d:gt>\n\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t\t</d:prop>\n\t\t\t\t\t<d:literal>${lastModified}</d:literal>\n\t\t\t\t</d:gt>\n\t\t\t</d:and>\n\t\t</d:where>\n\t\t<d:orderby>\n\t\t\t<d:order>\n\t\t\t\t<d:prop>\n\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t</d:prop>\n\t\t\t\t<d:descending/>\n\t\t\t</d:order>\n\t\t</d:orderby>\n\t\t<d:limit>\n\t\t\t<d:nresults>100</d:nresults>\n\t\t\t<ns:firstresult>0</ns:firstresult>\n\t\t</d:limit>\n\t</d:basicsearch>\n</d:searchrequest>`\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { Permission } from '../permissions'\n\n/**\n * Parse the webdav permission string to a permission enum\n *\n * @param permString The DAV permission string\n */\nexport const davParsePermissions = function(permString = ''): number {\n\tlet permissions = Permission.NONE\n\n\tif (!permString) { return permissions }\n\n\tif (permString.includes('C') || permString.includes('K')) { permissions |= Permission.CREATE }\n\n\tif (permString.includes('G')) { permissions |= Permission.READ }\n\n\tif (permString.includes('W') || permString.includes('N') || permString.includes('V')) { permissions |= Permission.UPDATE }\n\n\tif (permString.includes('D')) { permissions |= Permission.DELETE }\n\n\tif (permString.includes('R')) { permissions |= Permission.SHARE }\n\n\treturn permissions\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport enum FileType {\n\tFolder = 'folder',\n\tFile = 'file',\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { join } from 'path'\nimport { Permission } from '../permissions'\nimport { NodeStatus } from './node'\n\nexport interface Attribute { [key: string]: any }\n\nexport interface NodeData {\n\t/** Unique ID */\n\tid?: number\n\n\t/**\n\t * URL to the ressource.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t * or https://domain.com/Photos/picture.jpg\n\t */\n\tsource: string\n\n\t/** Last modified time */\n\tmtime?: Date\n\n\t/** Creation time */\n\tcrtime?: Date\n\n\t/** The mime type Optional for folders only */\n\tmime?: string\n\n\t/** The node size type */\n\tsize?: number\n\n\t/** The node permissions */\n\tpermissions?: Permission\n\n\t/** The owner  UID of this node */\n\towner: string|null\n\n\t/** The node attributes */\n\tattributes?: Attribute\n\n\t/**\n\t * The absolute root of the home relative to the service.\n\t * It is highly recommended to provide that information.\n\t * e.g. /files/emma\n\t */\n\troot?: string\n\n\t/** The node status */\n\tstatus?: NodeStatus\n}\n\n/**\n * Check if a node source is from a specific DAV service\n *\n * @param source The source to check\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const isDavRessource = function(source: string, davService: RegExp): boolean {\n\treturn source.match(davService) !== null\n}\n\n/**\n * Validate Node construct data\n *\n * @param data The node data\n * @param davService Pattern to check if source is DAV ressource\n */\nexport const validateData = (data: NodeData, davService: RegExp) => {\n\tif (data.id && typeof data.id !== 'number') {\n\t\tthrow new Error('Invalid id type of value')\n\t}\n\n\tif (!data.source) {\n\t\tthrow new Error('Missing mandatory source')\n\t}\n\n\ttry {\n\t\t// eslint-disable-next-line no-new\n\t\tnew URL(data.source)\n\t} catch (e) {\n\t\tthrow new Error('Invalid source format, source must be a valid URL')\n\t}\n\n\tif (!data.source.startsWith('http')) {\n\t\tthrow new Error('Invalid source format, only http(s) is supported')\n\t}\n\n\tif (data.mtime && !(data.mtime instanceof Date)) {\n\t\tthrow new Error('Invalid mtime type')\n\t}\n\n\tif (data.crtime && !(data.crtime instanceof Date)) {\n\t\tthrow new Error('Invalid crtime type')\n\t}\n\n\tif (!data.mime || typeof data.mime !== 'string'\n\t\t|| !data.mime.match(/^[-\\w.]+\\/[-+\\w.]+$/gi)) {\n\t\tthrow new Error('Missing or invalid mandatory mime')\n\t}\n\n\t// Allow size to be 0\n\tif ('size' in data && typeof data.size !== 'number' && data.size !== undefined) {\n\t\tthrow new Error('Invalid size type')\n\t}\n\n\t// Allow permissions to be 0\n\tif ('permissions' in data\n\t\t&& data.permissions !== undefined\n\t\t&& !(typeof data.permissions === 'number'\n\t\t\t&& data.permissions >= Permission.NONE\n\t\t\t&& data.permissions <= Permission.ALL\n\t\t)) {\n\t\tthrow new Error('Invalid permissions')\n\t}\n\n\tif (data.owner\n\t\t&& data.owner !== null\n\t\t&& typeof data.owner !== 'string') {\n\t\tthrow new Error('Invalid owner type')\n\t}\n\n\tif (data.attributes && typeof data.attributes !== 'object') {\n\t\tthrow new Error('Invalid attributes type')\n\t}\n\n\tif (data.root && typeof data.root !== 'string') {\n\t\tthrow new Error('Invalid root type')\n\t}\n\n\tif (data.root && !data.root.startsWith('/')) {\n\t\tthrow new Error('Root must start with a leading slash')\n\t}\n\n\tif (data.root && !data.source.includes(data.root)) {\n\t\tthrow new Error('Root must be part of the source')\n\t}\n\n\tif (data.root && isDavRessource(data.source, davService)) {\n\t\tconst service = data.source.match(davService)![0]\n\t\tif (!data.source.includes(join(service, data.root))) {\n\t\t\tthrow new Error('The root must be relative to the service. e.g /files/emma')\n\t\t}\n\t}\n\n\tif (data.status && !Object.values(NodeStatus).includes(data.status)) {\n\t\tthrow new Error('Status must be a valid NodeStatus')\n\t}\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { basename, extname, dirname } from 'path'\nimport { Permission } from '../permissions'\nimport { FileType } from './fileType'\nimport { Attribute, NodeData, isDavRessource, validateData } from './nodeData'\n\nexport enum NodeStatus {\n\t/** This is a new node and it doesn't exists on the filesystem yet */\n\tNEW = 'new',\n\t/** This node has failed and is unavailable  */\n\tFAILED = 'failed',\n\t/** This node is currently loading or have an operation in progress */\n\tLOADING = 'loading',\n\t/** This node is locked and cannot be modified */\n\tLOCKED = 'locked',\n}\n\nexport abstract class Node {\n\n\tprivate _data: NodeData\n\tprivate _attributes: Attribute\n\tprivate _knownDavService = /(remote|public)\\.php\\/(web)?dav/i\n\n\tconstructor(data: NodeData, davService?: RegExp) {\n\t\t// Validate data\n\t\tvalidateData(data, davService || this._knownDavService)\n\n\t\tthis._data = data\n\n\t\tconst handler = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tset: (target: Attribute, prop: string, value: any): any => {\n\t\t\t\t// Edit modification time\n\t\t\t\tthis.updateMtime()\n\t\t\t\t// Apply original changes\n\t\t\t\treturn Reflect.set(target, prop, value)\n\t\t\t},\n\t\t\tdeleteProperty: (target: Attribute, prop: string) => {\n\t\t\t\t// Edit modification time\n\t\t\t\tthis.updateMtime()\n\t\t\t\t// Apply original changes\n\t\t\t\treturn Reflect.deleteProperty(target, prop)\n\t\t\t},\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t} as ProxyHandler<any>\n\n\t\t// Proxy the attributes to update the mtime on change\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tthis._attributes = new Proxy(data.attributes || {} as any, handler)\n\t\tdelete this._data.attributes\n\n\t\tif (davService) {\n\t\t\tthis._knownDavService = davService\n\t\t}\n\t}\n\n\t/**\n\t * Get the source url to this object\n\t */\n\tget source(): string {\n\t\t// strip any ending slash\n\t\treturn this._data.source.replace(/\\/$/i, '')\n\t}\n\n\t/**\n\t * Get this object name\n\t */\n\tget basename(): string {\n\t\treturn basename(this.source)\n\t}\n\n\t/**\n\t * Get this object's extension\n\t */\n\tget extension(): string|null {\n\t\treturn extname(this.source)\n\t}\n\n\t/**\n\t * Get the directory path leading to this object\n\t * Will use the relative path to root if available\n\t */\n\tget dirname(): string {\n\t\tif (this.root) {\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = this.source.indexOf(this.root)\n\t\t\treturn dirname(this.source.slice(firstMatch + this.root.length) || '/')\n\t\t}\n\n\t\t// This should always be a valid URL\n\t\t// as this is tested in the constructor\n\t\tconst url = new URL(this.source)\n\t\treturn dirname(url.pathname)\n\t}\n\n\t/**\n\t * Is it a file or a folder ?\n\t */\n\tabstract get type(): FileType\n\n\t/**\n\t * Get the file mime\n\t */\n\tget mime(): string|undefined {\n\t\treturn this._data.mime\n\t}\n\n\t/**\n\t * Get the file modification time\n\t */\n\tget mtime(): Date|undefined {\n\t\treturn this._data.mtime\n\t}\n\n\t/**\n\t * Get the file creation time\n\t */\n\tget crtime(): Date|undefined {\n\t\treturn this._data.crtime\n\t}\n\n\t/**\n\t * Get the file size\n\t */\n\tget size(): number|undefined {\n\t\treturn this._data.size\n\t}\n\n\t/**\n\t * Get the file attribute\n\t */\n\tget attributes(): Attribute {\n\t\treturn this._attributes\n\t}\n\n\t/**\n\t * Get the file permissions\n\t */\n\tget permissions(): Permission {\n\t\t// If this is not a dav ressource, we can only read it\n\t\tif (this.owner === null && !this.isDavRessource) {\n\t\t\treturn Permission.READ\n\t\t}\n\n\t\t// If the permissions are not defined, we have none\n\t\treturn this._data.permissions !== undefined\n\t\t\t? this._data.permissions\n\t\t\t: Permission.NONE\n\t}\n\n\t/**\n\t * Get the file owner\n\t */\n\tget owner(): string|null {\n\t\t// Remote ressources have no owner\n\t\tif (!this.isDavRessource) {\n\t\t\treturn null\n\t\t}\n\t\treturn this._data.owner\n\t}\n\n\t/**\n\t * Is this a dav-related ressource ?\n\t */\n\tget isDavRessource(): boolean {\n\t\treturn isDavRessource(this.source, this._knownDavService)\n\t}\n\n\t/**\n\t * Get the dav root of this object\n\t */\n\tget root(): string|null {\n\t\t// If provided (recommended), use the root and strip away the ending slash\n\t\tif (this._data.root) {\n\t\t\treturn this._data.root.replace(/^(.+)\\/$/, '$1')\n\t\t}\n\n\t\t// Use the source to get the root from the dav service\n\t\tif (this.isDavRessource) {\n\t\t\tconst root = dirname(this.source)\n\t\t\treturn root.split(this._knownDavService).pop() || null\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Get the absolute path of this object relative to the root\n\t */\n\tget path(): string {\n\t\tif (this.root) {\n\t\t\t// Using replace would remove all part matching root\n\t\t\tconst firstMatch = this.source.indexOf(this.root)\n\t\t\treturn this.source.slice(firstMatch + this.root.length) || '/'\n\t\t}\n\t\treturn (this.dirname + '/' + this.basename).replace(/\\/\\//g, '/')\n\t}\n\n\t/**\n\t * Get the node id if defined.\n\t * Will look for the fileid in attributes if undefined.\n\t */\n\tget fileid(): number|undefined {\n\t\treturn this._data?.id || this.attributes?.fileid\n\t}\n\n\t/**\n\t * Get the node status.\n\t */\n\tget status(): NodeStatus|undefined {\n\t\treturn this._data?.status\n\t}\n\n\t/**\n\t * Set the node status.\n\t */\n\tset status(status: NodeStatus|undefined) {\n\t\tthis._data.status = status\n\t}\n\n\t/**\n\t * Move the node to a new destination\n\t *\n\t * @param {string} destination the new source.\n\t * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n\t */\n\tmove(destination: string) {\n\t\tvalidateData({ ...this._data, source: destination }, this._knownDavService)\n\t\tthis._data.source = destination\n\t\tthis.updateMtime()\n\t}\n\n\t/**\n\t * Rename the node\n\t * This aliases the move method for easier usage\n\t *\n\t * @param basename The new name of the node\n\t */\n\trename(basename: string) {\n\t\tif (basename.includes('/')) {\n\t\t\tthrow new Error('Invalid basename')\n\t\t}\n\t\tthis.move(dirname(this.source) + '/' + basename)\n\t}\n\n\t/**\n\t * Update the mtime if exists.\n\t */\n\tprivate updateMtime() {\n\t\tif (this._data.mtime) {\n\t\t\tthis._data.mtime = new Date()\n\t\t}\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileType } from './fileType'\nimport { Node } from './node'\n\nexport class File extends Node {\n\n\tget type(): FileType {\n\t\treturn FileType.File\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileType } from './fileType'\nimport { Node } from './node'\nimport { NodeData } from './nodeData'\n\nexport class Folder extends Node {\n\n\tconstructor(data: NodeData) {\n\t\t// enforcing mimes\n\t\tsuper({\n\t\t\t...data,\n\t\t\tmime: 'httpd/unix-directory',\n\t\t})\n\t}\n\n\tget type(): FileType {\n\t\treturn FileType.Folder\n\t}\n\n\tget extension(): string|null {\n\t\treturn null\n\t}\n\n\tget mime(): string {\n\t\treturn 'httpd/unix-directory'\n\t}\n\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { DAVResultResponseProps, FileStat, Response, ResponseDataDetailed, WebDAVClient } from 'webdav'\nimport type { Node } from '../files/node'\n\nimport { File } from '../files/file'\nimport { Folder } from '../files/folder'\nimport { NodeData } from '../files/nodeData'\nimport { davParsePermissions } from './davPermissions'\nimport { davGetFavoritesReport } from './davProperties'\n\nimport { getCurrentUser, getRequestToken } from '@nextcloud/auth'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { createClient, getPatcher, RequestOptions } from 'webdav'\nimport { request } from 'webdav/dist/node/request.js'\n\n/**\n * Nextcloud DAV result response\n */\ninterface ResponseProps extends DAVResultResponseProps {\n\tpermissions: string\n\tfileid: number\n\tsize: number\n}\n\n/**\n * The DAV root path for the current user\n */\nexport const davRootPath = `/files/${getCurrentUser()?.uid}`\n\n/**\n * The DAV remote URL used as base URL for the WebDAV client\n */\nexport const davRemoteURL = generateRemoteUrl('dav')\n\n/**\n * Get a WebDAV client configured to include the Nextcloud request token\n *\n * @param remoteURL The DAV server remote URL\n */\nexport const davGetClient = function(remoteURL = davRemoteURL) {\n\tconst client = createClient(remoteURL, {\n\t\theaders: {\n\t\t\trequesttoken: getRequestToken() || '',\n\t\t},\n\t})\n\n\t/**\n\t * Allow to override the METHOD to support dav REPORT\n\t *\n\t * @see https://github.com/perry-mitchell/webdav-client/blob/8d9694613c978ce7404e26a401c39a41f125f87f/source/request.ts\n\t */\n\tconst patcher = getPatcher()\n\t// https://github.com/perry-mitchell/hot-patcher/issues/6\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\tpatcher.patch('request', (options: RequestOptions): Promise<Response> => {\n\t\tif (options.headers?.method) {\n\t\t\toptions.method = options.headers.method\n\t\t\tdelete options.headers.method\n\t\t}\n\t\treturn request(options)\n\t})\n\treturn client\n}\n\n/**\n * Use WebDAV to query for favorite Nodes\n *\n * @param davClient The WebDAV client to use for performing the request\n * @param path Base path for the favorites, if unset all favorites are queried\n * @param davRoot The root path for the DAV user (defaults to `davRootPath`)\n * @example\n * ```js\n * import { davGetClient, davRootPath, getFavoriteNodes } from '@nextcloud/files'\n *\n * const client = davGetClient()\n * // query favorites for the root\n * const favorites = await getFavoriteNodes(client)\n * // which is the same as writing:\n * const favorites = await getFavoriteNodes(client, '/', davRootPath)\n * ```\n */\nexport const getFavoriteNodes = async (davClient: WebDAVClient, path = '/', davRoot = davRootPath) => {\n\tconst contentsResponse = await davClient.getDirectoryContents(`${davRoot}${path}`, {\n\t\tdetails: true,\n\t\tdata: davGetFavoritesReport(),\n\t\theaders: {\n\t\t\t// see davGetClient for patched webdav client\n\t\t\tmethod: 'REPORT',\n\t\t},\n\t\tincludeSelf: true,\n\t}) as ResponseDataDetailed<FileStat[]>\n\n\treturn contentsResponse.data\n\t\t.filter(node => node.filename !== path) // exclude current dir\n\t\t.map((result) => davResultToNode(result, davRoot))\n}\n\n/**\n * Covert DAV result `FileStat` to `Node`\n *\n * @param node The DAV result\n * @param filesRoot The DAV files root path\n * @param remoteURL The DAV server remote URL (same as on `davGetClient`)\n */\nexport const davResultToNode = function(node: FileStat, filesRoot = davRootPath, remoteURL = davRemoteURL): Node {\n\tconst props = node.props as ResponseProps\n\tconst permissions = davParsePermissions(props?.permissions)\n\tconst owner = getCurrentUser()?.uid as string\n\n\tconst nodeData: NodeData = {\n\t\tid: (props?.fileid as number) || 0,\n\t\tsource: `${remoteURL}${node.filename}`,\n\t\tmtime: new Date(Date.parse(node.lastmod)),\n\t\tmime: node.mime as string,\n\t\tsize: props?.size || Number.parseInt(props.getcontentlength || '0'),\n\t\tpermissions,\n\t\towner,\n\t\troot: filesRoot,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...props,\n\t\t\thasPreview: props?.['has-preview'],\n\t\t},\n\t}\n\n\tdelete nodeData.attributes?.props\n\n\treturn node.type === 'file' ? new File(nodeData) : new Folder(nodeData)\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { View } from './view'\nimport logger from '../utils/logger'\n\nexport class Navigation {\n\n\tprivate _views: View[] = []\n\tprivate _currentView: View | null = null\n\n\tregister(view: View) {\n\t\tif (this._views.find(search => search.id === view.id)) {\n\t\t\tthrow new Error(`View id ${view.id} is already registered`)\n\t\t}\n\n\t\tthis._views.push(view)\n\t}\n\n\tremove(id: string) {\n\t\tconst index = this._views.findIndex(view => view.id === id)\n\t\tif (index !== -1) {\n\t\t\tthis._views.splice(index, 1)\n\t\t}\n\t}\n\n\tget views(): View[] {\n\t\treturn this._views\n\t}\n\n\tsetActive(view: View | null) {\n\t\tthis._currentView = view\n\t}\n\n\tget active(): View | null {\n\t\treturn this._currentView\n\t}\n\n}\n\nexport const getNavigation = function(): Navigation {\n\tif (typeof window._nc_navigation === 'undefined') {\n\t\twindow._nc_navigation = new Navigation()\n\t\tlogger.debug('Navigation service initialized')\n\t}\n\n\treturn window._nc_navigation\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { View } from './view'\nimport { Node } from '../files/node'\n\ninterface ColumnData {\n\t/** Unique column ID */\n\tid: string\n\t/** Translated column title */\n\ttitle: string\n\t/** The content of the cell. The element will be appended within */\n\trender: (node: Node, view: View) => HTMLElement\n\t/** Function used to sort Nodes between them */\n\tsort?: (nodeA: Node, nodeB: Node) => number\n\t/**\n\t * Custom summary of the column to display at the end of the list.\n\t * Will not be displayed if  nothing is provided\n\t */\n\tsummary?: (node: Node[], view: View) => string\n}\n\nexport class Column implements ColumnData {\n\n\tprivate _column: ColumnData\n\n\tconstructor(column: ColumnData) {\n\t\tisValidColumn(column)\n\t\tthis._column = column\n\t}\n\n\tget id() {\n\t\treturn this._column.id\n\t}\n\n\tget title() {\n\t\treturn this._column.title\n\t}\n\n\tget render() {\n\t\treturn this._column.render\n\t}\n\n\tget sort() {\n\t\treturn this._column.sort\n\t}\n\n\tget summary() {\n\t\treturn this._column.summary\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the Column interface requirements.\n *\n * @param {ColumnData} column the column to check\n * @return {boolean} true if the column is valid\n */\nconst isValidColumn = function(column: ColumnData): boolean {\n\tif (!column.id || typeof column.id !== 'string') {\n\t\tthrow new Error('A column id is required')\n\t}\n\n\tif (!column.title || typeof column.title !== 'string') {\n\t\tthrow new Error('A column title is required')\n\t}\n\n\tif (!column.render || typeof column.render !== 'function') {\n\t\tthrow new Error('A render function is required')\n\t}\n\n\t// Optional properties\n\tif (column.sort && typeof column.sort !== 'function') {\n\t\tthrow new Error('Column sortFunction must be a function')\n\t}\n\n\tif (column.summary && typeof column.summary !== 'function') {\n\t\tthrow new Error('Column summary must be a function')\n\t}\n\n\treturn true\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","import {XMLParser, XMLValidator} from 'fast-xml-parser';\n\nexport default function isSvg(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\tstring = string.trim();\n\n\tif (string.length === 0) {\n\t\treturn false;\n\t}\n\n\t// Has to be `!==` as it can also return an object with error info.\n\tif (XMLValidator.validate(string) !== true) {\n\t\treturn false;\n\t}\n\n\tlet jsonObject;\n\tconst parser = new XMLParser();\n\n\ttry {\n\t\tjsonObject = parser.parse(string);\n\t} catch {\n\t\treturn false;\n\t}\n\n\tif (!jsonObject) {\n\t\treturn false;\n\t}\n\n\tif (!('svg' in jsonObject)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/* eslint-disable no-use-before-define */\nimport type { Folder, Node } from '@nextcloud/files'\nimport isSvg from 'is-svg'\n\nimport { Column } from './column.js'\n\nexport type ContentsWithRoot = {\n\tfolder: Folder,\n\tcontents: Node[]\n}\n\ninterface ViewData {\n\t/** Unique view ID */\n\tid: string\n\t/** Translated view name */\n\tname: string\n\t/** Translated accessible description of the view */\n\tcaption?: string\n\n\t/** Translated title of the empty view */\n\temptyTitle?: string\n\t/** Translated description of the empty view */\n\temptyCaption?: string\n\n\t/**\n\t * Method return the content of the  provided path\n\t * This ideally should be a cancellable promise.\n\t * promise.cancel(reason) will be called when the directory\n\t * change and the promise is not resolved yet.\n\t * You _must_ also return the current directory\n\t * information alongside with its content.\n\t */\n\tgetContents: (path: string) => Promise<ContentsWithRoot>\n\t/** The view icon as an inline svg */\n\ticon: string\n\t/** The view order */\n\torder: number\n\n\t/**\n\t * Custom params to give to the router on click\n\t * If defined, will be treated as a dummy view and\n\t * will just redirect and not fetch any contents.\n\t */\n\tparams?: Record<string, string>\n\n\t/**\n\t * This view column(s). Name and actions are\n\t * by default always included\n\t */\n\tcolumns?: Column[]\n\t/** The empty view element to render your empty content into */\n\temptyView?: (div: HTMLDivElement) => void\n\t/** The parent unique ID */\n\tparent?: string\n\t/** This view is sticky (sent at the bottom) */\n\tsticky?: boolean\n\n\t/**\n\t * This view has children and is expanded (by default)\n\t * or not. This will be overridden by user config.\n\t */\n\texpanded?: boolean\n\n\t/**\n\t * Will be used as default if the user\n\t * haven't customized their sorting column\n\t */\n\tdefaultSortKey?: string\n}\n\nexport class View implements ViewData {\n\n\tprivate _view: ViewData\n\n\tconstructor(view: ViewData) {\n\t\tisValidView(view)\n\t\tthis._view = view\n\t}\n\n\tget id() {\n\t\treturn this._view.id\n\t}\n\n\tget name() {\n\t\treturn this._view.name\n\t}\n\n\tget caption() {\n\t\treturn this._view.caption\n\t}\n\n\tget emptyTitle() {\n\t\treturn this._view.emptyTitle\n\t}\n\n\tget emptyCaption() {\n\t\treturn this._view.emptyCaption\n\t}\n\n\tget getContents() {\n\t\treturn this._view.getContents\n\t}\n\n\tget icon() {\n\t\treturn this._view.icon\n\t}\n\n\tset icon(icon) {\n\t\tthis._view.icon = icon\n\t}\n\n\tget order() {\n\t\treturn this._view.order\n\t}\n\n\tset order(order) {\n\t\tthis._view.order = order\n\t}\n\n\tget params() {\n\t\treturn this._view.params\n\t}\n\n\tset params(params) {\n\t\tthis._view.params = params\n\t}\n\n\tget columns() {\n\t\treturn this._view.columns\n\t}\n\n\tget emptyView() {\n\t\treturn this._view.emptyView\n\t}\n\n\tget parent() {\n\t\treturn this._view.parent\n\t}\n\n\tget sticky() {\n\t\treturn this._view.sticky\n\t}\n\n\tget expanded() {\n\t\treturn this._view.expanded\n\t}\n\n\tset expanded(expanded: boolean | undefined) {\n\t\tthis._view.expanded = expanded\n\t}\n\n\tget defaultSortKey() {\n\t\treturn this._view.defaultSortKey\n\t}\n\n}\n\n/**\n * Typescript cannot validate an interface.\n * Please keep in sync with the View interface requirements.\n *\n * @param {ViewData} view the view to check\n * @return {boolean} true if the column is valid\n * @throws {Error} if the view is not valid\n */\nconst isValidView = function(view: ViewData): boolean {\n\tif (!view.id || typeof view.id !== 'string') {\n\t\tthrow new Error('View id is required and must be a string')\n\t}\n\n\tif (!view.name || typeof view.name !== 'string') {\n\t\tthrow new Error('View name is required and must be a string')\n\t}\n\n\tif (view.columns && view.columns.length > 0\n\t\t&& (!view.caption || typeof view.caption !== 'string')) {\n\t\tthrow new Error('View caption is required for top-level views and must be a string')\n\t}\n\n\tif (!view.getContents || typeof view.getContents !== 'function') {\n\t\tthrow new Error('View getContents is required and must be a function')\n\t}\n\n\tif (!view.icon || typeof view.icon !== 'string' || !isSvg(view.icon)) {\n\t\tthrow new Error('View icon is required and must be a valid svg string')\n\t}\n\n\tif (!('order' in view) || typeof view.order !== 'number') {\n\t\tthrow new Error('View order is required and must be a number')\n\t}\n\n\t// Optional properties\n\tif (view.columns) {\n\t\tview.columns.forEach((column) => {\n\t\t\tif (!(column instanceof Column)) {\n\t\t\t\tthrow new Error('View columns must be an array of Column. Invalid column found')\n\t\t\t}\n\t\t})\n\t}\n\n\tif (view.emptyView && typeof view.emptyView !== 'function') {\n\t\tthrow new Error('View emptyView must be a function')\n\t}\n\n\tif (view.parent && typeof view.parent !== 'string') {\n\t\tthrow new Error('View parent must be a string')\n\t}\n\n\tif ('sticky' in view && typeof view.sticky !== 'boolean') {\n\t\tthrow new Error('View sticky must be a boolean')\n\t}\n\n\tif ('expanded' in view && typeof view.expanded !== 'boolean') {\n\t\tthrow new Error('View expanded must be a boolean')\n\t}\n\n\tif (view.defaultSortKey && typeof view.defaultSortKey !== 'string') {\n\t\tthrow new Error('View defaultSortKey must be a string')\n\t}\n\n\treturn true\n}\n","/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { type Entry, getNewFileMenu } from './newFileMenu'\nimport { type Folder } from './files/folder'\n\nexport { formatFileSize } from './humanfilesize'\nexport { FileAction, getFileActions, registerFileAction, DefaultType } from './fileAction'\nexport { Header, getFileListHeaders, registerFileListHeaders } from './fileListHeaders'\nexport { type Entry } from './newFileMenu'\nexport { Permission } from './permissions'\n\nexport * from './dav/davProperties'\nexport * from './dav/davPermissions'\nexport * from './dav/dav'\n\nexport { FileType } from './files/fileType'\nexport { File } from './files/file'\nexport { Folder } from './files/folder'\nexport { Node, NodeStatus } from './files/node'\n\nexport * from './navigation/navigation'\nexport * from './navigation/column'\nexport * from './navigation/view'\n\n/**\n * Add a new menu entry to the upload manager menu\n *\n * @param entry The new file menu entry\n */\nexport const addNewFileMenuEntry = function(entry: Entry) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.registerEntry(entry)\n}\n\n/**\n * Remove a previously registered entry from the upload menu\n *\n * @param entry Entry to remove (or name of entry)\n */\nexport const removeNewFileMenuEntry = function(entry: Entry | string) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.unregisterEntry(entry)\n}\n\n/**\n * Get the list of registered entries from the upload menu\n *\n * @param {Folder} context the creation context. Usually the current folder FileInfo\n */\nexport const getNewFileMenuEntries = function(context?: Folder) {\n\tconst newFileMenu = getNewFileMenu()\n\treturn newFileMenu.getEntries(context)\n}\n"],"names":["getLogger","user","getLoggerBuilder","logger","getCurrentUser","NewFileMenu","entry","entryIndex","context","id","getNewFileMenu","humanList","humanListBinary","formatFileSize","size","skipSmallSizes","binaryPrefixes","order","readableFormat","relativeSize","getCanonicalLocale","DefaultType","FileAction","action","registerFileAction","search","getFileActions","Header","header","registerFileListHeaders","getFileListHeaders","Permission","defaultDavProperties","defaultDavNamespaces","registerDavProperty","prop","namespace","namespaces","ns","getDavProperties","getDavNameSpaces","davGetDefaultPropfind","davGetFavoritesReport","davGetRecentSearch","lastModified","davParsePermissions","permString","permissions","FileType","isDavRessource","source","davService","validateData","data","service","join","NodeStatus","Node","handler","target","value","basename","extname","firstMatch","dirname","url","status","destination","File","Folder","davRootPath","davRemoteURL","generateRemoteUrl","davGetClient","remoteURL","client","createClient","getRequestToken","getPatcher","options","request","getFavoriteNodes","davClient","path","davRoot","node","result","davResultToNode","filesRoot","props","owner","nodeData","Navigation","view","index","getNavigation","Column","column","isValidColumn","nameStartChar","nameChar","nameRegexp","regexName","getAllMatches","string","regex","matches","match","allmatches","len","isName","exports","v","obj","a","arrayMode","keys","i","util","require$$0","defaultOptions","validator","xmlData","tags","tagFound","reachedRoot","readPI","tagStartPos","readCommentAndCDATA","closingTag","tagName","validateTagName","msg","getErrorObject","getLineNumberForPosition","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","otg","openPos","afterAmp","validateAmpersand","isWhiteSpace","t","char","start","tagname","angleBracketsCount","doubleQuote","singleQuote","startChar","tagClosed","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","validateNumberAmpersand","re","count","code","message","lineNumber","lines","val","jPath","attrs","buildOptions","OptionsBuilder","XmlNode","key","xmlNode","readDocType","entities","hasBody","comment","exp","isEntity","readEntityExp","validateEntityName","isElement","isAttlist","isNotation","isComment","entityName","name","DocTypeReader","hexRegex","numRegex","consider","toNumber","str","trimmedStr","sign","leadingZeros","numTrimmedByZeros","trimZeros","eNotation","num","numStr","strnum","require$$1","require$$2","require$$3","OrderedObjParser$1","addExternalEntities","parseXml","parseTextData","resolveNameSpace","buildAttributesMap","isItStopNode","replaceEntitiesValue","readStopNodeData","saveTextToParentTag","addChild","externalEntities","entKeys","ent","dontTrim","hasAttributes","isLeafNode","escapeEntities","newval","parseValue","prefix","attrsRegx","oldVal","aName","newVal","attrCollection","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","lastTagName","propIndex","tagData","readTagExp","childNode","endIndex","tagExp","attrExpPresent","lastTag","tagContent","entity","stopNodes","currentTagName","allNodesExp","stopNodePath","stopNodeExp","tagExpWithClosingIndex","closingChar","attrBoundary","ch","errMsg","closingIndex","removeNSPrefix","separatorIndex","startIndex","openTagCount","shouldParse","OrderedObjParser_1","OrderedObjParser","prettify","compress","arr","text","compressedObj","tagObj","property","propName","newJpath","isLeaf","isLeafTag","assignAttributes","attrMap","jpath","atrrName","textNodeName","propCount","node2json","XMLParser$1","validationOption","orderedObjParser","orderedResult","XMLParser_1","XMLParser","EOL","toXml","jArray","indentation","arrToStr","xmlStr","isPreviousElementTag","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","attr","attrVal","textValue","orderedJs2Xml","buildFromOrderedJs","Builder","isAttribute","processTextOrObjNode","indentate","jObj","level","arrLen","listTagVal","j","item","Ks","L","object","tagEndExp","piClosingChar","closeTag","json2xml","XMLBuilder","fxp","isSvg","XMLValidator","jsonObject","parser","View","isValidView","icon","params","expanded","addNewFileMenuEntry","removeNewFileMenuEntry","getNewFileMenuEntries"],"mappings":"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","x_google_ignoreList":[16,17,18,19,20,21,22,23,24,25,26,27,28]}