{"version":3,"file":"legacy.cjs","sources":["../lib/legacy.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n/**\n * This file provides legacy wrappers which wrap the new Vue based dialogs for old style `OC.dialogs` calls.\n */\n\n/// <reference types=\"@nextcloud/typings\" />\nimport type { IFilePickerButton, IFilePickerButtonFactory } from './components/types'\nimport type { Node } from '@nextcloud/files'\nimport type { AsyncComponent, Component } from 'vue'\n\nimport { basename } from 'path'\nimport { t } from './utils/l10n'\nimport { FilePickerVue, FilePickerType } from '.'\n\nimport DialogBase from './components/DialogBase.vue'\nimport IconCopy from '@mdi/svg/svg/folder-multiple.svg?raw'\nimport IconMove from '@mdi/svg/svg/folder-move.svg?raw'\nimport Vue from 'vue'\n\n/**\n * Helper to spawn a Vue dialog without having to mount it from a component\n *\n * @param dialog The dialog component to spawn\n * @param props Properties to pass to the dialog\n * @param onClose Callback when the dialog is closed\n */\nconst spawnDialog = (dialog: Component | AsyncComponent, props: any, onClose: () => void = () => {}) => {\n\tconst el = document.createElement('div')\n\n\tconst container: HTMLElement = document.querySelector(props?.container) || document.body\n\tcontainer.appendChild(el)\n\n\tconst vue = new Vue({\n\t\tel,\n\t\tname: 'VueDialogHelper',\n\t\trender: (h) =>\n\t\t\th(dialog, {\n\t\t\t\tprops,\n\t\t\t\ton: {\n\t\t\t\t\tclose: () => {\n\t\t\t\t\t\tonClose()\n\t\t\t\t\t\tvue.$destroy()\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t})\n}\n\n/**\n * Legacy wrapper to support `OC.dialogs.filepicker` with the new Vue based filepicker\n *\n * Prefer to use the filepicker directly instead.\n *\n * In order to pick several types of mime types they need to be passed as an\n * array of strings.\n *\n * When no mime type filter is given only files can be selected. In order to\n * be able to select both files and folders \"['*', 'httpd/unix-directory']\"\n * should be used instead.\n *\n * @param {string} title dialog title\n * @param {function} callback which will be triggered when user presses Choose\n * @param {boolean} [multiselect] whether it should be possible to select multiple files\n * @param {string[]} [mimetype] mimetype to filter by - directories will always be included\n * @param {boolean} [_modal] do not use\n * @param {string} [type] Type of file picker : Choose, copy, move, copy and move\n * @param {string} [path] path to the folder that the the file can be picket from\n * @param {Object} [options] additonal options that need to be set\n * @param {Function} [options.filter] filter function for advanced filtering\n */\nexport async function filepicker(title: string, callback: (s: string | string[], type: FilePickerType) => void, multiselect = false, mimetype?: string | string[], _modal?: boolean, type: FilePickerType = FilePickerType.Choose, path?: string, options?: any) {\n\n\t/**\n\t * Create legacy callback wrapper to support old filepicker syntax\n\t * @param fn The original callback\n\t * @param type The file picker type which was used to pick the file(s)\n\t */\n\tconst legacyCallback = (fn: (s: string| string[], type: FilePickerType) => void, type: FilePickerType) => {\n\t\tconst getPath = (node: Node) => {\n\t\t\tconst root = node?.root || ''\n\t\t\tlet path = node?.path || ''\n\t\t\t// TODO: Fix this in @nextcloud/files\n\t\t\tif (path.startsWith(root)) {\n\t\t\t\tpath = path.slice(root.length) || '/'\n\t\t\t}\n\t\t\treturn path\n\t\t}\n\n\t\tif (multiselect) {\n\t\t\treturn (nodes: Node[]) => fn(nodes.map(getPath), type)\n\t\t} else {\n\t\t\treturn (nodes: Node[]) => fn(getPath(nodes[0]), type)\n\t\t}\n\t}\n\n\t/**\n\t * Coverting a Node into a legacy file info to support the OC.dialogs.filepicker filter function\n\t * @param node The node to convert\n\t */\n\tconst nodeToLegacyFile = (node: Node): Nextcloud.v19.FileInfo => ({\n\t\tid: node.fileid || null,\n\t\tpath: node.path,\n\t\tmimetype: node.mime || null,\n\t\tmtime: node.mtime?.getTime() || null,\n\t\tpermissions: (node.permissions as number) as Nextcloud.Common.Permission,\n\t\tname: node.attributes?.displayname || node.basename,\n\t\tetag: node.attributes?.etag || null,\n\t\thasPreview: node.attributes?.hasPreview || null,\n\t\tmountType: node.attributes?.mountType || null,\n\t\tquotaAvailableBytes: node.attributes?.quotaAvailableBytes || null,\n\t\ticon: null,\n\t\tsharePermissions: null,\n\t})\n\n\tlet buttonFn: IFilePickerButtonFactory|IFilePickerButton[]\n\tif (type === FilePickerType.Custom) {\n\t\tbuttonFn = [] as IFilePickerButton[]\n\t\t(options.buttons || []).forEach((button: { text: string, defaultButton: boolean, type: FilePickerType }) => {\n\t\t\t(buttonFn as IFilePickerButton[]).push({\n\t\t\t\tcallback: legacyCallback(callback, button.type),\n\t\t\t\tlabel: button.text,\n\t\t\t\ttype: button.defaultButton ? 'primary' : 'secondary',\n\t\t\t})\n\t\t})\n\t} else {\n\t\tbuttonFn = (nodes, path) => {\n\t\t\tconst buttons: IFilePickerButton[] = []\n\t\t\tconst node = nodes?.[0]?.attributes?.displayName || nodes?.[0]?.basename\n\t\t\tconst target = node || basename(path)\n\n\t\t\tif (type === FilePickerType.Choose) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: legacyCallback(callback, FilePickerType.Choose),\n\t\t\t\t\tlabel: node && !multiselect ? t('Choose {file}', { file: node }) : t('Choose'),\n\t\t\t\t\ttype: 'primary',\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (type === FilePickerType.CopyMove || type === FilePickerType.Copy) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: legacyCallback(callback, FilePickerType.Copy),\n\t\t\t\t\tlabel: target ? t('Copy to {target}', { target }) : t('Copy'),\n\t\t\t\t\ttype: 'primary',\n\t\t\t\t\ticon: IconCopy,\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (type === FilePickerType.Move || type === FilePickerType.CopyMove) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: legacyCallback(callback, FilePickerType.Move),\n\t\t\t\t\tlabel: target ? t('Move to {target}', { target }) : t('Move'),\n\t\t\t\t\ttype: type === FilePickerType.Move ? 'primary' : 'secondary',\n\t\t\t\t\ticon: IconMove,\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn buttons\n\t\t}\n\t}\n\n\tconst filter = {} as any\n\tif (typeof options?.filter === 'function') {\n\t\tfilter.filterFn = (node: Node) => options.filter(nodeToLegacyFile(node))\n\t}\n\n\tconst mimetypeFilter = typeof mimetype === 'string' ? [mimetype] : (mimetype || [])\n\n\t// eslint-disable-next-line n/no-callback-literal\n\tspawnDialog(FilePickerVue, {\n\t\t...filter,\n\t\tname: title,\n\t\tbuttons: buttonFn,\n\t\tmultiselect,\n\t\tpath,\n\t\tmimetypeFilter,\n\t\tallowPickDirectory: options?.allowDirectoryChooser === true || mimetypeFilter.includes('httpd/unix-directory'),\n\t})\n}\n\n/**\n * displays confirmation dialog\n * @param text content of dialog\n * @param title dialog title\n * @param callback Callback which will be triggered when user presses OK (true or false would be passed to callback respectively)\n * @param modal Do not use\n * @return {Promise}\n */\nexport async function confirm(text: string, title: string, callback: (s: boolean) => void, modal?: never) {\n\tconst buttons = [\n\t\t{\n\t\t\tlabel: 'No',\n\t\t\t// eslint-disable-next-line n/no-callback-literal\n\t\t\tcallback: () => callback(false),\n\t\t},\n\t\t{\n\t\t\tlabel: 'Yes',\n\t\t\ttype: 'primary',\n\t\t\t// eslint-disable-next-line n/no-callback-literal\n\t\t\tcallback: () => callback(true),\n\t\t},\n\t]\n\t// eslint-disable-next-line n/no-callback-literal\n\tspawnDialog(DialogBase, { name: title, message: text, buttons, size: 'small' }, () => callback(false))\n}\n"],"names":["spawnDialog","dialog","props","onClose","el","vue","Vue","filepicker","title","callback","multiselect","mimetype","_modal","type","FilePickerType","path","options","legacyCallback","fn","getPath","node","root","nodes","nodeToLegacyFile","_a","_b","_c","_d","_e","_f","buttonFn","button","buttons","target","basename","t","IconCopy","IconMove","filter","mimetypeFilter","FilePickerVue","confirm","text","modal","DialogBase"],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+CA,MAAMA,IAAc,CAACC,GAAoCC,GAAYC,IAAsB,MAAM;AAAC,MAAM;AACjG,QAAAC,IAAK,SAAS,cAAc,KAAK;AAGvC,GAD+B,SAAS,cAAcF,KAAO,OAAA,SAAAA,EAAA,SAAS,KAAK,SAAS,MAC1E,YAAYE,CAAE;AAElB,QAAAC,IAAM,IAAIC,UAAI;AAAA,IACnB,IAAAF;AAAA,IACA,MAAM;AAAA,IACN,QAAQ,CAAC,MACR,EAAEH,GAAQ;AAAA,MACT,OAAAC;AAAA,MACA,IAAI;AAAA,QACH,OAAO,MAAM;AACJ,UAAAC,KACRE,EAAI,SAAS;AAAA,QACd;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EAAA,CACF;AACF;AAwBsB,eAAAE,EAAWC,GAAeC,GAAgEC,IAAc,IAAOC,GAA8BC,GAAkBC,IAAuBC,EAAA,eAAe,QAAQC,GAAeC,GAAe;AAO1P,QAAAC,IAAiB,CAACC,GAAyDL,MAAyB;AACnG,UAAAM,IAAU,CAACC,MAAe;AACzB,YAAAC,KAAOD,uBAAM,SAAQ;AACvBL,UAAAA,KAAOK,uBAAM,SAAQ;AAErBL,aAAAA,EAAK,WAAWM,CAAI,MACvBN,IAAOA,EAAK,MAAMM,EAAK,MAAM,KAAK,MAE5BN;AAAAA,IAAA;AAGR,WAAIL,IACI,CAACY,MAAkBJ,EAAGI,EAAM,IAAIH,CAAO,GAAGN,CAAI,IAE9C,CAACS,MAAkBJ,EAAGC,EAAQG,EAAM,CAAC,CAAC,GAAGT,CAAI;AAAA,EACrD,GAOKU,IAAmB,CAACH,MAAoC;AAxH/D,QAAAI,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC;AAwHmE,WAAA;AAAA,MACjE,IAAIT,EAAK,UAAU;AAAA,MACnB,MAAMA,EAAK;AAAA,MACX,UAAUA,EAAK,QAAQ;AAAA,MACvB,SAAOI,IAAAJ,EAAK,UAAL,OAAA,SAAAI,EAAY,QAAa,MAAA;AAAA,MAChC,aAAcJ,EAAK;AAAA,MACnB,QAAMK,IAAAL,EAAK,eAAL,OAAA,SAAAK,EAAiB,gBAAeL,EAAK;AAAA,MAC3C,QAAMM,IAAAN,EAAK,eAAL,OAAA,SAAAM,EAAiB,SAAQ;AAAA,MAC/B,cAAYC,IAAAP,EAAK,eAAL,OAAA,SAAAO,EAAiB,eAAc;AAAA,MAC3C,aAAWC,IAAAR,EAAK,eAAL,OAAA,SAAAQ,EAAiB,cAAa;AAAA,MACzC,uBAAqBC,IAAAT,EAAK,eAAL,OAAA,SAAAS,EAAiB,wBAAuB;AAAA,MAC7D,MAAM;AAAA,MACN,kBAAkB;AAAA,IAAA;AAAA,EACnB;AAEI,MAAAC;AACA,EAAAjB,MAASC,iBAAe,UAC3BgB,IAAW,CAAA,IACVd,EAAQ,WAAW,CAAI,GAAA,QAAQ,CAACe,MAA2E;AAC1G,IAAAD,EAAiC,KAAK;AAAA,MACtC,UAAUb,EAAeR,GAAUsB,EAAO,IAAI;AAAA,MAC9C,OAAOA,EAAO;AAAA,MACd,MAAMA,EAAO,gBAAgB,YAAY;AAAA,IAAA,CACzC;AAAA,EAAA,CACD,KAEUD,IAAA,CAACR,GAAOP,MAAS;AAlJ9B,QAAAS,GAAAC,GAAAC;AAmJG,UAAMM,IAA+B,CAAA,GAC/BZ,MAAOK,gCAAQ,CAAR,MAAA,OAAA,SAAAD,EAAY,eAAZ,OAAwB,SAAAC,EAAA,kBAAeC,IAAQJ,KAAA,OAAA,SAAAA,EAAA,CAAA,MAAR,OAAY,SAAAI,EAAA,WAC1DO,IAASb,KAAQc,EAAA,SAASnB,CAAI;AAEhC,WAAAF,MAASC,iBAAe,UAC3BkB,EAAQ,KAAK;AAAA,MACZ,UAAUf,EAAeR,GAAUK,EAAAA,eAAe,MAAM;AAAA,MACxD,OAAOM,KAAQ,CAACV,IAAcyB,IAAE,iBAAiB,EAAE,MAAMf,EAAK,CAAC,IAAIe,EAAAA,EAAE,QAAQ;AAAA,MAC7E,MAAM;AAAA,IAAA,CACN,IAGEtB,MAASC,EAAAA,eAAe,YAAYD,MAASC,EAAAA,eAAe,SAC/DkB,EAAQ,KAAK;AAAA,MACZ,UAAUf,EAAeR,GAAUK,EAAAA,eAAe,IAAI;AAAA,MACtD,OAAOmB,IAASE,EAAAA,EAAE,oBAAoB,EAAE,QAAAF,GAAQ,IAAIE,EAAA,EAAE,MAAM;AAAA,MAC5D,MAAM;AAAA,MACN,MAAMC,EAAA;AAAA,IAAA,CACN,IAEEvB,MAASC,EAAAA,eAAe,QAAQD,MAASC,EAAAA,eAAe,aAC3DkB,EAAQ,KAAK;AAAA,MACZ,UAAUf,EAAeR,GAAUK,EAAAA,eAAe,IAAI;AAAA,MACtD,OAAOmB,IAASE,EAAAA,EAAE,oBAAoB,EAAE,QAAAF,GAAQ,IAAIE,EAAA,EAAE,MAAM;AAAA,MAC5D,MAAMtB,MAASC,EAAAA,eAAe,OAAO,YAAY;AAAA,MACjD,MAAMuB,EAAA;AAAA,IAAA,CACN,GAEKL;AAAA,EAAA;AAIT,QAAMM,IAAS,CAAA;AACX,EAAA,QAAOtB,KAAS,OAAA,SAAAA,EAAA,WAAW,eAC9BsB,EAAO,WAAW,CAAClB,MAAeJ,EAAQ,OAAOO,EAAiBH,CAAI,CAAC;AAGlE,QAAAmB,IAAiB,OAAO5B,KAAa,WAAW,CAACA,CAAQ,IAAKA,KAAY;AAGhF,EAAAX,EAAYwC,EAAAA,eAAe;AAAA,IAC1B,GAAGF;AAAA,IACH,MAAM9B;AAAA,IACN,SAASsB;AAAA,IACT,aAAApB;AAAA,IAAA,MACAK;AAAAA,IACA,gBAAAwB;AAAA,IACA,qBAAoBvB,KAAS,OAAA,SAAAA,EAAA,2BAA0B,MAAQuB,EAAe,SAAS,sBAAsB;AAAA,EAAA,CAC7G;AACF;AAUA,eAAsBE,EAAQC,GAAclC,GAAeC,GAAgCkC,GAAe;AACzG,QAAMX,IAAU;AAAA,IACf;AAAA,MACC,OAAO;AAAA;AAAA,MAEP,UAAU,MAAMvB,EAAS,EAAK;AAAA,IAC/B;AAAA,IACA;AAAA,MACC,OAAO;AAAA,MACP,MAAM;AAAA;AAAA,MAEN,UAAU,MAAMA,EAAS,EAAI;AAAA,IAC9B;AAAA,EAAA;AAGD,EAAAT,EAAY4C,EAAAA,YAAY,EAAE,MAAMpC,GAAO,SAASkC,GAAM,SAAAV,GAAS,MAAM,QAAQ,GAAG,MAAMvB,EAAS,EAAK,CAAC;AACtG;;;"}