{"version":3,"file":"FilePicker-oSc3I_BN.mjs","sources":["../../node_modules/vue-material-design-icons/File.vue","../../node_modules/vue-material-design-icons/MenuUp.vue","../../node_modules/vue-material-design-icons/MenuDown.vue","../../lib/usables/preview.ts","../../node_modules/vue-material-design-icons/Folder.vue","../../lib/components/FilePicker/FilePreview.vue","../../lib/components/FilePicker/NcDatetime.vue","../../lib/components/FilePicker/FileListRow.vue","../../lib/components/FilePicker/FileList.vue","../../node_modules/vue-material-design-icons/Home.vue","../../node_modules/vue-material-design-icons/Plus.vue","../../lib/components/FilePicker/FilePickerBreadcrumbs.vue","../../node_modules/vue-material-design-icons/Clock.vue","../../node_modules/vue-material-design-icons/Close.vue","../../node_modules/vue-material-design-icons/Magnify.vue","../../node_modules/vue-material-design-icons/Star.vue","../../lib/usables/isPublic.ts","../../lib/components/FilePicker/FilePickerNavigation.vue","../../lib/usables/dav.ts","../../lib/usables/mime.ts","../../lib/components/FilePicker/FilePicker.vue"],"sourcesContent":["<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon file-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"FileIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon menu-up-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M7,15L12,10L17,15H7Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"MenuUpIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon menu-down-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M7,10L12,15L17,10H7Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"MenuDownIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","/**\n * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport type { Node } from '@nextcloud/files'\nimport type { Ref } from 'vue'\n\nimport { generateUrl } from '@nextcloud/router'\nimport { toValue } from '@vueuse/core'\nimport { ref, watchEffect } from 'vue'\n\ninterface PreviewOptions {\n\t/**\n\t * Size of the previews in px\n\t * @default 32\n\t */\n\tsize?: number\n\t/**\n\t * Should the preview fall back to the mime type icon\n\t * @default true\n\t */\n\tmimeFallback?: boolean\n\t/**\n\t * Should the preview be cropped or fitted\n\t * @default false (meaning it gets fitted)\n\t */\n\tcropPreview?: boolean\n}\n\n/**\n * Generate the preview URL of a file node\n *\n * @param node The node to generate the preview for\n * @param options Preview options\n */\nexport function getPreviewURL(node: Node, options: PreviewOptions = {}) {\n\toptions = { size: 32, cropPreview: false, mimeFallback: true, ...options }\n\n\ttry {\n\t\tconst previewUrl = node.attributes?.previewUrl\n\t\t\t|| generateUrl('/core/preview?fileId={fileid}', {\n\t\t\t\tfileid: node.fileid,\n\t\t\t})\n\n\t\tlet url\n\t\ttry {\n\t\t\turl = new URL(previewUrl)\n\t\t} catch (e) {\n\t\t\turl = new URL(previewUrl, window.location.origin)\n\t\t}\n\n\t\t// Request preview with params\n\t\turl.searchParams.set('x', `${options.size}`)\n\t\turl.searchParams.set('y', `${options.size}`)\n\t\turl.searchParams.set('mimeFallback', `${options.mimeFallback}`)\n\t\turl.searchParams.set('c', `${node.attributes.etag}`) // cache busting\n\n\t\t// Handle cropping\n\t\turl.searchParams.set('a', options.cropPreview === true ? '0' : '1')\n\t\treturn url\n\t} catch (e) {\n\t\treturn null\n\t}\n}\n\nexport const usePreviewURL = (node: Node | Ref<Node>, options?: PreviewOptions | Ref<PreviewOptions>) => {\n\tconst previewURL = ref<URL|null>(null)\n\n\twatchEffect(() => {\n\t\tpreviewURL.value = getPreviewURL(toValue(node), toValue(options || {}))\n\t})\n\n\treturn {\n\t\tpreviewURL,\n\t}\n}\n","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon folder-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"FolderIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n\t<div :style=\"canLoadPreview ? { backgroundImage: `url(${previewURL})`} : undefined\"\n\t\t:aria-label=\"t('MIME type {mime}', { mime: node.mime || t('unknown') })\"\n\t\tclass=\"file-picker__file-icon\">\n\t\t<template v-if=\"!canLoadPreview\">\n\t\t\t<IconFile v-if=\"isFile\" :size=\"20\" />\n\t\t\t<IconFolder v-else :size=\"20\" />\n\t\t</template>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\nimport { FileType, type Node } from '@nextcloud/files'\nimport { usePreviewURL } from '../../usables/preview'\nimport { computed, ref, toRef, watch } from 'vue'\nimport { t } from '../../utils/l10n'\n\nimport IconFile from 'vue-material-design-icons/File.vue'\nimport IconFolder from 'vue-material-design-icons/Folder.vue'\n\nconst props = defineProps<{\n\tnode: Node\n}>()\n\nconst { previewURL } = usePreviewURL(toRef(props, 'node'))\n\nconst isFile = computed(() => props.node.type === FileType.File)\nconst canLoadPreview = ref(false)\n\nwatch(previewURL, () => {\n\tcanLoadPreview.value = false\n\n\tif (previewURL.value) {\n\t\tconst loader = document.createElement('img')\n\t\tloader.src = previewURL.value.href\n\t\tloader.onerror = () => loader.remove()\n\t\tloader.onload = () => { canLoadPreview.value = true; loader.remove() }\n\t\tdocument.body.appendChild(loader)\n\t}\n}, { immediate: true })\n</script>\n\n<style scoped lang=\"scss\">\n.file-picker__file-icon {\n\twidth: 32px;\n\theight: 32px;\n\tmin-width: 32px;\n\tmin-height: 32px;\n\tbackground-repeat: no-repeat;\n\tbackground-size: contain;\n\t// for the fallback\n\tdisplay: flex;\n\tjustify-content: center;\n}\n</style>\n","<!--\n - @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>\n -\n - @author Ferdinand Thiessen <opensource@fthiessen.de>\n -\n - @license AGPL-3.0-or-later\n -\n - This program is free software: you can redistribute it and/or modify\n - it under the terms of the GNU Affero General Public License as\n - published by the Free Software Foundation, either version 3 of the\n - License, or (at your option) any later version.\n -\n - This program is distributed in the hope that it will be useful,\n - but WITHOUT ANY WARRANTY; without even the implied warranty of\n - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n - GNU Affero General Public License for more details.\n -\n - You should have received a copy of the GNU Affero General Public License\n - along with this program. If not, see <http://www.gnu.org/licenses/>.\n -\n -->\n<template>\n\t<span class=\"nc-datetime\"\n\t\t:data-timestamp=\"timestamp\"\n\t\t:title=\"formattedFullTime\">{{ formattedTime }}</span>\n</template>\n\n<script lang=\"ts\">\nimport { getCanonicalLocale } from '@nextcloud/l10n'\nimport { t } from '../../utils/l10n.js'\nimport { defineComponent, type PropType } from 'vue'\n\nconst FEW_SECONDS_AGO = {\n\tlong: t('a few seconds ago'),\n\tshort: t('seconds ago'), // FOR TRANSLATORS: Shorter version of 'a few seconds ago'\n\tnarrow: t('sec. ago'), // FOR TRANSLATORS: If possible in your language an even shorter version of 'a few seconds ago'\n}\n\nexport default defineComponent({\n\tname: 'NcDatetime',\n\n\tprops: {\n\t\t/**\n\t\t * The timestamp to display, either an unix timestamp (in milliseconds) or a Date object\n\t\t */\n\t\ttimestamp: {\n\t\t\ttype: [Date, Number] as PropType<Date | number>,\n\t\t\trequired: true,\n\t\t},\n\t\t/**\n\t\t * The format used for displaying, or if relative time is used the format used for the title (optional)\n\t\t *\n\t\t * @type {Intl.DateTimeFormatOptions}\n\t\t */\n\t\tformat: {\n\t\t\ttype: Object as PropType<Intl.DateTimeFormatOptions>,\n\t\t\tdefault: () => ({ timeStyle: 'medium', dateStyle: 'short' }),\n\t\t},\n\t\t/**\n\t\t * Wether to display the timestamp as time from now (optional)\n\t\t *\n\t\t * - `false`: Disable relative time\n\t\t * - `'long'`: Long text, like *2 seconds ago* (default)\n\t\t * - `'short'`: Short text, like *2 sec. ago*\n\t\t * - `'narrow'`: Even shorter text (same as `'short'` on some languages)\n\t\t */\n\t\trelativeTime: {\n\t\t\ttype: [Boolean, String] as PropType<false | 'long' | 'short' | 'narrow'>,\n\t\t\tdefault: 'long',\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tvalidator: (v: any) => v === false || ['long', 'short', 'narrow'].includes(v),\n\t\t},\n\t\t/**\n\t\t * Ignore seconds when displaying the relative time and just show `a few seconds ago`\n\t\t */\n\t\tignoreSeconds: {\n\t\t\ttype: Boolean as PropType<boolean>,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\t/** Current time in ms */\n\t\t\tcurrentTime: Date.now(),\n\t\t\t/** ID of the current time interval */\n\t\t\tintervalId: undefined,\n\t\t} as { currentTime: number, intervalId?: number}\n\t},\n\n\tcomputed: {\n\t\t/** ECMA Date object of the timestamp */\n\t\tdateObject() {\n\t\t\treturn new Date(this.timestamp)\n\t\t},\n\t\t/** Time string formatted for main text */\n\t\tformattedTime() {\n\t\t\tif (this.relativeTime !== false) {\n\t\t\t\tconst formatter = new Intl.RelativeTimeFormat(getCanonicalLocale(), { numeric: 'auto', style: this.relativeTime })\n\n\t\t\t\tconst diff = this.dateObject.valueOf() - this.currentTime\n\t\t\t\tconst seconds = diff / 1000\n\t\t\t\tif (Math.abs(seconds) <= 90) {\n\t\t\t\t\tif (this.ignoreSeconds) {\n\t\t\t\t\t\treturn FEW_SECONDS_AGO[this.relativeTime]\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn formatter.format(Math.round(seconds), 'second')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst minutes = seconds / 60\n\t\t\t\tif (Math.abs(minutes) <= 90) {\n\t\t\t\t\treturn formatter.format(Math.round(minutes), 'minute')\n\t\t\t\t}\n\t\t\t\tconst hours = minutes / 60\n\t\t\t\tif (Math.abs(hours) <= 72) {\n\t\t\t\t\treturn formatter.format(Math.round(hours), 'hour')\n\t\t\t\t}\n\t\t\t\tconst days = hours / 24\n\t\t\t\tif (Math.abs(days) <= 6) {\n\t\t\t\t\treturn formatter.format(Math.round(days), 'day')\n\t\t\t\t}\n\t\t\t\tconst weeks = days / 7\n\t\t\t\tif (Math.abs(weeks) <= 52) {\n\t\t\t\t\treturn formatter.format(Math.round(weeks), 'week')\n\t\t\t\t}\n\t\t\t\treturn formatter.format(Math.round(days / 365), 'year')\n\t\t\t}\n\t\t\treturn this.formattedFullTime\n\t\t},\n\t\tformattedFullTime() {\n\t\t\tconst formatter = new Intl.DateTimeFormat(getCanonicalLocale(), this.format)\n\t\t\treturn formatter.format(this.dateObject)\n\t\t},\n\t},\n\n\twatch: {\n\t\t/**\n\t\t * Set or clear interval if relative time is dis/enabled\n\t\t *\n\t\t * @param {boolean} newValue The new value of the relativeTime property\n\t\t */\n\t\trelativeTime(newValue) {\n\t\t\twindow.clearInterval(this.intervalId)\n\t\t\tthis.intervalId = undefined\n\t\t\tif (newValue) {\n\t\t\t\tthis.intervalId = window.setInterval(this.setCurrentTime, 1000)\n\t\t\t}\n\t\t},\n\t},\n\n\tmounted() {\n\t\t// Start the interval for setting the current time if relative time is enabled\n\t\tif (this.relativeTime !== false) {\n\t\t\tthis.intervalId = window.setInterval(this.setCurrentTime, 1000)\n\t\t}\n\t},\n\n\tdestroyed() {\n\t\t// ensure interval is cleared\n\t\twindow.clearInterval(this.intervalId)\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Set `currentTime` to the current timestamp, required as Date.now() is not reactive.\n\t\t */\n\t\tsetCurrentTime() {\n\t\t\tthis.currentTime = Date.now()\n\t\t},\n\t},\n})\n</script>\n","<template>\n\t<tr :tabindex=\"(showCheckbox && !isDirectory) ? undefined : 0\"\n\t\t:aria-selected=\"!isPickable ? undefined : selected\"\n\t\t:class=\"['file-picker__row', {\n\t\t\t'file-picker__row--selected': selected && !showCheckbox\n\t\t}]\"\n\t\t:data-filename=\"node.basename\"\n\t\tdata-testid=\"file-list-row\"\n\t\t@click=\"handleClick\"\n\t\tv-on=\"\n\t\t\t/* same as tabindex -> if we hide the checkbox or this is a directory we need keyboard access to enter the directory or select the node */\n\t\t\t(!showCheckbox || isDirectory) ? { keydown: handleKeyDown } : {}\n\t\t\">\n\t\t<td v-if=\"showCheckbox\" class=\"row-checkbox\">\n\t\t\t<NcCheckboxRadioSwitch :disabled=\"!isPickable\"\n\t\t\t\t:checked=\"selected\"\n\t\t\t\t:aria-label=\"t('Select the row for {nodename}', { nodename: displayName })\"\n\t\t\t\tdata-testid=\"row-checkbox\"\n\t\t\t\t@click.stop=\"/* just stop the click event */\"\n\t\t\t\t@update:checked=\"toggleSelected\" />\n\t\t</td>\n\t\t<td class=\"row-name\">\n\t\t\t<div class=\"file-picker__name-container\" data-testid=\"row-name\">\n\t\t\t\t<FilePreview :node=\"node\" />\n\t\t\t\t<div class=\"file-picker__file-name\" :title=\"displayName\" v-text=\"displayName\" />\n\t\t\t\t<div class=\"file-picker__file-extension\" v-text=\"fileExtension\" />\n\t\t\t</div>\n\t\t</td>\n\t\t<td class=\"row-size\">\n\t\t\t{{ formatFileSize(node.size || 0) }}\n\t\t</td>\n\t\t<td class=\"row-modified\">\n\t\t\t<NcDatetime v-if=\"node.mtime\" :timestamp=\"node.mtime\" :ignore-seconds=\"true\" />\n\t\t\t<span v-else>{{ t('Unset') }}</span>\n\t\t</td>\n\t</tr>\n</template>\n<script setup lang=\"ts\">\nimport type { Node } from '@nextcloud/files'\n\nimport { formatFileSize, FileType } from '@nextcloud/files'\nimport { NcCheckboxRadioSwitch } from '@nextcloud/vue'\nimport { computed } from 'vue'\nimport { t } from '../../utils/l10n'\n\nimport FilePreview from './FilePreview.vue'\nimport NcDatetime from './NcDatetime.vue'\n\nconst props = defineProps<{\n\t/** Can directories be picked */\n\tallowPickDirectory: boolean\n\t/** Is this node currently selected */\n\tselected: boolean\n\t/** Whether to show the checkbox in first column */\n\tshowCheckbox: boolean\n\t/** Whether the node can be picked */\n\tcanPick: boolean\n\t/** The current node */\n\tnode: Node\n}>()\n\nconst emit = defineEmits<{\n\t/** Emitted when the selected state is changed */\n\t(e: 'update:selected', v: boolean): void\n\t/** Emitted when a directory was not selected but entered */\n\t(e: 'enter-directory', node: Node): void\n}>()\n\n/**\n * The displayname of the current node (excluding file extension)\n */\nconst displayName = computed(() => props.node.attributes?.displayName || props.node.basename.slice(0, props.node.extension ? -props.node.extension.length : undefined))\n\n/**\n * The file extension of the file\n */\nconst fileExtension = computed(() => props.node.extension)\n\n/**\n * Check if the node is a directory\n */\nconst isDirectory = computed(() => props.node.type === FileType.Folder)\n\n/**\n * If this node can be picked, basically just check if picking a directory is allowed\n */\nconst isPickable = computed(() => props.canPick && (props.allowPickDirectory || !isDirectory.value))\n\n/**\n * Toggle the selection state\n */\nfunction toggleSelected() {\n\temit('update:selected', !props.selected)\n}\n\n/**\n * Handle clicking the table row, if it is a directory it is opened, else selected\n */\nfunction handleClick() {\n\tif (isDirectory.value) {\n\t\temit('enter-directory', props.node)\n\t} else {\n\t\ttoggleSelected()\n\t}\n}\n\n/**\n * Handle keydown on the table row, pressing the enter key will be similar to clicking for keyboard navigation\n * @param event The Keydown event\n */\nfunction handleKeyDown(event: KeyboardEvent) {\n\tif (event.key === 'Enter') {\n\t\thandleClick()\n\t}\n}\n</script>\n\n<style scoped lang=\"scss\">\n@use './FileList.scss';\n\n.file-picker {\n\t&__row {\n\t\t&--selected {\n\t\t\tbackground-color: var(--color-background-dark);\n\t\t}\n\t\t&:hover {\n\t\t\tbackground-color: var(--color-background-hover);\n\t\t}\n\t}\n\n\t&__name-container {\n\t\tdisplay: flex;\n\t\tjustify-content: start;\n\t\talign-items: center;\n\t\theight: 100%;\n\t}\n\n\t&__file-name {\n\t\tpadding-inline-start: 6px;\n\t\tmin-width: 0;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t}\n\n\t&__file-extension {\n\t\tcolor: var(--color-text-maxcontrast);\n\t\tmin-width: fit-content;\n\t}\n}\n</style>\n","<template>\n\t<div ref=\"fileContainer\" class=\"file-picker__files\">\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-if=\"multiselect\" class=\"row-checkbox\">\n\t\t\t\t\t\t<span class=\"hidden-visually\">\n\t\t\t\t\t\t\t{{ t('Select entry') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<NcCheckboxRadioSwitch v-if=\"multiselect\"\n\t\t\t\t\t\t\t:aria-label=\"t('Select all entries')\"\n\t\t\t\t\t\t\t:checked=\"allSelected\"\n\t\t\t\t\t\t\tdata-testid=\"select-all-checkbox\"\n\t\t\t\t\t\t\t@update:checked=\"onSelectAll\" />\n\t\t\t\t\t</th>\n\t\t\t\t\t<th :aria-sort=\"sortByName\" class=\"row-name\">\n\t\t\t\t\t\t<div class=\"header-wrapper\">\n\t\t\t\t\t\t\t<span class=\"file-picker__header-preview\" />\n\t\t\t\t\t\t\t<NcButton :wide=\"true\"\n\t\t\t\t\t\t\t\ttype=\"tertiary\"\n\t\t\t\t\t\t\t\tdata-test=\"file-picker_sort-name\"\n\t\t\t\t\t\t\t\t@click=\"toggleSortByName\">\n\t\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t\t<IconSortAscending v-if=\"sortByName === 'ascending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t\t<IconSortDescending v-else-if=\"sortByName === 'descending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t\t<span v-else style=\"width: 44px\" />\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t{{ t('Name') }}\n\t\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th :aria-sort=\"sortBySize\" class=\"row-size\">\n\t\t\t\t\t\t<NcButton :wide=\"true\" type=\"tertiary\" @click=\"toggleSortBySize\">\n\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t<IconSortAscending v-if=\"sortBySize === 'ascending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t<IconSortDescending v-else-if=\"sortBySize === 'descending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t<span v-else style=\"width: 44px\" />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ t('Size') }}\n\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t</th>\n\t\t\t\t\t<th :aria-sort=\"sortByModified\" class=\"row-modified\">\n\t\t\t\t\t\t<NcButton :wide=\"true\" type=\"tertiary\" @click=\"toggleSortByModified\">\n\t\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t\t<IconSortAscending v-if=\"sortByModified === 'ascending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t<IconSortDescending v-else-if=\"sortByModified === 'descending'\" :size=\"20\" />\n\t\t\t\t\t\t\t\t<span v-else style=\"width: 44px\" />\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t{{ t('Modified') }}\n\t\t\t\t\t\t</NcButton>\n\t\t\t\t\t</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<template v-if=\"loading\">\n\t\t\t\t\t<LoadingTableRow v-for=\"index in skeletonNumber\" :key=\"index\" :show-checkbox=\"multiselect\" />\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<FileListRow v-for=\"file in sortedFiles\"\n\t\t\t\t\t\t:key=\"file.fileid || file.path\"\n\t\t\t\t\t\t:allow-pick-directory=\"allowPickDirectory\"\n\t\t\t\t\t\t:show-checkbox=\"multiselect\"\n\t\t\t\t\t\t:can-pick=\"multiselect || selectedFiles.length === 0 || selectedFiles.includes(file)\"\n\t\t\t\t\t\t:selected=\"selectedFiles.includes(file)\"\n\t\t\t\t\t\t:node=\"file\"\n\t\t\t\t\t\t@update:selected=\"onNodeSelected(file)\"\n\t\t\t\t\t\t@enter-directory=\"onChangeDirectory\" />\n\t\t\t\t</template>\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\nimport { FileType, type Node } from '@nextcloud/files'\n\nimport { getCanonicalLocale } from '@nextcloud/l10n'\nimport { NcButton, NcCheckboxRadioSwitch } from '@nextcloud/vue'\nimport { t } from '../../utils/l10n'\nimport { computed, nextTick, onMounted, onUnmounted, ref, type Ref } from 'vue'\n\nimport IconSortAscending from 'vue-material-design-icons/MenuUp.vue'\nimport IconSortDescending from 'vue-material-design-icons/MenuDown.vue'\nimport LoadingTableRow from './LoadingTableRow.vue'\nimport FileListRow from './FileListRow.vue'\n\nconst props = defineProps<{\n\tmultiselect: boolean\n\tallowPickDirectory: boolean\n\tloading: boolean\n\tfiles: Node[]\n\tselectedFiles: Node[]\n\tpath: string\n}>()\n\nconst emit = defineEmits<{\n\t(e: 'update:path', path: string): void\n\t(e: 'update:selectedFiles', nodes: Node[]): void\n}>()\n\ntype ISortingOptions = 'ascending' | 'descending' | undefined\n\nconst sortByName = ref<ISortingOptions>('ascending')\nconst sortBySize = ref<ISortingOptions>(undefined)\nconst sortByModified = ref<ISortingOptions>(undefined)\n\nconst ordering = {\n\tascending: <T, >(a: T, b: T, fn: (a: T, b: T) => number) => fn(a, b),\n\tdescending: <T, >(a: T, b: T, fn: (a: T, b: T) => number) => fn(b, a),\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tnone: <T, >(a: T, b: T, fn: (a: T, b: T) => number) => 0,\n}\n\nconst byName = (a: Node, b: Node) => (a.attributes?.displayName || a.basename).localeCompare(b.attributes?.displayName || b.basename, getCanonicalLocale())\nconst bySize = (a: Node, b: Node) => (b.size || 0) - (a.size || 0)\nconst byDate = (a: Node, b: Node) => (a.mtime?.getTime() || 0) - (b.mtime?.getTime() || 0)\n\nconst toggleSorting = (variable: Ref<ISortingOptions>) => {\n\tconst old = variable.value\n\t// reset\n\tsortByModified.value = sortBySize.value = sortByName.value = undefined\n\n\tif (old === 'ascending') {\n\t\tvariable.value = 'descending'\n\t} else {\n\t\tvariable.value = 'ascending'\n\t}\n}\n\nconst toggleSortByName = () => toggleSorting(sortByName)\nconst toggleSortBySize = () => toggleSorting(sortBySize)\nconst toggleSortByModified = () => toggleSorting(sortByModified)\n\n/**\n * Files sorted by columns\n */\nconst sortedFiles = computed(() => [...props.files].sort(\n\t(a, b) =>\n\t\t// Folders always come above the files\n\t\t(b.type === FileType.Folder ? 1 : 0) - (a.type === FileType.Folder ? 1 : 0)\n\t\t// Favorites above other files\n\t\t// (b.attributes?.favorite || false) - (a.attributes?.favorite || false) ||\n\t\t// then sort by name / size / modified\n\t\t|| ordering[sortByName.value || 'none'](a, b, byName)\n\t\t|| ordering[sortBySize.value || 'none'](a, b, bySize)\n\t\t|| ordering[sortByModified.value || 'none'](a, b, byDate),\n))\n\n/**\n * Contains the selectable files, filtering out directories if `allowPickDirectory` is not set\n */\nconst selectableFiles = computed(() => props.files.filter((file) => props.allowPickDirectory || file.type !== FileType.Folder))\n\n/**\n * Whether all selectable files are currently selected\n */\nconst allSelected = computed(() => !props.loading && props.selectedFiles.length > 0 && props.selectedFiles.length >= selectableFiles.value.length)\n\n/**\n * Handle the \"select all\" checkbox\n */\nfunction onSelectAll() {\n\tif (props.selectedFiles.length < selectableFiles.value.length) {\n\t\t// If not all selected, select all\n\t\temit('update:selectedFiles', selectableFiles.value)\n\t} else {\n\t\t// If already all selected, deselect all\n\t\temit('update:selectedFiles', [])\n\t}\n}\n\nfunction onNodeSelected(file: Node) {\n\tif (props.selectedFiles.includes(file)) {\n\t\temit('update:selectedFiles', props.selectedFiles.filter((f) => f.path !== file.path))\n\t} else {\n\t\tif (props.multiselect) {\n\t\t\temit('update:selectedFiles', [...props.selectedFiles, file])\n\t\t} else {\n\t\t\t// no multi select so only this file is selected\n\t\t\temit('update:selectedFiles', [file])\n\t\t}\n\t}\n}\n\nfunction onChangeDirectory(dir: Node) {\n\temit('update:path', dir.path)\n}\n\n/**\n * Number of loading skeletons to use to fill the filepicker\n */\nconst skeletonNumber = ref(4)\nconst fileContainer = ref<HTMLDivElement>()\n{\n\tconst resize = () => nextTick(() => {\n\t\tconst nodes = fileContainer.value?.parentElement?.children || []\n\t\tlet height = fileContainer.value?.parentElement?.clientHeight || 450\n\t\tfor (let index = 0; index < nodes.length; index++) {\n\t\t\tif (!fileContainer.value?.isSameNode(nodes[index])) {\n\t\t\t\theight -= nodes[index].clientHeight\n\t\t\t}\n\t\t}\n\t\t// container height - 50px table header / row height of 50px\n\t\tskeletonNumber.value = Math.floor((height - 50) / 50)\n\t})\n\tonMounted(() => {\n\t\twindow.addEventListener('resize', resize)\n\t\tresize()\n\t})\n\tonUnmounted(() => {\n\t\twindow.removeEventListener('resize', resize)\n\t})\n}\n</script>\n\n<style scoped lang=\"scss\">\n.file-picker {\n\t&__header-preview {\n\t\twidth: 22px; // 32px - 16px padding of button + 6px padding in file list rows\n\t\theight: 32px;\n\t\tflex: 0 0 auto; // do not shrink or grow\n\t}\n\n\t&__files {\n\t\t// ensure focus outlines are visible\n\t\tmargin: 2px;\n\t\tmargin-inline-start: 12px; // align with bread crumbs\n\t\toverflow: scroll auto;\n\n\t\ttable {\n\t\t\twidth: 100%;\n\t\t\tmax-height: 100%;\n\t\t\ttable-layout: fixed;\n\t\t}\n\t\tth {\n\t\t\tposition: sticky;\n\t\t\tz-index: 1; // show on top of scrolled content rows\n\t\t\ttop: 0;\n\t\t\tbackground-color: var(--color-main-background);\n\t\t\t// ensure focus outline of buttons is visible\n\t\t\tpadding: 2px;\n\n\t\t\t.header-wrapper {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t&.row-checkbox {\n\t\t\t\twidth: 44px;\n\t\t\t}\n\t\t\t&.row-name {\n\t\t\t\twidth: 230px;\n\t\t\t}\n\t\t\t&.row-size {\n\t\t\t\twidth: 100px;\n\t\t\t}\n\t\t\t&.row-modified {\n\t\t\t\twidth: 120px;\n\t\t\t}\n\t\t}\n\n\t\t// >> begin of hacks for table header sorting buttons\n\t\t// TODO: Remove this hack after ... is available\n\t\tth:not(.row-size) {\n\t\t\t:deep(.button-vue__wrapper) {\n\t\t\t\tjustify-content: start;\n\t\t\t\tflex-direction: row-reverse;\n\t\t\t}\n\t\t\t:deep(.button-vue) {\n\t\t\t\tpadding-inline: 16px 4px;\n\t\t\t}\n\t\t}\n\t\tth.row-size :deep(.button-vue__wrapper) {\n\t\t\tjustify-content: end;\n\t\t}\n\t\tth :deep(.button-vue__wrapper) {\n\t\t\tcolor: var(--color-text-maxcontrast);\n\n\t\t\t.button-vue__text {\n\t\t\t\tfont-weight: normal;\n\t\t\t}\n\t\t}\n\t\t// << end of hacks\n\t}\n}\n</style>\n","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon home-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"HomeIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon plus-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"PlusIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n\t<NcBreadcrumbs class=\"file-picker__breadcrumbs\">\n\t\t<template #default>\n\t\t\t<NcBreadcrumb :name=\"t('Home')\"\n\t\t\t\t:title=\"t('Home')\"\n\t\t\t\t@click=\"emit('update:path', '/')\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconHome :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t</NcBreadcrumb>\n\t\t\t<NcBreadcrumb v-for=\"dir in pathElements\"\n\t\t\t\t:key=\"dir.path\"\n\t\t\t\t:name=\"dir.name\"\n\t\t\t\t:title=\"dir.path\"\n\t\t\t\t@click=\"emit('update:path', dir.path)\" />\n\t\t</template>\n\t\t<template v-if=\"showMenu\" #actions>\n\t\t\t<NcActions :aria-label=\"t('Create directory')\"\n\t\t\t\t:force-menu=\"true\"\n\t\t\t\t:force-title=\"true\"\n\t\t\t\t:menu-title=\"t('New')\"\n\t\t\t\ttype=\"secondary\"\n\t\t\t\t@close=\"newNodeName = ''\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconPlus :size=\"20\" />\n\t\t\t\t</template>\n\t\t\t\t<NcActionInput ref=\"nameInput\"\n\t\t\t\t\t:value.sync=\"newNodeName\"\n\t\t\t\t\t:label=\"t('New folder')\"\n\t\t\t\t\t:placeholder=\"t('New folder name')\"\n\t\t\t\t\t@submit=\"onSubmit\"\n\t\t\t\t\t@input=\"validateInput\">\n\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t<IconFolder :size=\"20\" />\n\t\t\t\t\t</template>\n\t\t\t\t</NcActionInput>\n\t\t\t</NcActions>\n\t\t</template>\n\t</NcBreadcrumbs>\n</template>\n\n<script setup lang=\"ts\">\nimport type Vue from 'vue'\n\nimport IconFolder from 'vue-material-design-icons/Folder.vue'\nimport IconHome from 'vue-material-design-icons/Home.vue'\nimport IconPlus from 'vue-material-design-icons/Plus.vue'\n\nimport { NcActions, NcActionInput, NcBreadcrumbs, NcBreadcrumb } from '@nextcloud/vue'\nimport { computed, ref } from 'vue'\nimport { t } from '../../utils/l10n'\n\nconst props = defineProps<{\n\t/** Current path to display */\n\tpath: string\n\t/** Whether to show the \"new node\" menu or not */\n\tshowMenu: boolean\n}>()\n\nconst emit = defineEmits<{\n\t/**\n\t * Triggered when the path was changed by using the breadcrumbs\n\t */\n\t(e: 'update:path', path: string): void\n\t/**\n\t * Triggered when a new directory on the current path should be created\n\t */\n\t(e: 'create-node', name: string): void\n}>()\n\n/**\n * Input on the \"new node\" menu\n */\nconst newNodeName = ref('')\n\nconst nameInput = ref<Vue>()\n\n/**\n * Validate user folder name input\n */\nfunction validateInput() {\n\tconst name = newNodeName.value.trim()\n\tconst input = nameInput.value?.$el?.querySelector('input')\n\n\tlet validity = ''\n\tif (name.length === 0) {\n\t\tvalidity = t('File name cannot be empty.')\n\t} else if (name.includes('/')) {\n\t\tvalidity = t('\"/\" is not allowed inside a file name.')\n\t} else if (['..', '.'].includes(name)) {\n\t\tvalidity = t('\"{name}\" is an invalid file name.', { name })\n\t} else if (window.OC.config?.blacklist_files_regex && name.match(window.OC.config?.blacklist_files_regex)) {\n\t\tvalidity = t('\"{name}\" is not an allowed filetype', { name })\n\t}\n\tif (input) {\n\t\tinput.setCustomValidity(validity)\n\t}\n\treturn validity === ''\n}\n/**\n * Handle creating a new node\n */\nconst onSubmit = function() {\n\tconst name = newNodeName.value.trim()\n\n\tif (validateInput()) {\n\t\temit('create-node', name)\n\t\tnewNodeName.value = ''\n\t}\n}\n\n/**\n * Split current path and provide the path and the basename\n */\nconst pathElements = computed(() => props.path.split('/')\n\t.filter((v) => v !== '')\n\t.map((v, i, elements) => ({\n\t\tname: v,\n\t\tpath: '/' + elements.slice(0, i + 1).join('/'),\n\t})),\n)\n</script>\n\n<style scoped lang=\"scss\">\n.file-picker {\n\t&__breadcrumbs {\n\t\t// ensure the breadcrumbs have a static height\n\t\tflex-grow: 0 !important;\n\t}\n}\n</style>\n","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon clock-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"ClockIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon close-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"CloseIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon magnify-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"MagnifyIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon star-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"StarIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","import { onBeforeMount, ref } from 'vue'\n\n/**\n * Check whether the component is mounted in a public share\n */\nexport const useIsPublic = () => {\n\tconst checkIsPublic = () => (document.getElementById('isPublic') as HTMLInputElement|null)?.value === '1'\n\n\tconst isPublic = ref(true)\n\tonBeforeMount(() => { isPublic.value = checkIsPublic() })\n\n\treturn {\n\t\tisPublic,\n\t}\n}\n","<template>\n\t<Fragment>\n\t\t<!-- Filter for the file list -->\n\t\t<NcTextField class=\"file-picker__filter-input\"\n\t\t\t:value=\"filterString\"\n\t\t\t:label=\"t('Filter file list')\"\n\t\t\t:show-trailing-button=\"!!filterString\"\n\t\t\t@update:value=\"updateFilterValue\"\n\t\t\t@trailing-button-click=\"updateFilterValue('')\">\n\t\t\t<IconMagnify :size=\"16\" />\n\t\t\t<template #trailing-button-icon>\n\t\t\t\t<IconClose :size=\"16\" />\n\t\t\t</template>\n\t\t</NcTextField>\n\t\t<template v-if=\"!isPublic\">\n\t\t\t<!-- On non collapsed dialogs show the tablist, otherwise a dropdown is shown -->\n\t\t\t<ul v-if=\"!isCollapsed\"\n\t\t\t\tclass=\"file-picker__side\"\n\t\t\t\trole=\"tablist\"\n\t\t\t\t:aria-label=\"t('Filepicker sections')\">\n\t\t\t\t<li v-for=\"view in allViews\" :key=\"view.id\">\n\t\t\t\t\t<NcButton :aria-selected=\"currentView === view.id\"\n\t\t\t\t\t\t:type=\"currentView === view.id ? 'primary' : 'tertiary'\"\n\t\t\t\t\t\t:wide=\"true\"\n\t\t\t\t\t\trole=\"tab\"\n\t\t\t\t\t\t@click=\"$emit('update:currentView', view.id)\">\n\t\t\t\t\t\t<template #icon>\n\t\t\t\t\t\t\t<component :is=\"view.icon\" :size=\"20\" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t{{ view.label }}\n\t\t\t\t\t</NcButton>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<NcSelect v-else\n\t\t\t\t:aria-label=\"t('Current view selector')\"\n\t\t\t\t:clearable=\"false\"\n\t\t\t\t:searchable=\"false\"\n\t\t\t\t:options=\"allViews\"\n\t\t\t\t:value=\"currentViewObject\"\n\t\t\t\t@input=\"v => emit('update:currentView', v.id)\" />\n\t\t</template>\n\t</Fragment>\n</template>\n\n<script setup lang=\"ts\">\nimport IconFolder from 'vue-material-design-icons/Folder.vue'\nimport IconClock from 'vue-material-design-icons/Clock.vue'\nimport IconClose from 'vue-material-design-icons/Close.vue'\nimport IconMagnify from 'vue-material-design-icons/Magnify.vue'\nimport IconStar from 'vue-material-design-icons/Star.vue'\n\nimport { NcButton, NcSelect, NcTextField } from '@nextcloud/vue'\nimport { computed } from 'vue'\nimport { Fragment } from 'vue-frag'\nimport { t } from '../../utils/l10n'\nimport { useIsPublic } from '../../usables/isPublic'\n\nconst { isPublic } = useIsPublic()\n\nconst allViews = [{\n\tid: 'files',\n\tlabel: t('All files'),\n\ticon: IconFolder,\n}, {\n\tid: 'recent',\n\tlabel: t('Recent'),\n\ticon: IconClock,\n}, {\n\tid: 'favorites',\n\tlabel: t('Favorites'),\n\ticon: IconStar,\n}]\n\nconst props = defineProps<{\n\tcurrentView: 'files' | 'recent' | 'favorites',\n\tfilterString: string,\n\tisCollapsed: boolean\n}>()\n\ninterface INavigationEvents {\n\t(e: 'update:currentView', v: typeof props.currentView): void\n\t(e: 'update:filterString', v: string): void\n}\nconst emit = defineEmits<INavigationEvents>()\n\n/**\n * The currently active view object\n */\nconst currentViewObject = computed(() => allViews.filter(v => v.id === props.currentView)[0])\n\n/**\n * Propagate current filter value to paren\n *\n * @param value The new filter value\n */\nconst updateFilterValue = (value: string) => emit('update:filterString', value)\n</script>\n\n<style scoped lang=\"scss\">\n.file-picker {\n\t&__side {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: start;\n\t\tgap: 0.5rem;\n\t\tmin-width: 200px;\n\t\t// ensure focus outline is visible\n\t\tpadding-block: 2px;\n\t\t// make only the navigation scroll\n\t\toverflow: auto;\n\n\t\t:deep(.button-vue__wrapper) {\n\t\t\tjustify-content: start;\n\t\t}\n\t}\n\n\t&__filter-input {\n\t\t// Align with view title and breadcrumbs\n\t\tmargin-block: 7px; // 36px height + 2x 7px => 50px\n\n\t\tmax-width: 260px;\n\t}\n}\n\n// Ensure filepicker works on mobile\n@media (max-width: 736px) {\n\t.file-picker {\n\t\t&__side {\n\t\t\tflex-direction: row;\n\t\t\tmin-width: unset;\n\n\t\t}\n\t}\n}\n@media (max-width: 512px) {\n\t.file-picker {\n\t\t&__side {\n\t\t\tflex-direction: row;\n\t\t\tmin-width: unset;\n\n\t\t}\n\t\t&__filter-input {\n\t\t\tmax-width: unset;\n\t\t}\n\t}\n}\n</style>\n\n<style lang=\"scss\">\n/* Ensure focus outline is visible */\n.file-picker__navigation {\n\tpadding-inline: 2px;\n\t&, * {\n\t\tbox-sizing: border-box;\n\t}\n\n\t.v-select.select {\n\t\tmin-width: 220px;\n\t}\n}\n\n@media (min-width: 513px) and (max-width: 736px) {\n\t.file-picker__navigation {\n\t\tgap: 11px;\n\t}\n}\n\n@media (max-width: 512px) {\n\t.file-picker__navigation {\n\t\tflex-direction: column-reverse!important;\n\t}\n}\n</style>\n","/**\n * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Folder, Node } from '@nextcloud/files'\nimport type { ComputedRef, Ref } from 'vue'\nimport type { FileStat, ResponseDataDetailed, SearchResult } from 'webdav'\n\nimport { davGetClient, davGetDefaultPropfind, davGetRecentSearch, davRemoteURL, davResultToNode, davRootPath, getFavoriteNodes } from '@nextcloud/files'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { dirname, join } from 'path'\nimport { computed, ref, watch } from 'vue'\n\n/**\n * Handle file loading using WebDAV\n *\n * @param currentView Reference to the current files view\n * @param currentPath Reference to the current files path\n * @param isPublicEndpoint Whether the filepicker is used on a public share\n */\nexport const useDAVFiles = function(\n\tcurrentView: Ref<'files'|'recent'|'favorites'> | ComputedRef<'files'|'recent'|'favorites'>,\n\tcurrentPath: Ref<string> | ComputedRef<string>,\n\tisPublicEndpoint: Ref<boolean> | ComputedRef<boolean>,\n): { isLoading: Ref<boolean>, createDirectory: (name: string) => Promise<Folder>, files: Ref<Node[]>, loadFiles: () => Promise<void>, getFile: (path: string) => Promise<Node> } {\n\n\tconst defaultRootPath = computed(() => isPublicEndpoint.value ? '/' : davRootPath)\n\n\tconst defaultRemoteUrl = computed(() => {\n\t\tif (isPublicEndpoint.value) {\n\t\t\treturn generateRemoteUrl('webdav').replace('/remote.php', '/public.php')\n\t\t}\n\t\treturn davRemoteURL\n\t})\n\n\t/**\n\t * The WebDAV client\n\t */\n\tconst client = computed(() => {\n\t\tif (isPublicEndpoint.value) {\n\t\t\tconst token = (document.getElementById('sharingToken')! as HTMLInputElement).value\n\t\t\tconst autorization = btoa(`${token}:null`)\n\n\t\t\tconst client = davGetClient(defaultRemoteUrl.value)\n\t\t\tclient.setHeaders({ Authorization: `Basic ${autorization}` })\n\t\t\treturn client\n\t\t}\n\n\t\treturn davGetClient()\n\t})\n\n\tconst resultToNode = (result: FileStat) => {\n\t\tconst node = davResultToNode(result, defaultRootPath.value, defaultRemoteUrl.value)\n\t\t// Fixed for @nextcloud/files 3.1.0 but not supported on Nextcloud 27 so patching it\n\t\tif (isPublicEndpoint.value) {\n\t\t\treturn new Proxy(node, {\n\t\t\t\tget(node, prop) {\n\t\t\t\t\tif (prop === 'dirname' || prop === 'path') {\n\t\t\t\t\t\tconst source = node.source\n\t\t\t\t\t\tlet path = source.slice(defaultRemoteUrl.value.length)\n\t\t\t\t\t\tif (path[0] !== '/') {\n\t\t\t\t\t\t\tpath = `/${path}`\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (prop === 'dirname') {\n\t\t\t\t\t\t\treturn dirname(path)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn path\n\t\t\t\t\t}\n\t\t\t\t\treturn (node as never)[prop]\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t\treturn node\n\t}\n\n\t/**\n\t * All queried files\n\t */\n\tconst files = ref<Node[]>([] as Node[]) as Ref<Node[]>\n\n\t/**\n\t * Loading state of the files\n\t */\n\tconst isLoading = ref(true)\n\n\t/**\n\t * Create a new directory in the current path\n\t * @param name Name of the new directory\n\t * @return {Promise<Folder>} The created directory\n\t */\n\tasync function createDirectory(name: string): Promise<Folder> {\n\t\tconst path = join(currentPath.value, name)\n\n\t\tawait client.value.createDirectory(join(defaultRootPath.value, path))\n\t\tconst directory = await getFile(path) as Folder\n\t\tfiles.value.push(directory)\n\t\treturn directory\n\t}\n\n\t/**\n\t * Get information for one file\n\t * @param path The path of the file or folder\n\t * @param rootPath The dav root path to use (or the default is nothing set)\n\t */\n\tasync function getFile(path: string, rootPath: string|undefined = undefined) {\n\t\trootPath = rootPath ?? defaultRootPath.value\n\n\t\tconst { data } = await client.value.stat(`${rootPath}${path}`, {\n\t\t\tdetails: true,\n\t\t\tdata: davGetDefaultPropfind(),\n\t\t}) as ResponseDataDetailed<FileStat>\n\t\treturn resultToNode(data)\n\t}\n\n\t/**\n\t * Load files using the DAV client\n\t */\n\tasync function loadDAVFiles() {\n\t\tisLoading.value = true\n\n\t\tif (currentView.value === 'favorites') {\n\t\t\tfiles.value = await getFavoriteNodes(client.value, currentPath.value, defaultRootPath.value)\n\t\t} else if (currentView.value === 'recent') {\n\t\t\t// unix timestamp in seconds, two weeks ago\n\t\t\tconst lastTwoWeek = Math.round(Date.now() / 1000) - (60 * 60 * 24 * 14)\n\t\t\tconst { data } = await client.value.search('/', {\n\t\t\t\tdetails: true,\n\t\t\t\tdata: davGetRecentSearch(lastTwoWeek),\n\t\t\t}) as ResponseDataDetailed<SearchResult>\n\t\t\tfiles.value = data.results.map(resultToNode)\n\t\t} else {\n\t\t\tconst results = await client.value.getDirectoryContents(`${defaultRootPath.value}${currentPath.value}`, {\n\t\t\t\tdetails: true,\n\t\t\t\tdata: davGetDefaultPropfind(),\n\t\t\t}) as ResponseDataDetailed<FileStat[]>\n\t\t\tfiles.value = results.data.map(resultToNode)\n\n\t\t\t// Hack for the public endpoint which always returns folder itself\n\t\t\tif (isPublicEndpoint.value) {\n\t\t\t\tfiles.value = files.value.filter((file) => file.path !== currentPath.value)\n\t\t\t}\n\t\t}\n\n\t\tisLoading.value = false\n\t}\n\n\t/**\n\t * Watch for ref changes\n\t */\n\twatch([currentView, currentPath], () => loadDAVFiles())\n\n\treturn {\n\t\tisLoading,\n\t\tfiles,\n\t\tloadFiles: () => loadDAVFiles(),\n\t\tgetFile,\n\t\tcreateDirectory,\n\t}\n}\n","/**\n * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @author Ferdinand Thiessen <opensource@fthiessen.de>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { ComputedRef, Ref } from 'vue'\nimport { computed } from 'vue'\n\n/**\n * Create a filter function for MIME types\n * The filter function supports MIME type filters with wildcards\n *\n * @param allowedMIMETypes Reference to allowed MIME types\n */\nexport const useMimeFilter = function(allowedMIMETypes: Ref<readonly string[]> | ComputedRef<readonly string[]>) {\n\t// Cache splitted MIME types\n\tconst splittedTypes = computed(() => allowedMIMETypes.value.map((filter) => filter.split('/')))\n\n\t/**\n\t * Check if a given MIME type string is supported by the MIME filter values\n\t * @param mime MIME type string to check\n\t * @return True if mime is allowed by MIME filter values, false otherwise\n\t */\n\tconst isSupportedMimeType = (mime: string): boolean => {\n\t\tconst mimeTypeArray = mime.split('/')\n\t\treturn splittedTypes.value.some(\n\t\t\t([type, subtype]) =>\n\t\t\t\t// check mime type matches or is wildcard\n\t\t\t\t(mimeTypeArray[0] === type || type === '*')\n\t\t\t\t// check mime subtype matches or is wildcard\n\t\t\t\t&& (mimeTypeArray[1] === subtype || subtype === '*'),\n\t\t)\n\t}\n\n\treturn {\n\t\tisSupportedMimeType,\n\t}\n}\n","<template>\n\t<DialogBase :container=\"container\"\n\t\t:name=\"name\"\n\t\t:buttons=\"dialogButtons\"\n\t\tsize=\"large\"\n\t\tcontent-classes=\"file-picker__content\"\n\t\tdialog-classes=\"file-picker\"\n\t\tnavigation-classes=\"file-picker__navigation\"\n\t\t@close=\"handleClose\">\n\t\t<template #navigation=\"{ isCollapsed }\">\n\t\t\t<FilePickerNavigation :is-collapsed=\"isCollapsed\" :current-view.sync=\"currentView\" :filter-string.sync=\"filterString\" />\n\t\t</template>\n\n\t\t<div class=\"file-picker__main\">\n\t\t\t<!-- Header title / file list breadcrumbs -->\n\t\t\t<FilePickerBreadcrumbs v-if=\"currentView === 'files'\"\n\t\t\t\t:path.sync=\"currentPath\"\n\t\t\t\t:show-menu=\"allowPickDirectory\"\n\t\t\t\t@create-node=\"onCreateFolder\" />\n\t\t\t<div v-else class=\"file-picker__view\">\n\t\t\t\t<h3>{{ viewHeadline }}</h3>\n\t\t\t</div>\n\n\t\t\t<!-- File list -->\n\t\t\t<!-- If loading or files found show file list, otherwise show empty content-->\n\t\t\t<FileList v-if=\"isLoading || filteredFiles.length > 0\"\n\t\t\t\t:allow-pick-directory=\"allowPickDirectory\"\n\t\t\t\t:files=\"filteredFiles\"\n\t\t\t\t:multiselect=\"multiselect\"\n\t\t\t\t:loading=\"isLoading\"\n\t\t\t\t:path.sync=\"currentPath\"\n\t\t\t\t:selected-files.sync=\"selectedFiles\"\n\t\t\t\t:name=\"viewHeadline\"\n\t\t\t\t@update:path=\"currentView = 'files'\" />\n\t\t\t<NcEmptyContent v-else-if=\"filterString\"\n\t\t\t\t:name=\"t('No matching files')\"\n\t\t\t\t:description=\"t('No files matching your filter were found.')\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconFile />\n\t\t\t\t</template>\n\t\t\t</NcEmptyContent>\n\t\t\t<NcEmptyContent v-else\n\t\t\t\t:name=\"t('No files in here')\"\n\t\t\t\t:description=\"noFilesDescription\">\n\t\t\t\t<template #icon>\n\t\t\t\t\t<IconFile />\n\t\t\t\t</template>\n\t\t\t</NcEmptyContent>\n\t\t</div>\n\t</DialogBase>\n</template>\n\n<script setup lang=\"ts\">\nimport type { IDialogButton, IFilePickerButton, IFilePickerButtonFactory, IFilePickerFilter } from '../types'\nimport type { Node } from '@nextcloud/files'\n\nimport IconFile from 'vue-material-design-icons/File.vue'\nimport DialogBase from '../DialogBase.vue'\nimport FileList from './FileList.vue'\nimport FilePickerBreadcrumbs from './FilePickerBreadcrumbs.vue'\nimport FilePickerNavigation from './FilePickerNavigation.vue'\n\nimport { NcEmptyContent } from '@nextcloud/vue'\nimport { computed, onMounted, ref, toRef } from 'vue'\nimport { showError } from '../../toast'\nimport { useDAVFiles } from '../../usables/dav'\nimport { useMimeFilter } from '../../usables/mime'\nimport { useIsPublic } from '../../usables/isPublic'\nimport { t } from '../../utils/l10n'\n\nconst props = withDefaults(defineProps<{\n\t/** Buttons to be displayed */\n\tbuttons: IFilePickerButton[] | IFilePickerButtonFactory\n\n\t/** The name of file picker dialog (heading) */\n\tname: string\n\n\t/**\n\t * Can directories be picked\n\t * @default false\n\t */\n\tallowPickDirectory?: boolean\n\n\t/**\n\t * Where to mount the dialog\n\t * @default 'body'\n\t */\n\tcontainer?: string\n\n\t/**\n\t * Custom filter function used to filter pickable files\n\t */\n\tfilterFn?: IFilePickerFilter\n\n\t/**\n\t * List of allowed mime types\n\t * You can use placeholders for e.g. allowing all subtypes of images `['image/*']`.\n\t * Note that if unset all files are allowed, which is the same as passing `['*∕*']`\n\t * @default []\n\t */\n\tmimetypeFilter?: string[]\n\n\t/**\n\t * Is it allowed to pick multiple files\n\t * @default true\n\t */\n\tmultiselect?: boolean\n\n\t/**\n\t * The initial path of the file picker\n\t * @default '/'\n\t */\n\t path?: string\n}>(), {\n\tallowPickDirectory: false,\n\tcontainer: 'body',\n\tfilterFn: undefined,\n\tmimetypeFilter: () => [],\n\tmultiselect: true,\n\tpath: '/',\n})\n\nconst emit = defineEmits<{\n\t(e: 'close', v?: Node[]): void\n}>()\n\n/**\n * Whether we are on a public endpoint (e.g. public share)\n */\nconst { isPublic } = useIsPublic()\n\n/**\n * Map buttons to Dialog buttons by wrapping the callback function to pass the selected files\n */\nconst dialogButtons = computed(() => {\n\tconst buttons = typeof props.buttons === 'function'\n\t\t? props.buttons(selectedFiles.value as Node[], currentPath.value, currentView.value)\n\t\t: props.buttons\n\n\treturn buttons.map((button) => ({\n\t\t...button,\n\t\tcallback: async () => {\n\t\t\tisHandlingCallback = true\n\t\t\thandleButtonClick(button.callback)\n\t\t},\n\t} as IDialogButton))\n})\n\n/**\n * Flag that is set when a button was clicked to prevent the default close event to be emitted\n * This is needed as `handleButtonClick` is async and thus might execute after NcDialog already closed\n */\nlet isHandlingCallback = false\n\nconst handleButtonClick = async (callback: IFilePickerButton['callback']) => {\n\tconst nodes = selectedFiles.value.length === 0 && props.allowPickDirectory ? [await getFile(currentPath.value)] : selectedFiles.value as Node[]\n\tcallback(nodes)\n\temit('close', nodes)\n\t// Unlock close\n\tisHandlingCallback = false\n}\n\n/**\n * Handle closing of the dialog\n * Do not emit close event on button press as this is handled by `handleButtonClick`\n */\nconst handleClose = () => {\n\tif (!isHandlingCallback) {\n\t\temit('close')\n\t}\n}\n\n/**\n * Name of the currently active view\n */\nconst currentView = ref<'files' | 'favorites' | 'recent'>('files')\n\n/**\n * Headline to be used on the current view\n */\nconst viewHeadline = computed(() => currentView.value === 'favorites' ? t('Favorites') : (currentView.value === 'recent' ? t('Recent') : ''))\n\n/**\n * All currently selected files\n */\nconst selectedFiles = ref<Node[]>([])\n\n/**\n * Last path navigated to using the file picker\n * (required as sessionStorage is not reactive)\n */\nconst savedPath = ref(window?.sessionStorage.getItem('NC.FilePicker.LastPath') || '/')\n\n/**\n * The path the user manually navigated to using this filepicker instance\n */\nconst navigatedPath = ref<string>()\n\n/**\n * The current path that should be picked from\n */\nconst currentPath = computed({\n\t// Only use the path for the files view as favorites and recent only works on the root\n\tget: () => currentView.value === 'files' ? navigatedPath.value || props.path || savedPath.value : '/',\n\t/**\n\t * Navigate to the new path and save it to the session storage\n\t *\n\t * @param path The new path\n\t */\n\tset: (path: string) => {\n\t\tif (props.path === undefined) {\n\t\t\twindow.sessionStorage.setItem('NC.FilePicker.LastPath', path)\n\t\t}\n\t\tnavigatedPath.value = path\n\t\t// Reset selected files\n\t\tselectedFiles.value = []\n\t},\n})\n\n/**\n * A string used to filter files in current view\n */\nconst filterString = ref('')\n\nconst { isSupportedMimeType } = useMimeFilter(toRef(props, 'mimetypeFilter')) // vue 3.3 will allow cleaner syntax of toRef(() => props.mimetypeFilter)\n\nconst { files, isLoading, loadFiles, getFile, createDirectory } = useDAVFiles(currentView, currentPath, isPublic)\n\nonMounted(() => loadFiles())\n\n/**\n * The files list filtered by the current value of the filter input\n */\nconst filteredFiles = computed(() => {\n\tlet filtered = files.value\n\n\tif (props.mimetypeFilter.length > 0) {\n\t\t// filter by mime type but always include folders to navigate\n\t\tfiltered = filtered.filter(file => file.type === 'folder' || (file.mime && isSupportedMimeType(file.mime)))\n\t}\n\tif (filterString.value) {\n\t\tfiltered = filtered.filter((file) => file.basename.toLowerCase().includes(filterString.value.toLowerCase()))\n\t}\n\tif (props.filterFn) {\n\t\tfiltered = filtered.filter((f) => props.filterFn!(f as Node))\n\t}\n\treturn filtered\n})\n\n/**\n * If no files are found in the current view this message will be shown in the EmptyContent\n */\nconst noFilesDescription = computed(() => {\n\tif (currentView.value === 'files') {\n\t\treturn t('Upload some content or sync with your devices!')\n\t} else if (currentView.value === 'recent') {\n\t\treturn t('Files and folders you recently modified will show up here.')\n\t} else {\n\t\treturn t('Files and folders you mark as favorite will show up here.')\n\t}\n})\n\n/**\n * Handle creating new folder (breadcrumb menu)\n * @param name The new folder name\n */\nconst onCreateFolder = async (name: string) => {\n\ttry {\n\t\tawait createDirectory(name)\n\t} catch (error) {\n\t\tconsole.warn('Could not create new folder', { name, error })\n\t\t// show error to user\n\t\tshowError(t('Could not create the new folder'))\n\t}\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n\tname: 'FilePicker',\n}\n</script>\n\n<style scoped lang=\"scss\">\n.file-picker {\n\t&__view {\n\t\theight: 50px; // align with breadcrumbs\n\t\tdisplay: flex;\n\t\tjustify-content: start;\n\t\talign-items: center;\n\n\t\th3 {\n\t\t\tfont-weight: bold;\n\t\t\theight: fit-content;\n\t\t\tmargin: 0;\n\t\t}\n\t}\n\n\t&__main {\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\t// Auto fit height\n\t\tmin-height: 0;\n\t\tflex: 1;\n\t\t// align with navigation on smaller screens\n\t\tpadding-inline: 2px;\n\n\t\t* {\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t}\n}\n\n:deep(.dialog.file-picker) {\n\t// Dialog is max. 900px wide so the best looking height seems to be 800px\n\theight: min(80vh, 800px);\n}\n\n@media (max-width: 512px) {\n\t:deep(.dialog.file-picker) {\n\t\t// below 512px the modal is fullscreen so we use 100% height - margin of heading (4px + 12px) - height of heading (default-clickable-area)\n\t\theight: calc(100% - 16px - var(--default-clickable-area));\n\t}\n}\n\n:deep(.file-picker__content) {\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n}\n</style>\n"],"names":["_sfc_main","getPreviewURL","node","options","_a","previewUrl","generateUrl","url","usePreviewURL","previewURL","ref","watchEffect","toValue","toRef","props","isFile","computed","FileType","canLoadPreview","watch","loader","FEW_SECONDS_AGO","t","_sfc_main$b","defineComponent","v","formatter","getCanonicalLocale","seconds","minutes","hours","days","weeks","newValue","displayName","fileExtension","isDirectory","isPickable","toggleSelected","emit","handleClick","handleKeyDown","event","sortByName","sortBySize","sortByModified","ordering","a","b","fn","byName","_b","bySize","byDate","toggleSorting","variable","old","toggleSortByName","toggleSortBySize","toggleSortByModified","sortedFiles","selectableFiles","file","allSelected","onSelectAll","onNodeSelected","f","onChangeDirectory","dir","skeletonNumber","fileContainer","resize","nextTick","nodes","height","_d","_c","index","_e","onMounted","onUnmounted","newNodeName","nameInput","validateInput","name","input","validity","onSubmit","pathElements","i","elements","useIsPublic","checkIsPublic","isPublic","onBeforeMount","allViews","IconFolder","IconClock","IconStar","currentViewObject","value","useDAVFiles","currentView","currentPath","isPublicEndpoint","defaultRootPath","davRootPath","defaultRemoteUrl","generateRemoteUrl","davRemoteURL","client","token","autorization","davGetClient","resultToNode","result","davResultToNode","prop","path","dirname","files","isLoading","createDirectory","join","directory","getFile","rootPath","data","davGetDefaultPropfind","loadDAVFiles","getFavoriteNodes","lastTwoWeek","davGetRecentSearch","results","useMimeFilter","allowedMIMETypes","splittedTypes","filter","mime","mimeTypeArray","type","subtype","__default__","dialogButtons","selectedFiles","button","isHandlingCallback","handleButtonClick","callback","handleClose","viewHeadline","savedPath","navigatedPath","filterString","isSupportedMimeType","loadFiles","filteredFiles","filtered","noFilesDescription","error","showError"],"mappings":"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","x_google_ignoreList":[0,1,2,4,9,10,12,13,14,15]}