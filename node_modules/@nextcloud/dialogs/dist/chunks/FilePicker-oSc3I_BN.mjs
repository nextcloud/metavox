import { defineComponent as S, ref as w, watchEffect as J, toRef as O, computed as g, watch as Z, onMounted as j, onUnmounted as Q, nextTick as X, onBeforeMount as Y } from "vue";
import { n as y, D as ee } from "./DialogBase-aHPYSWdD.mjs";
import { FileType as L, formatFileSize as te, davRootPath as ie, davRemoteURL as ne, davGetClient as H, davGetDefaultPropfind as A, getFavoriteNodes as le, davGetRecentSearch as se, davResultToNode as re } from "@nextcloud/files";
import { getCanonicalLocale as M } from "@nextcloud/l10n";
import { NcCheckboxRadioSwitch as G, NcButton as q, NcActions as ae, NcActionInput as oe, NcBreadcrumbs as ce, NcBreadcrumb as ue, NcSelect as de, NcTextField as fe, NcEmptyContent as _e } from "@nextcloud/vue";
import { t as v } from "./index-CRno7JSe.mjs";
import { generateUrl as pe, generateRemoteUrl as me } from "@nextcloud/router";
import { toValue as U } from "@vueuse/core";
import { Fragment as ve } from "vue-frag";
import { i as he } from "./toast-zF0J2eZz.mjs";
import { join as E, dirname as ge } from "path";
const ye = {
  name: "FileIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var we = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon file-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, ke = [], be = /* @__PURE__ */ y(
  ye,
  we,
  ke,
  !1,
  null,
  null,
  null,
  null
);
const K = be.exports, Ce = {
  name: "MenuUpIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Fe = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon menu-up-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M7,15L12,10L17,15H7Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Se = [], $e = /* @__PURE__ */ y(
  Ce,
  Fe,
  Se,
  !1,
  null,
  null,
  null,
  null
);
const xe = $e.exports, Ne = {
  name: "MenuDownIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Le = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon menu-down-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M7,10L12,15L17,10H7Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, ze = [], Be = /* @__PURE__ */ y(
  Ne,
  Le,
  ze,
  !1,
  null,
  null,
  null,
  null
);
const Ie = Be.exports, Pe = {
  "file-picker__file-icon": "_file-picker__file-icon_1vgv4_5"
}, Me = /* @__PURE__ */ S({
  __name: "LoadingTableRow",
  props: {
    showCheckbox: { type: Boolean }
  },
  setup(l) {
    return { __sfc: !0, fileListIconStyles: Pe };
  }
});
var Re = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t("tr", { staticClass: "file-picker__row loading-row", attrs: { "aria-hidden": "true" } }, [e.showCheckbox ? t("td", { staticClass: "row-checkbox" }, [t("span")]) : e._e(), t("td", { staticClass: "row-name" }, [t("div", { staticClass: "row-wrapper" }, [t("span", { class: i.fileListIconStyles["file-picker__file-icon"] }), t("span")])]), e._m(0), e._m(1)]);
}, De = [function() {
  var l = this, e = l._self._c;
  return l._self._setupProxy, e("td", { staticClass: "row-size" }, [e("span")]);
}, function() {
  var l = this, e = l._self._c;
  return l._self._setupProxy, e("td", { staticClass: "row-modified" }, [e("span")]);
}], Ve = /* @__PURE__ */ y(
  Me,
  Re,
  De,
  !1,
  null,
  "6aded0d9",
  null,
  null
);
const Te = Ve.exports;
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
function He(l, e = {}) {
  var t;
  e = { size: 32, cropPreview: !1, mimeFallback: !0, ...e };
  try {
    const i = ((t = l.attributes) == null ? void 0 : t.previewUrl) || pe("/core/preview?fileId={fileid}", {
      fileid: l.fileid
    });
    let n;
    try {
      n = new URL(i);
    } catch {
      n = new URL(i, window.location.origin);
    }
    return n.searchParams.set("x", "".concat(e.size)), n.searchParams.set("y", "".concat(e.size)), n.searchParams.set("mimeFallback", "".concat(e.mimeFallback)), n.searchParams.set("c", "".concat(l.attributes.etag)), n.searchParams.set("a", e.cropPreview === !0 ? "0" : "1"), n;
  } catch {
    return null;
  }
}
const Ae = (l, e) => {
  const t = w(null);
  return J(() => {
    t.value = He(U(l), U(e || {}));
  }), {
    previewURL: t
  };
}, Ue = {
  name: "FolderIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Ee = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon folder-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Oe = [], Ze = /* @__PURE__ */ y(
  Ue,
  Ee,
  Oe,
  !1,
  null,
  null,
  null,
  null
);
const R = Ze.exports, je = /* @__PURE__ */ S({
  __name: "FilePreview",
  props: {
    node: null
  },
  setup(l) {
    const e = l, { previewURL: t } = Ae(O(e, "node")), i = g(() => e.node.type === L.File), n = w(!1);
    return Z(t, () => {
      if (n.value = !1, t.value) {
        const s = document.createElement("img");
        s.src = t.value.href, s.onerror = () => s.remove(), s.onload = () => {
          n.value = !0, s.remove();
        }, document.body.appendChild(s);
      }
    }, { immediate: !0 }), { __sfc: !0, props: e, previewURL: t, isFile: i, canLoadPreview: n, t: v, IconFile: K, IconFolder: R };
  }
});
var Ge = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t("div", { staticClass: "file-picker__file-icon", style: i.canLoadPreview ? { backgroundImage: "url(".concat(i.previewURL, ")") } : void 0, attrs: { "aria-label": i.t("MIME type {mime}", { mime: e.node.mime || i.t("unknown") }) } }, [i.canLoadPreview ? e._e() : [i.isFile ? t(i.IconFile, { attrs: { size: 20 } }) : t(i.IconFolder, { attrs: { size: 20 } })]], 2);
}, qe = [], Ke = /* @__PURE__ */ y(
  je,
  Ge,
  qe,
  !1,
  null,
  "79e0cce3",
  null,
  null
);
const We = Ke.exports, Je = {
  long: v("a few seconds ago"),
  short: v("seconds ago"),
  // FOR TRANSLATORS: Shorter version of 'a few seconds ago'
  narrow: v("sec. ago")
  // FOR TRANSLATORS: If possible in your language an even shorter version of 'a few seconds ago'
}, Qe = S({
  name: "NcDatetime",
  props: {
    /**
     * The timestamp to display, either an unix timestamp (in milliseconds) or a Date object
     */
    timestamp: {
      type: [Date, Number],
      required: !0
    },
    /**
     * The format used for displaying, or if relative time is used the format used for the title (optional)
     *
     * @type {Intl.DateTimeFormatOptions}
     */
    format: {
      type: Object,
      default: () => ({ timeStyle: "medium", dateStyle: "short" })
    },
    /**
     * Wether to display the timestamp as time from now (optional)
     *
     * - `false`: Disable relative time
     * - `'long'`: Long text, like *2 seconds ago* (default)
     * - `'short'`: Short text, like *2 sec. ago*
     * - `'narrow'`: Even shorter text (same as `'short'` on some languages)
     */
    relativeTime: {
      type: [Boolean, String],
      default: "long",
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      validator: (l) => l === !1 || ["long", "short", "narrow"].includes(l)
    },
    /**
     * Ignore seconds when displaying the relative time and just show `a few seconds ago`
     */
    ignoreSeconds: {
      type: Boolean,
      default: !1
    }
  },
  data() {
    return {
      /** Current time in ms */
      currentTime: Date.now(),
      /** ID of the current time interval */
      intervalId: void 0
    };
  },
  computed: {
    /** ECMA Date object of the timestamp */
    dateObject() {
      return new Date(this.timestamp);
    },
    /** Time string formatted for main text */
    formattedTime() {
      if (this.relativeTime !== !1) {
        const l = new Intl.RelativeTimeFormat(M(), { numeric: "auto", style: this.relativeTime }), t = (this.dateObject.valueOf() - this.currentTime) / 1e3;
        if (Math.abs(t) <= 90)
          return this.ignoreSeconds ? Je[this.relativeTime] : l.format(Math.round(t), "second");
        const i = t / 60;
        if (Math.abs(i) <= 90)
          return l.format(Math.round(i), "minute");
        const n = i / 60;
        if (Math.abs(n) <= 72)
          return l.format(Math.round(n), "hour");
        const s = n / 24;
        if (Math.abs(s) <= 6)
          return l.format(Math.round(s), "day");
        const m = s / 7;
        return Math.abs(m) <= 52 ? l.format(Math.round(m), "week") : l.format(Math.round(s / 365), "year");
      }
      return this.formattedFullTime;
    },
    formattedFullTime() {
      return new Intl.DateTimeFormat(M(), this.format).format(this.dateObject);
    }
  },
  watch: {
    /**
     * Set or clear interval if relative time is dis/enabled
     *
     * @param {boolean} newValue The new value of the relativeTime property
     */
    relativeTime(l) {
      window.clearInterval(this.intervalId), this.intervalId = void 0, l && (this.intervalId = window.setInterval(this.setCurrentTime, 1e3));
    }
  },
  mounted() {
    this.relativeTime !== !1 && (this.intervalId = window.setInterval(this.setCurrentTime, 1e3));
  },
  destroyed() {
    window.clearInterval(this.intervalId);
  },
  methods: {
    /**
     * Set `currentTime` to the current timestamp, required as Date.now() is not reactive.
     */
    setCurrentTime() {
      this.currentTime = Date.now();
    }
  }
});
var Xe = function() {
  var e = this, t = e._self._c;
  return e._self._setupProxy, t("span", { staticClass: "nc-datetime", attrs: { "data-timestamp": e.timestamp, title: e.formattedFullTime } }, [e._v(e._s(e.formattedTime))]);
}, Ye = [], et = /* @__PURE__ */ y(
  Qe,
  Xe,
  Ye,
  !1,
  null,
  null,
  null,
  null
);
const tt = et.exports, it = /* @__PURE__ */ S({
  __name: "FileListRow",
  props: {
    allowPickDirectory: { type: Boolean },
    selected: { type: Boolean },
    showCheckbox: { type: Boolean },
    canPick: { type: Boolean },
    node: null
  },
  emits: ["update:selected", "enter-directory"],
  setup(l, { emit: e }) {
    const t = l, i = g(() => {
      var _;
      return ((_ = t.node.attributes) == null ? void 0 : _.displayName) || t.node.basename.slice(0, t.node.extension ? -t.node.extension.length : void 0);
    }), n = g(() => t.node.extension), s = g(() => t.node.type === L.Folder), m = g(() => t.canPick && (t.allowPickDirectory || !s.value));
    function h() {
      e("update:selected", !t.selected);
    }
    function o() {
      s.value ? e("enter-directory", t.node) : h();
    }
    function k(_) {
      _.key === "Enter" && o();
    }
    return { __sfc: !0, props: t, emit: e, displayName: i, fileExtension: n, isDirectory: s, isPickable: m, toggleSelected: h, handleClick: o, handleKeyDown: k, formatFileSize: te, NcCheckboxRadioSwitch: G, t: v, FilePreview: We, NcDatetime: tt };
  }
});
var nt = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t("tr", e._g(
    { class: ["file-picker__row", {
      "file-picker__row--selected": e.selected && !e.showCheckbox
    }], attrs: { tabindex: e.showCheckbox && !i.isDirectory ? void 0 : 0, "aria-selected": i.isPickable ? e.selected : void 0, "data-filename": e.node.basename, "data-testid": "file-list-row" }, on: { click: i.handleClick } },
    /* same as tabindex -> if we hide the checkbox or this is a directory we need keyboard access to enter the directory or select the node */
    !e.showCheckbox || i.isDirectory ? { keydown: i.handleKeyDown } : {}
  ), [e.showCheckbox ? t("td", { staticClass: "row-checkbox" }, [t(i.NcCheckboxRadioSwitch, { attrs: { disabled: !i.isPickable, checked: e.selected, "aria-label": i.t("Select the row for {nodename}", { nodename: i.displayName }), "data-testid": "row-checkbox" }, on: { click: function(n) {
    n.stopPropagation();
  }, "update:checked": i.toggleSelected } })], 1) : e._e(), t("td", { staticClass: "row-name" }, [t("div", { staticClass: "file-picker__name-container", attrs: { "data-testid": "row-name" } }, [t(i.FilePreview, { attrs: { node: e.node } }), t("div", { staticClass: "file-picker__file-name", attrs: { title: i.displayName }, domProps: { textContent: e._s(i.displayName) } }), t("div", { staticClass: "file-picker__file-extension", domProps: { textContent: e._s(i.fileExtension) } })], 1)]), t("td", { staticClass: "row-size" }, [e._v(" " + e._s(i.formatFileSize(e.node.size || 0)) + " ")]), t("td", { staticClass: "row-modified" }, [e.node.mtime ? t(i.NcDatetime, { attrs: { timestamp: e.node.mtime, "ignore-seconds": !0 } }) : t("span", [e._v(e._s(i.t("Unset")))])], 1)]);
}, lt = [], st = /* @__PURE__ */ y(
  it,
  nt,
  lt,
  !1,
  null,
  "41f19c11",
  null,
  null
);
const rt = st.exports, at = /* @__PURE__ */ S({
  __name: "FileList",
  props: {
    multiselect: { type: Boolean },
    allowPickDirectory: { type: Boolean },
    loading: { type: Boolean },
    files: null,
    selectedFiles: null,
    path: null
  },
  emits: ["update:path", "update:selectedFiles"],
  setup(l, { emit: e }) {
    const t = l, i = w("ascending"), n = w(void 0), s = w(void 0), m = {
      ascending: (r, d, a) => a(r, d),
      descending: (r, d, a) => a(d, r),
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      none: (r, d, a) => 0
    }, h = (r, d) => {
      var a, f;
      return (((a = r.attributes) == null ? void 0 : a.displayName) || r.basename).localeCompare(((f = d.attributes) == null ? void 0 : f.displayName) || d.basename, M());
    }, o = (r, d) => (d.size || 0) - (r.size || 0), k = (r, d) => {
      var a, f;
      return (((a = r.mtime) == null ? void 0 : a.getTime()) || 0) - (((f = d.mtime) == null ? void 0 : f.getTime()) || 0);
    }, _ = (r) => {
      const d = r.value;
      s.value = n.value = i.value = void 0, d === "ascending" ? r.value = "descending" : r.value = "ascending";
    }, C = () => _(i), u = () => _(n), c = () => _(s), p = g(() => [...t.files].sort(
      (r, d) => (
        // Folders always come above the files
        (d.type === L.Folder ? 1 : 0) - (r.type === L.Folder ? 1 : 0) || m[i.value || "none"](r, d, h) || m[n.value || "none"](r, d, o) || m[s.value || "none"](r, d, k)
      )
    )), b = g(() => t.files.filter((r) => t.allowPickDirectory || r.type !== L.Folder)), x = g(() => !t.loading && t.selectedFiles.length > 0 && t.selectedFiles.length >= b.value.length);
    function F() {
      t.selectedFiles.length < b.value.length ? e("update:selectedFiles", b.value) : e("update:selectedFiles", []);
    }
    function z(r) {
      t.selectedFiles.includes(r) ? e("update:selectedFiles", t.selectedFiles.filter((d) => d.path !== r.path)) : t.multiselect ? e("update:selectedFiles", [...t.selectedFiles, r]) : e("update:selectedFiles", [r]);
    }
    function B(r) {
      e("update:path", r.path);
    }
    const N = w(4), $ = w();
    {
      const r = () => X(() => {
        var d, a, f, D, V;
        const P = ((a = (d = $.value) == null ? void 0 : d.parentElement) == null ? void 0 : a.children) || [];
        let T = ((D = (f = $.value) == null ? void 0 : f.parentElement) == null ? void 0 : D.clientHeight) || 450;
        for (let I = 0; I < P.length; I++)
          (V = $.value) != null && V.isSameNode(P[I]) || (T -= P[I].clientHeight);
        N.value = Math.floor((T - 50) / 50);
      });
      j(() => {
        window.addEventListener("resize", r), r();
      }), Q(() => {
        window.removeEventListener("resize", r);
      });
    }
    return { __sfc: !0, props: t, emit: e, sortByName: i, sortBySize: n, sortByModified: s, ordering: m, byName: h, bySize: o, byDate: k, toggleSorting: _, toggleSortByName: C, toggleSortBySize: u, toggleSortByModified: c, sortedFiles: p, selectableFiles: b, allSelected: x, onSelectAll: F, onNodeSelected: z, onChangeDirectory: B, skeletonNumber: N, fileContainer: $, NcButton: q, NcCheckboxRadioSwitch: G, t: v, IconSortAscending: xe, IconSortDescending: Ie, LoadingTableRow: Te, FileListRow: rt };
  }
});
var ot = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t("div", { ref: "fileContainer", staticClass: "file-picker__files" }, [t("table", [t("thead", [t("tr", [e.multiselect ? t("th", { staticClass: "row-checkbox" }, [t("span", { staticClass: "hidden-visually" }, [e._v(" " + e._s(i.t("Select entry")) + " ")]), e.multiselect ? t(i.NcCheckboxRadioSwitch, { attrs: { "aria-label": i.t("Select all entries"), checked: i.allSelected, "data-testid": "select-all-checkbox" }, on: { "update:checked": i.onSelectAll } }) : e._e()], 1) : e._e(), t("th", { staticClass: "row-name", attrs: { "aria-sort": i.sortByName } }, [t("div", { staticClass: "header-wrapper" }, [t("span", { staticClass: "file-picker__header-preview" }), t(i.NcButton, { attrs: { wide: !0, type: "tertiary", "data-test": "file-picker_sort-name" }, on: { click: i.toggleSortByName }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [i.sortByName === "ascending" ? t(i.IconSortAscending, { attrs: { size: 20 } }) : i.sortByName === "descending" ? t(i.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(i.t("Name")) + " ")])], 1)]), t("th", { staticClass: "row-size", attrs: { "aria-sort": i.sortBySize } }, [t(i.NcButton, { attrs: { wide: !0, type: "tertiary" }, on: { click: i.toggleSortBySize }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [i.sortBySize === "ascending" ? t(i.IconSortAscending, { attrs: { size: 20 } }) : i.sortBySize === "descending" ? t(i.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(i.t("Size")) + " ")])], 1), t("th", { staticClass: "row-modified", attrs: { "aria-sort": i.sortByModified } }, [t(i.NcButton, { attrs: { wide: !0, type: "tertiary" }, on: { click: i.toggleSortByModified }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [i.sortByModified === "ascending" ? t(i.IconSortAscending, { attrs: { size: 20 } }) : i.sortByModified === "descending" ? t(i.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(i.t("Modified")) + " ")])], 1)])]), t("tbody", [e.loading ? e._l(i.skeletonNumber, function(n) {
    return t(i.LoadingTableRow, { key: n, attrs: { "show-checkbox": e.multiselect } });
  }) : e._l(i.sortedFiles, function(n) {
    return t(i.FileListRow, { key: n.fileid || n.path, attrs: { "allow-pick-directory": e.allowPickDirectory, "show-checkbox": e.multiselect, "can-pick": e.multiselect || e.selectedFiles.length === 0 || e.selectedFiles.includes(n), selected: e.selectedFiles.includes(n), node: n }, on: { "update:selected": function(s) {
      return i.onNodeSelected(n);
    }, "enter-directory": i.onChangeDirectory } });
  })], 2)])]);
}, ct = [], ut = /* @__PURE__ */ y(
  at,
  ot,
  ct,
  !1,
  null,
  "83ce6888",
  null,
  null
);
const dt = ut.exports, ft = {
  name: "HomeIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var _t = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon home-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, pt = [], mt = /* @__PURE__ */ y(
  ft,
  _t,
  pt,
  !1,
  null,
  null,
  null,
  null
);
const vt = mt.exports, ht = {
  name: "PlusIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var gt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon plus-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, yt = [], wt = /* @__PURE__ */ y(
  ht,
  gt,
  yt,
  !1,
  null,
  null,
  null,
  null
);
const kt = wt.exports, bt = /* @__PURE__ */ S({
  __name: "FilePickerBreadcrumbs",
  props: {
    path: null,
    showMenu: { type: Boolean }
  },
  emits: ["update:path", "create-node"],
  setup(l, { emit: e }) {
    const t = l, i = w(""), n = w();
    function s() {
      var o, k, _, C;
      const u = i.value.trim(), c = (k = (o = n.value) == null ? void 0 : o.$el) == null ? void 0 : k.querySelector("input");
      let p = "";
      return u.length === 0 ? p = v("File name cannot be empty.") : u.includes("/") ? p = v('"/" is not allowed inside a file name.') : ["..", "."].includes(u) ? p = v('"{name}" is an invalid file name.', { name: u }) : (_ = window.OC.config) != null && _.blacklist_files_regex && u.match((C = window.OC.config) == null ? void 0 : C.blacklist_files_regex) && (p = v('"{name}" is not an allowed filetype', { name: u })), c && c.setCustomValidity(p), p === "";
    }
    const m = function() {
      const o = i.value.trim();
      s() && (e("create-node", o), i.value = "");
    }, h = g(
      () => t.path.split("/").filter((o) => o !== "").map((o, k, _) => ({
        name: o,
        path: "/" + _.slice(0, k + 1).join("/")
      }))
    );
    return { __sfc: !0, props: t, emit: e, newNodeName: i, nameInput: n, validateInput: s, onSubmit: m, pathElements: h, IconFolder: R, IconHome: vt, IconPlus: kt, NcActions: ae, NcActionInput: oe, NcBreadcrumbs: ce, NcBreadcrumb: ue, t: v };
  }
});
var Ct = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t(i.NcBreadcrumbs, { staticClass: "file-picker__breadcrumbs", scopedSlots: e._u([{ key: "default", fn: function() {
    return [t(i.NcBreadcrumb, { attrs: { name: i.t("Home"), title: i.t("Home") }, on: { click: function(n) {
      return i.emit("update:path", "/");
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(i.IconHome, { attrs: { size: 20 } })];
    }, proxy: !0 }]) }), e._l(i.pathElements, function(n) {
      return t(i.NcBreadcrumb, { key: n.path, attrs: { name: n.name, title: n.path }, on: { click: function(s) {
        return i.emit("update:path", n.path);
      } } });
    })];
  }, proxy: !0 }, e.showMenu ? { key: "actions", fn: function() {
    return [t(i.NcActions, { attrs: { "aria-label": i.t("Create directory"), "force-menu": !0, "force-title": !0, "menu-title": i.t("New"), type: "secondary" }, on: { close: function(n) {
      i.newNodeName = "";
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(i.IconPlus, { attrs: { size: 20 } })];
    }, proxy: !0 }], null, !1, 2971667417) }, [t(i.NcActionInput, { ref: "nameInput", attrs: { value: i.newNodeName, label: i.t("New folder"), placeholder: i.t("New folder name") }, on: { "update:value": function(n) {
      i.newNodeName = n;
    }, submit: i.onSubmit, input: i.validateInput }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(i.IconFolder, { attrs: { size: 20 } })];
    }, proxy: !0 }], null, !1, 1614167509) })], 1)];
  }, proxy: !0 } : null], null, !0) });
}, Ft = [], St = /* @__PURE__ */ y(
  bt,
  Ct,
  Ft,
  !1,
  null,
  "f35f86d4",
  null,
  null
);
const $t = St.exports, xt = {
  name: "ClockIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Nt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon clock-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Lt = [], zt = /* @__PURE__ */ y(
  xt,
  Nt,
  Lt,
  !1,
  null,
  null,
  null,
  null
);
const Bt = zt.exports, It = {
  name: "CloseIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Pt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon close-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Mt = [], Rt = /* @__PURE__ */ y(
  It,
  Pt,
  Mt,
  !1,
  null,
  null,
  null,
  null
);
const Dt = Rt.exports, Vt = {
  name: "MagnifyIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Tt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon magnify-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Ht = [], At = /* @__PURE__ */ y(
  Vt,
  Tt,
  Ht,
  !1,
  null,
  null,
  null,
  null
);
const Ut = At.exports, Et = {
  name: "StarIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Ot = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon star-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(i) {
    return e.$emit("click", i);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Zt = [], jt = /* @__PURE__ */ y(
  Et,
  Ot,
  Zt,
  !1,
  null,
  null,
  null,
  null
);
const Gt = jt.exports, W = () => {
  const l = () => {
    var t;
    return ((t = document.getElementById("isPublic")) == null ? void 0 : t.value) === "1";
  }, e = w(!0);
  return Y(() => {
    e.value = l();
  }), {
    isPublic: e
  };
}, qt = /* @__PURE__ */ S({
  __name: "FilePickerNavigation",
  props: {
    currentView: null,
    filterString: null,
    isCollapsed: { type: Boolean }
  },
  emits: ["update:currentView", "update:filterString"],
  setup(l, { emit: e }) {
    const t = l, { isPublic: i } = W(), n = [{
      id: "files",
      label: v("All files"),
      icon: R
    }, {
      id: "recent",
      label: v("Recent"),
      icon: Bt
    }, {
      id: "favorites",
      label: v("Favorites"),
      icon: Gt
    }], s = g(() => n.filter((h) => h.id === t.currentView)[0]);
    return { __sfc: !0, isPublic: i, allViews: n, props: t, emit: e, currentViewObject: s, updateFilterValue: (h) => e("update:filterString", h), IconClose: Dt, IconMagnify: Ut, NcButton: q, NcSelect: de, NcTextField: fe, Fragment: ve, t: v };
  }
});
var Kt = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t(i.Fragment, [t(i.NcTextField, { staticClass: "file-picker__filter-input", attrs: { value: e.filterString, label: i.t("Filter file list"), "show-trailing-button": !!e.filterString }, on: { "update:value": i.updateFilterValue, "trailing-button-click": function(n) {
    return i.updateFilterValue("");
  } }, scopedSlots: e._u([{ key: "trailing-button-icon", fn: function() {
    return [t(i.IconClose, { attrs: { size: 16 } })];
  }, proxy: !0 }]) }, [t(i.IconMagnify, { attrs: { size: 16 } })], 1), i.isPublic ? e._e() : [e.isCollapsed ? t(i.NcSelect, { attrs: { "aria-label": i.t("Current view selector"), clearable: !1, searchable: !1, options: i.allViews, value: i.currentViewObject }, on: { input: (n) => i.emit("update:currentView", n.id) } }) : t("ul", { staticClass: "file-picker__side", attrs: { role: "tablist", "aria-label": i.t("Filepicker sections") } }, e._l(i.allViews, function(n) {
    return t("li", { key: n.id }, [t(i.NcButton, { attrs: { "aria-selected": e.currentView === n.id, type: e.currentView === n.id ? "primary" : "tertiary", wide: !0, role: "tab" }, on: { click: function(s) {
      return e.$emit("update:currentView", n.id);
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(n.icon, { tag: "component", attrs: { size: 20 } })];
    }, proxy: !0 }], null, !0) }, [e._v(" " + e._s(n.label) + " ")])], 1);
  }), 0)]], 2);
}, Wt = [], Jt = /* @__PURE__ */ y(
  qt,
  Kt,
  Wt,
  !1,
  null,
  "429eb827",
  null,
  null
);
const Qt = Jt.exports;
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const Xt = function(l, e, t) {
  const i = g(() => t.value ? "/" : ie), n = g(() => t.value ? me("webdav").replace("/remote.php", "/public.php") : ne), s = g(() => {
    if (t.value) {
      const u = document.getElementById("sharingToken").value, c = btoa("".concat(u, ":null")), p = H(n.value);
      return p.setHeaders({ Authorization: "Basic ".concat(c) }), p;
    }
    return H();
  }), m = (u) => {
    const c = re(u, i.value, n.value);
    return t.value ? new Proxy(c, {
      get(p, b) {
        if (b === "dirname" || b === "path") {
          let F = p.source.slice(n.value.length);
          return F[0] !== "/" && (F = "/".concat(F)), b === "dirname" ? ge(F) : F;
        }
        return p[b];
      }
    }) : c;
  }, h = w([]), o = w(!0);
  async function k(u) {
    const c = E(e.value, u);
    await s.value.createDirectory(E(i.value, c));
    const p = await _(c);
    return h.value.push(p), p;
  }
  async function _(u, c = void 0) {
    c = c != null ? c : i.value;
    const { data: p } = await s.value.stat("".concat(c).concat(u), {
      details: !0,
      data: A()
    });
    return m(p);
  }
  async function C() {
    if (o.value = !0, l.value === "favorites")
      h.value = await le(s.value, e.value, i.value);
    else if (l.value === "recent") {
      const u = Math.round(Date.now() / 1e3) - 1209600, { data: c } = await s.value.search("/", {
        details: !0,
        data: se(u)
      });
      h.value = c.results.map(m);
    } else {
      const u = await s.value.getDirectoryContents("".concat(i.value).concat(e.value), {
        details: !0,
        data: A()
      });
      h.value = u.data.map(m), t.value && (h.value = h.value.filter((c) => c.path !== e.value));
    }
    o.value = !1;
  }
  return Z([l, e], () => C()), {
    isLoading: o,
    files: h,
    loadFiles: () => C(),
    getFile: _,
    createDirectory: k
  };
};
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const Yt = function(l) {
  const e = g(() => l.value.map((i) => i.split("/")));
  return {
    isSupportedMimeType: (i) => {
      const n = i.split("/");
      return e.value.some(
        ([s, m]) => (
          // check mime type matches or is wildcard
          (n[0] === s || s === "*") && (n[1] === m || m === "*")
        )
      );
    }
  };
}, ei = {
  name: "FilePicker"
}, ti = /* @__PURE__ */ S({
  ...ei,
  props: {
    buttons: null,
    name: null,
    allowPickDirectory: { type: Boolean, default: !1 },
    container: { default: "body" },
    filterFn: { default: void 0 },
    mimetypeFilter: { default: () => [] },
    multiselect: { type: Boolean, default: !0 },
    path: { default: "/" }
  },
  emits: ["close"],
  setup(l, { emit: e }) {
    const t = l, { isPublic: i } = W(), n = g(() => (typeof t.buttons == "function" ? t.buttons(_.value, c.value, o.value) : t.buttons).map((f) => ({
      ...f,
      callback: async () => {
        s = !0, m(f.callback);
      }
    })));
    let s = !1;
    const m = async (a) => {
      const f = _.value.length === 0 && t.allowPickDirectory ? [await B(c.value)] : _.value;
      a(f), e("close", f), s = !1;
    }, h = () => {
      s || e("close");
    }, o = w("files"), k = g(() => o.value === "favorites" ? v("Favorites") : o.value === "recent" ? v("Recent") : ""), _ = w([]), C = w((window == null ? void 0 : window.sessionStorage.getItem("NC.FilePicker.LastPath")) || "/"), u = w(), c = g({
      // Only use the path for the files view as favorites and recent only works on the root
      get: () => o.value === "files" ? u.value || t.path || C.value : "/",
      /**
       * Navigate to the new path and save it to the session storage
       *
       * @param path The new path
       */
      set: (a) => {
        t.path === void 0 && window.sessionStorage.setItem("NC.FilePicker.LastPath", a), u.value = a, _.value = [];
      }
    }), p = w(""), { isSupportedMimeType: b } = Yt(O(t, "mimetypeFilter")), { files: x, isLoading: F, loadFiles: z, getFile: B, createDirectory: N } = Xt(o, c, i);
    j(() => z());
    const $ = g(() => {
      let a = x.value;
      return t.mimetypeFilter.length > 0 && (a = a.filter((f) => f.type === "folder" || f.mime && b(f.mime))), p.value && (a = a.filter((f) => f.basename.toLowerCase().includes(p.value.toLowerCase()))), t.filterFn && (a = a.filter((f) => t.filterFn(f))), a;
    }), r = g(() => o.value === "files" ? v("Upload some content or sync with your devices!") : o.value === "recent" ? v("Files and folders you recently modified will show up here.") : v("Files and folders you mark as favorite will show up here."));
    return { __sfc: !0, props: t, emit: e, isPublic: i, dialogButtons: n, isHandlingCallback: s, handleButtonClick: m, handleClose: h, currentView: o, viewHeadline: k, selectedFiles: _, savedPath: C, navigatedPath: u, currentPath: c, filterString: p, isSupportedMimeType: b, files: x, isLoading: F, loadFiles: z, getFile: B, createDirectory: N, filteredFiles: $, noFilesDescription: r, onCreateFolder: async (a) => {
      try {
        await N(a);
      } catch (f) {
        console.warn("Could not create new folder", { name: a, error: f }), he(v("Could not create the new folder"));
      }
    }, IconFile: K, DialogBase: ee, FileList: dt, FilePickerBreadcrumbs: $t, FilePickerNavigation: Qt, NcEmptyContent: _e, t: v };
  }
});
var ii = function() {
  var e = this, t = e._self._c, i = e._self._setupProxy;
  return t(i.DialogBase, { attrs: { container: e.container, name: e.name, buttons: i.dialogButtons, size: "large", "content-classes": "file-picker__content", "dialog-classes": "file-picker", "navigation-classes": "file-picker__navigation" }, on: { close: i.handleClose }, scopedSlots: e._u([{ key: "navigation", fn: function({ isCollapsed: n }) {
    return [t(i.FilePickerNavigation, { attrs: { "is-collapsed": n, "current-view": i.currentView, "filter-string": i.filterString }, on: { "update:currentView": function(s) {
      i.currentView = s;
    }, "update:current-view": function(s) {
      i.currentView = s;
    }, "update:filterString": function(s) {
      i.filterString = s;
    }, "update:filter-string": function(s) {
      i.filterString = s;
    } } })];
  } }]) }, [t("div", { staticClass: "file-picker__main" }, [i.currentView === "files" ? t(i.FilePickerBreadcrumbs, { attrs: { path: i.currentPath, "show-menu": e.allowPickDirectory }, on: { "update:path": function(n) {
    i.currentPath = n;
  }, "create-node": i.onCreateFolder } }) : t("div", { staticClass: "file-picker__view" }, [t("h3", [e._v(e._s(i.viewHeadline))])]), i.isLoading || i.filteredFiles.length > 0 ? t(i.FileList, { attrs: { "allow-pick-directory": e.allowPickDirectory, files: i.filteredFiles, multiselect: e.multiselect, loading: i.isLoading, path: i.currentPath, "selected-files": i.selectedFiles, name: i.viewHeadline }, on: { "update:path": [function(n) {
    i.currentPath = n;
  }, function(n) {
    i.currentView = "files";
  }], "update:selectedFiles": function(n) {
    i.selectedFiles = n;
  }, "update:selected-files": function(n) {
    i.selectedFiles = n;
  } } }) : i.filterString ? t(i.NcEmptyContent, { attrs: { name: i.t("No matching files"), description: i.t("No files matching your filter were found.") }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t(i.IconFile)];
  }, proxy: !0 }]) }) : t(i.NcEmptyContent, { attrs: { name: i.t("No files in here"), description: i.noFilesDescription }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t(i.IconFile)];
  }, proxy: !0 }]) })], 1)]);
}, ni = [], li = /* @__PURE__ */ y(
  ti,
  ii,
  ni,
  !1,
  null,
  "85764ff8",
  null,
  null
);
const vi = li.exports;
export {
  vi as default
};
