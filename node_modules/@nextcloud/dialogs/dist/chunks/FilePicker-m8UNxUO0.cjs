"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const r = require("vue"), y = require("./DialogBase-XAlPDcV_.cjs"), w = require("@nextcloud/files"), M = require("@nextcloud/l10n"), b = require("@nextcloud/vue"), h = require("./index-7mCqgGGG.cjs"), A = require("@nextcloud/router"), H = require("@vueuse/core"), q = require("vue-frag"), O = require("./toast-ulknaFV9.cjs"), I = require("path"), j = {
  name: "FileIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Z = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon file-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M13,9V3.5L18.5,9M6,2C4.89,2 4,2.89 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2H6Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, G = [], K = /* @__PURE__ */ y.normalizeComponent(
  j,
  Z,
  G,
  !1,
  null,
  null,
  null,
  null
);
const E = K.exports, W = {
  name: "MenuUpIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var J = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon menu-up-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M7,15L12,10L17,15H7Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Q = [], X = /* @__PURE__ */ y.normalizeComponent(
  W,
  J,
  Q,
  !1,
  null,
  null,
  null,
  null
);
const Y = X.exports, ee = {
  name: "MenuDownIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var te = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon menu-down-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M7,10L12,15L17,10H7Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, ne = [], ie = /* @__PURE__ */ y.normalizeComponent(
  ee,
  te,
  ne,
  !1,
  null,
  null,
  null,
  null
);
const le = ie.exports, re = {
  "file-picker__file-icon": "_file-picker__file-icon_1vgv4_5"
}, se = /* @__PURE__ */ r.defineComponent({
  __name: "LoadingTableRow",
  props: {
    showCheckbox: { type: Boolean }
  },
  setup(l) {
    return { __sfc: !0, fileListIconStyles: re };
  }
});
var ae = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t("tr", { staticClass: "file-picker__row loading-row", attrs: { "aria-hidden": "true" } }, [e.showCheckbox ? t("td", { staticClass: "row-checkbox" }, [t("span")]) : e._e(), t("td", { staticClass: "row-name" }, [t("div", { staticClass: "row-wrapper" }, [t("span", { class: n.fileListIconStyles["file-picker__file-icon"] }), t("span")])]), e._m(0), e._m(1)]);
}, oe = [function() {
  var l = this, e = l._self._c;
  return l._self._setupProxy, e("td", { staticClass: "row-size" }, [e("span")]);
}, function() {
  var l = this, e = l._self._c;
  return l._self._setupProxy, e("td", { staticClass: "row-modified" }, [e("span")]);
}], ce = /* @__PURE__ */ y.normalizeComponent(
  se,
  ae,
  oe,
  !1,
  null,
  "6aded0d9",
  null,
  null
);
const ue = ce.exports;
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
function de(l, e = {}) {
  var t;
  e = { size: 32, cropPreview: !1, mimeFallback: !0, ...e };
  try {
    const n = ((t = l.attributes) == null ? void 0 : t.previewUrl) || A.generateUrl("/core/preview?fileId={fileid}", {
      fileid: l.fileid
    });
    let i;
    try {
      i = new URL(n);
    } catch {
      i = new URL(n, window.location.origin);
    }
    return i.searchParams.set("x", "".concat(e.size)), i.searchParams.set("y", "".concat(e.size)), i.searchParams.set("mimeFallback", "".concat(e.mimeFallback)), i.searchParams.set("c", "".concat(l.attributes.etag)), i.searchParams.set("a", e.cropPreview === !0 ? "0" : "1"), i;
  } catch {
    return null;
  }
}
const fe = (l, e) => {
  const t = r.ref(null);
  return r.watchEffect(() => {
    t.value = de(H.toValue(l), H.toValue(e || {}));
  }), {
    previewURL: t
  };
}, _e = {
  name: "FolderIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var pe = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon folder-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6H12L10,4Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, me = [], ve = /* @__PURE__ */ y.normalizeComponent(
  _e,
  pe,
  me,
  !1,
  null,
  null,
  null,
  null
);
const R = ve.exports, he = /* @__PURE__ */ r.defineComponent({
  __name: "FilePreview",
  props: {
    node: null
  },
  setup(l) {
    const e = l, { previewURL: t } = fe(r.toRef(e, "node")), n = r.computed(() => e.node.type === w.FileType.File), i = r.ref(!1);
    return r.watch(t, () => {
      if (i.value = !1, t.value) {
        const s = document.createElement("img");
        s.src = t.value.href, s.onerror = () => s.remove(), s.onload = () => {
          i.value = !0, s.remove();
        }, document.body.appendChild(s);
      }
    }, { immediate: !0 }), { __sfc: !0, props: e, previewURL: t, isFile: n, canLoadPreview: i, t: h.t, IconFile: E, IconFolder: R };
  }
});
var ge = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t("div", { staticClass: "file-picker__file-icon", style: n.canLoadPreview ? { backgroundImage: "url(".concat(n.previewURL, ")") } : void 0, attrs: { "aria-label": n.t("MIME type {mime}", { mime: e.node.mime || n.t("unknown") }) } }, [n.canLoadPreview ? e._e() : [n.isFile ? t(n.IconFile, { attrs: { size: 20 } }) : t(n.IconFolder, { attrs: { size: 20 } })]], 2);
}, ye = [], we = /* @__PURE__ */ y.normalizeComponent(
  he,
  ge,
  ye,
  !1,
  null,
  "79e0cce3",
  null,
  null
);
const Ce = we.exports, ke = {
  long: h.t("a few seconds ago"),
  short: h.t("seconds ago"),
  // FOR TRANSLATORS: Shorter version of 'a few seconds ago'
  narrow: h.t("sec. ago")
  // FOR TRANSLATORS: If possible in your language an even shorter version of 'a few seconds ago'
}, be = r.defineComponent({
  name: "NcDatetime",
  props: {
    /**
     * The timestamp to display, either an unix timestamp (in milliseconds) or a Date object
     */
    timestamp: {
      type: [Date, Number],
      required: !0
    },
    /**
     * The format used for displaying, or if relative time is used the format used for the title (optional)
     *
     * @type {Intl.DateTimeFormatOptions}
     */
    format: {
      type: Object,
      default: () => ({ timeStyle: "medium", dateStyle: "short" })
    },
    /**
     * Wether to display the timestamp as time from now (optional)
     *
     * - `false`: Disable relative time
     * - `'long'`: Long text, like *2 seconds ago* (default)
     * - `'short'`: Short text, like *2 sec. ago*
     * - `'narrow'`: Even shorter text (same as `'short'` on some languages)
     */
    relativeTime: {
      type: [Boolean, String],
      default: "long",
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      validator: (l) => l === !1 || ["long", "short", "narrow"].includes(l)
    },
    /**
     * Ignore seconds when displaying the relative time and just show `a few seconds ago`
     */
    ignoreSeconds: {
      type: Boolean,
      default: !1
    }
  },
  data() {
    return {
      /** Current time in ms */
      currentTime: Date.now(),
      /** ID of the current time interval */
      intervalId: void 0
    };
  },
  computed: {
    /** ECMA Date object of the timestamp */
    dateObject() {
      return new Date(this.timestamp);
    },
    /** Time string formatted for main text */
    formattedTime() {
      if (this.relativeTime !== !1) {
        const l = new Intl.RelativeTimeFormat(M.getCanonicalLocale(), { numeric: "auto", style: this.relativeTime }), t = (this.dateObject.valueOf() - this.currentTime) / 1e3;
        if (Math.abs(t) <= 90)
          return this.ignoreSeconds ? ke[this.relativeTime] : l.format(Math.round(t), "second");
        const n = t / 60;
        if (Math.abs(n) <= 90)
          return l.format(Math.round(n), "minute");
        const i = n / 60;
        if (Math.abs(i) <= 72)
          return l.format(Math.round(i), "hour");
        const s = i / 24;
        if (Math.abs(s) <= 6)
          return l.format(Math.round(s), "day");
        const v = s / 7;
        return Math.abs(v) <= 52 ? l.format(Math.round(v), "week") : l.format(Math.round(s / 365), "year");
      }
      return this.formattedFullTime;
    },
    formattedFullTime() {
      return new Intl.DateTimeFormat(M.getCanonicalLocale(), this.format).format(this.dateObject);
    }
  },
  watch: {
    /**
     * Set or clear interval if relative time is dis/enabled
     *
     * @param {boolean} newValue The new value of the relativeTime property
     */
    relativeTime(l) {
      window.clearInterval(this.intervalId), this.intervalId = void 0, l && (this.intervalId = window.setInterval(this.setCurrentTime, 1e3));
    }
  },
  mounted() {
    this.relativeTime !== !1 && (this.intervalId = window.setInterval(this.setCurrentTime, 1e3));
  },
  destroyed() {
    window.clearInterval(this.intervalId);
  },
  methods: {
    /**
     * Set `currentTime` to the current timestamp, required as Date.now() is not reactive.
     */
    setCurrentTime() {
      this.currentTime = Date.now();
    }
  }
});
var Fe = function() {
  var e = this, t = e._self._c;
  return e._self._setupProxy, t("span", { staticClass: "nc-datetime", attrs: { "data-timestamp": e.timestamp, title: e.formattedFullTime } }, [e._v(e._s(e.formattedTime))]);
}, Se = [], $e = /* @__PURE__ */ y.normalizeComponent(
  be,
  Fe,
  Se,
  !1,
  null,
  null,
  null,
  null
);
const Ne = $e.exports, xe = /* @__PURE__ */ r.defineComponent({
  __name: "FileListRow",
  props: {
    allowPickDirectory: { type: Boolean },
    selected: { type: Boolean },
    showCheckbox: { type: Boolean },
    canPick: { type: Boolean },
    node: null
  },
  emits: ["update:selected", "enter-directory"],
  setup(l, { emit: e }) {
    const t = l, n = r.computed(() => {
      var p;
      return ((p = t.node.attributes) == null ? void 0 : p.displayName) || t.node.basename.slice(0, t.node.extension ? -t.node.extension.length : void 0);
    }), i = r.computed(() => t.node.extension), s = r.computed(() => t.node.type === w.FileType.Folder), v = r.computed(() => t.canPick && (t.allowPickDirectory || !s.value));
    function g() {
      e("update:selected", !t.selected);
    }
    function c() {
      s.value ? e("enter-directory", t.node) : g();
    }
    function C(p) {
      p.key === "Enter" && c();
    }
    return { __sfc: !0, props: t, emit: e, displayName: n, fileExtension: i, isDirectory: s, isPickable: v, toggleSelected: g, handleClick: c, handleKeyDown: C, formatFileSize: w.formatFileSize, NcCheckboxRadioSwitch: b.NcCheckboxRadioSwitch, t: h.t, FilePreview: Ce, NcDatetime: Ne };
  }
});
var ze = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t("tr", e._g(
    { class: ["file-picker__row", {
      "file-picker__row--selected": e.selected && !e.showCheckbox
    }], attrs: { tabindex: e.showCheckbox && !n.isDirectory ? void 0 : 0, "aria-selected": n.isPickable ? e.selected : void 0, "data-filename": e.node.basename, "data-testid": "file-list-row" }, on: { click: n.handleClick } },
    /* same as tabindex -> if we hide the checkbox or this is a directory we need keyboard access to enter the directory or select the node */
    !e.showCheckbox || n.isDirectory ? { keydown: n.handleKeyDown } : {}
  ), [e.showCheckbox ? t("td", { staticClass: "row-checkbox" }, [t(n.NcCheckboxRadioSwitch, { attrs: { disabled: !n.isPickable, checked: e.selected, "aria-label": n.t("Select the row for {nodename}", { nodename: n.displayName }), "data-testid": "row-checkbox" }, on: { click: function(i) {
    i.stopPropagation();
  }, "update:checked": n.toggleSelected } })], 1) : e._e(), t("td", { staticClass: "row-name" }, [t("div", { staticClass: "file-picker__name-container", attrs: { "data-testid": "row-name" } }, [t(n.FilePreview, { attrs: { node: e.node } }), t("div", { staticClass: "file-picker__file-name", attrs: { title: n.displayName }, domProps: { textContent: e._s(n.displayName) } }), t("div", { staticClass: "file-picker__file-extension", domProps: { textContent: e._s(n.fileExtension) } })], 1)]), t("td", { staticClass: "row-size" }, [e._v(" " + e._s(n.formatFileSize(e.node.size || 0)) + " ")]), t("td", { staticClass: "row-modified" }, [e.node.mtime ? t(n.NcDatetime, { attrs: { timestamp: e.node.mtime, "ignore-seconds": !0 } }) : t("span", [e._v(e._s(n.t("Unset")))])], 1)]);
}, Le = [], Be = /* @__PURE__ */ y.normalizeComponent(
  xe,
  ze,
  Le,
  !1,
  null,
  "41f19c11",
  null,
  null
);
const Pe = Be.exports, Ie = /* @__PURE__ */ r.defineComponent({
  __name: "FileList",
  props: {
    multiselect: { type: Boolean },
    allowPickDirectory: { type: Boolean },
    loading: { type: Boolean },
    files: null,
    selectedFiles: null,
    path: null
  },
  emits: ["update:path", "update:selectedFiles"],
  setup(l, { emit: e }) {
    const t = l, n = r.ref("ascending"), i = r.ref(void 0), s = r.ref(void 0), v = {
      ascending: (a, f, o) => o(a, f),
      descending: (a, f, o) => o(f, a),
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      none: (a, f, o) => 0
    }, g = (a, f) => {
      var o, _;
      return (((o = a.attributes) == null ? void 0 : o.displayName) || a.basename).localeCompare(((_ = f.attributes) == null ? void 0 : _.displayName) || f.basename, M.getCanonicalLocale());
    }, c = (a, f) => (f.size || 0) - (a.size || 0), C = (a, f) => {
      var o, _;
      return (((o = a.mtime) == null ? void 0 : o.getTime()) || 0) - (((_ = f.mtime) == null ? void 0 : _.getTime()) || 0);
    }, p = (a) => {
      const f = a.value;
      s.value = i.value = n.value = void 0, f === "ascending" ? a.value = "descending" : a.value = "ascending";
    }, F = () => p(n), d = () => p(i), u = () => p(s), m = r.computed(() => [...t.files].sort(
      (a, f) => (
        // Folders always come above the files
        (f.type === w.FileType.Folder ? 1 : 0) - (a.type === w.FileType.Folder ? 1 : 0) || v[n.value || "none"](a, f, g) || v[i.value || "none"](a, f, c) || v[s.value || "none"](a, f, C)
      )
    )), k = r.computed(() => t.files.filter((a) => t.allowPickDirectory || a.type !== w.FileType.Folder)), N = r.computed(() => !t.loading && t.selectedFiles.length > 0 && t.selectedFiles.length >= k.value.length);
    function S() {
      t.selectedFiles.length < k.value.length ? e("update:selectedFiles", k.value) : e("update:selectedFiles", []);
    }
    function z(a) {
      t.selectedFiles.includes(a) ? e("update:selectedFiles", t.selectedFiles.filter((f) => f.path !== a.path)) : t.multiselect ? e("update:selectedFiles", [...t.selectedFiles, a]) : e("update:selectedFiles", [a]);
    }
    function L(a) {
      e("update:path", a.path);
    }
    const x = r.ref(4), $ = r.ref();
    {
      const a = () => r.nextTick(() => {
        var f, o, _, D, V;
        const P = ((o = (f = $.value) == null ? void 0 : f.parentElement) == null ? void 0 : o.children) || [];
        let T = ((D = (_ = $.value) == null ? void 0 : _.parentElement) == null ? void 0 : D.clientHeight) || 450;
        for (let B = 0; B < P.length; B++)
          (V = $.value) != null && V.isSameNode(P[B]) || (T -= P[B].clientHeight);
        x.value = Math.floor((T - 50) / 50);
      });
      r.onMounted(() => {
        window.addEventListener("resize", a), a();
      }), r.onUnmounted(() => {
        window.removeEventListener("resize", a);
      });
    }
    return { __sfc: !0, props: t, emit: e, sortByName: n, sortBySize: i, sortByModified: s, ordering: v, byName: g, bySize: c, byDate: C, toggleSorting: p, toggleSortByName: F, toggleSortBySize: d, toggleSortByModified: u, sortedFiles: m, selectableFiles: k, allSelected: N, onSelectAll: S, onNodeSelected: z, onChangeDirectory: L, skeletonNumber: x, fileContainer: $, NcButton: b.NcButton, NcCheckboxRadioSwitch: b.NcCheckboxRadioSwitch, t: h.t, IconSortAscending: Y, IconSortDescending: le, LoadingTableRow: ue, FileListRow: Pe };
  }
});
var Me = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t("div", { ref: "fileContainer", staticClass: "file-picker__files" }, [t("table", [t("thead", [t("tr", [e.multiselect ? t("th", { staticClass: "row-checkbox" }, [t("span", { staticClass: "hidden-visually" }, [e._v(" " + e._s(n.t("Select entry")) + " ")]), e.multiselect ? t(n.NcCheckboxRadioSwitch, { attrs: { "aria-label": n.t("Select all entries"), checked: n.allSelected, "data-testid": "select-all-checkbox" }, on: { "update:checked": n.onSelectAll } }) : e._e()], 1) : e._e(), t("th", { staticClass: "row-name", attrs: { "aria-sort": n.sortByName } }, [t("div", { staticClass: "header-wrapper" }, [t("span", { staticClass: "file-picker__header-preview" }), t(n.NcButton, { attrs: { wide: !0, type: "tertiary", "data-test": "file-picker_sort-name" }, on: { click: n.toggleSortByName }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [n.sortByName === "ascending" ? t(n.IconSortAscending, { attrs: { size: 20 } }) : n.sortByName === "descending" ? t(n.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(n.t("Name")) + " ")])], 1)]), t("th", { staticClass: "row-size", attrs: { "aria-sort": n.sortBySize } }, [t(n.NcButton, { attrs: { wide: !0, type: "tertiary" }, on: { click: n.toggleSortBySize }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [n.sortBySize === "ascending" ? t(n.IconSortAscending, { attrs: { size: 20 } }) : n.sortBySize === "descending" ? t(n.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(n.t("Size")) + " ")])], 1), t("th", { staticClass: "row-modified", attrs: { "aria-sort": n.sortByModified } }, [t(n.NcButton, { attrs: { wide: !0, type: "tertiary" }, on: { click: n.toggleSortByModified }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [n.sortByModified === "ascending" ? t(n.IconSortAscending, { attrs: { size: 20 } }) : n.sortByModified === "descending" ? t(n.IconSortDescending, { attrs: { size: 20 } }) : t("span", { staticStyle: { width: "44px" } })];
  }, proxy: !0 }]) }, [e._v(" " + e._s(n.t("Modified")) + " ")])], 1)])]), t("tbody", [e.loading ? e._l(n.skeletonNumber, function(i) {
    return t(n.LoadingTableRow, { key: i, attrs: { "show-checkbox": e.multiselect } });
  }) : e._l(n.sortedFiles, function(i) {
    return t(n.FileListRow, { key: i.fileid || i.path, attrs: { "allow-pick-directory": e.allowPickDirectory, "show-checkbox": e.multiselect, "can-pick": e.multiselect || e.selectedFiles.length === 0 || e.selectedFiles.includes(i), selected: e.selectedFiles.includes(i), node: i }, on: { "update:selected": function(s) {
      return n.onNodeSelected(i);
    }, "enter-directory": n.onChangeDirectory } });
  })], 2)])]);
}, Re = [], De = /* @__PURE__ */ y.normalizeComponent(
  Ie,
  Me,
  Re,
  !1,
  null,
  "83ce6888",
  null,
  null
);
const Ve = De.exports, Te = {
  name: "HomeIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var He = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon home-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, Ae = [], Ee = /* @__PURE__ */ y.normalizeComponent(
  Te,
  He,
  Ae,
  !1,
  null,
  null,
  null,
  null
);
const Ue = Ee.exports, qe = {
  name: "PlusIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var Oe = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon plus-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, je = [], Ze = /* @__PURE__ */ y.normalizeComponent(
  qe,
  Oe,
  je,
  !1,
  null,
  null,
  null,
  null
);
const Ge = Ze.exports, Ke = /* @__PURE__ */ r.defineComponent({
  __name: "FilePickerBreadcrumbs",
  props: {
    path: null,
    showMenu: { type: Boolean }
  },
  emits: ["update:path", "create-node"],
  setup(l, { emit: e }) {
    const t = l, n = r.ref(""), i = r.ref();
    function s() {
      var c, C, p, F;
      const d = n.value.trim(), u = (C = (c = i.value) == null ? void 0 : c.$el) == null ? void 0 : C.querySelector("input");
      let m = "";
      return d.length === 0 ? m = h.t("File name cannot be empty.") : d.includes("/") ? m = h.t('"/" is not allowed inside a file name.') : ["..", "."].includes(d) ? m = h.t('"{name}" is an invalid file name.', { name: d }) : (p = window.OC.config) != null && p.blacklist_files_regex && d.match((F = window.OC.config) == null ? void 0 : F.blacklist_files_regex) && (m = h.t('"{name}" is not an allowed filetype', { name: d })), u && u.setCustomValidity(m), m === "";
    }
    const v = function() {
      const c = n.value.trim();
      s() && (e("create-node", c), n.value = "");
    }, g = r.computed(
      () => t.path.split("/").filter((c) => c !== "").map((c, C, p) => ({
        name: c,
        path: "/" + p.slice(0, C + 1).join("/")
      }))
    );
    return { __sfc: !0, props: t, emit: e, newNodeName: n, nameInput: i, validateInput: s, onSubmit: v, pathElements: g, IconFolder: R, IconHome: Ue, IconPlus: Ge, NcActions: b.NcActions, NcActionInput: b.NcActionInput, NcBreadcrumbs: b.NcBreadcrumbs, NcBreadcrumb: b.NcBreadcrumb, t: h.t };
  }
});
var We = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t(n.NcBreadcrumbs, { staticClass: "file-picker__breadcrumbs", scopedSlots: e._u([{ key: "default", fn: function() {
    return [t(n.NcBreadcrumb, { attrs: { name: n.t("Home"), title: n.t("Home") }, on: { click: function(i) {
      return n.emit("update:path", "/");
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(n.IconHome, { attrs: { size: 20 } })];
    }, proxy: !0 }]) }), e._l(n.pathElements, function(i) {
      return t(n.NcBreadcrumb, { key: i.path, attrs: { name: i.name, title: i.path }, on: { click: function(s) {
        return n.emit("update:path", i.path);
      } } });
    })];
  }, proxy: !0 }, e.showMenu ? { key: "actions", fn: function() {
    return [t(n.NcActions, { attrs: { "aria-label": n.t("Create directory"), "force-menu": !0, "force-title": !0, "menu-title": n.t("New"), type: "secondary" }, on: { close: function(i) {
      n.newNodeName = "";
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(n.IconPlus, { attrs: { size: 20 } })];
    }, proxy: !0 }], null, !1, 2971667417) }, [t(n.NcActionInput, { ref: "nameInput", attrs: { value: n.newNodeName, label: n.t("New folder"), placeholder: n.t("New folder name") }, on: { "update:value": function(i) {
      n.newNodeName = i;
    }, submit: n.onSubmit, input: n.validateInput }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(n.IconFolder, { attrs: { size: 20 } })];
    }, proxy: !0 }], null, !1, 1614167509) })], 1)];
  }, proxy: !0 } : null], null, !0) });
}, Je = [], Qe = /* @__PURE__ */ y.normalizeComponent(
  Ke,
  We,
  Je,
  !1,
  null,
  "f35f86d4",
  null,
  null
);
const Xe = Qe.exports, Ye = {
  name: "ClockIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var et = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon clock-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, tt = [], nt = /* @__PURE__ */ y.normalizeComponent(
  Ye,
  et,
  tt,
  !1,
  null,
  null,
  null,
  null
);
const it = nt.exports, lt = {
  name: "CloseIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var rt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon close-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, st = [], at = /* @__PURE__ */ y.normalizeComponent(
  lt,
  rt,
  st,
  !1,
  null,
  null,
  null,
  null
);
const ot = at.exports, ct = {
  name: "MagnifyIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var ut = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon magnify-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, dt = [], ft = /* @__PURE__ */ y.normalizeComponent(
  ct,
  ut,
  dt,
  !1,
  null,
  null,
  null,
  null
);
const _t = ft.exports, pt = {
  name: "StarIcon",
  emits: ["click"],
  props: {
    title: {
      type: String
    },
    fillColor: {
      type: String,
      default: "currentColor"
    },
    size: {
      type: Number,
      default: 24
    }
  }
};
var mt = function() {
  var e = this, t = e._self._c;
  return t("span", e._b({ staticClass: "material-design-icon star-icon", attrs: { "aria-hidden": !e.title, "aria-label": e.title, role: "img" }, on: { click: function(n) {
    return e.$emit("click", n);
  } } }, "span", e.$attrs, !1), [t("svg", { staticClass: "material-design-icon__svg", attrs: { fill: e.fillColor, width: e.size, height: e.size, viewBox: "0 0 24 24" } }, [t("path", { attrs: { d: "M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z" } }, [e.title ? t("title", [e._v(e._s(e.title))]) : e._e()])])]);
}, vt = [], ht = /* @__PURE__ */ y.normalizeComponent(
  pt,
  mt,
  vt,
  !1,
  null,
  null,
  null,
  null
);
const gt = ht.exports, U = () => {
  const l = () => {
    var t;
    return ((t = document.getElementById("isPublic")) == null ? void 0 : t.value) === "1";
  }, e = r.ref(!0);
  return r.onBeforeMount(() => {
    e.value = l();
  }), {
    isPublic: e
  };
}, yt = /* @__PURE__ */ r.defineComponent({
  __name: "FilePickerNavigation",
  props: {
    currentView: null,
    filterString: null,
    isCollapsed: { type: Boolean }
  },
  emits: ["update:currentView", "update:filterString"],
  setup(l, { emit: e }) {
    const t = l, { isPublic: n } = U(), i = [{
      id: "files",
      label: h.t("All files"),
      icon: R
    }, {
      id: "recent",
      label: h.t("Recent"),
      icon: it
    }, {
      id: "favorites",
      label: h.t("Favorites"),
      icon: gt
    }], s = r.computed(() => i.filter((g) => g.id === t.currentView)[0]);
    return { __sfc: !0, isPublic: n, allViews: i, props: t, emit: e, currentViewObject: s, updateFilterValue: (g) => e("update:filterString", g), IconClose: ot, IconMagnify: _t, NcButton: b.NcButton, NcSelect: b.NcSelect, NcTextField: b.NcTextField, Fragment: q.Fragment, t: h.t };
  }
});
var wt = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t(n.Fragment, [t(n.NcTextField, { staticClass: "file-picker__filter-input", attrs: { value: e.filterString, label: n.t("Filter file list"), "show-trailing-button": !!e.filterString }, on: { "update:value": n.updateFilterValue, "trailing-button-click": function(i) {
    return n.updateFilterValue("");
  } }, scopedSlots: e._u([{ key: "trailing-button-icon", fn: function() {
    return [t(n.IconClose, { attrs: { size: 16 } })];
  }, proxy: !0 }]) }, [t(n.IconMagnify, { attrs: { size: 16 } })], 1), n.isPublic ? e._e() : [e.isCollapsed ? t(n.NcSelect, { attrs: { "aria-label": n.t("Current view selector"), clearable: !1, searchable: !1, options: n.allViews, value: n.currentViewObject }, on: { input: (i) => n.emit("update:currentView", i.id) } }) : t("ul", { staticClass: "file-picker__side", attrs: { role: "tablist", "aria-label": n.t("Filepicker sections") } }, e._l(n.allViews, function(i) {
    return t("li", { key: i.id }, [t(n.NcButton, { attrs: { "aria-selected": e.currentView === i.id, type: e.currentView === i.id ? "primary" : "tertiary", wide: !0, role: "tab" }, on: { click: function(s) {
      return e.$emit("update:currentView", i.id);
    } }, scopedSlots: e._u([{ key: "icon", fn: function() {
      return [t(i.icon, { tag: "component", attrs: { size: 20 } })];
    }, proxy: !0 }], null, !0) }, [e._v(" " + e._s(i.label) + " ")])], 1);
  }), 0)]], 2);
}, Ct = [], kt = /* @__PURE__ */ y.normalizeComponent(
  yt,
  wt,
  Ct,
  !1,
  null,
  "429eb827",
  null,
  null
);
const bt = kt.exports;
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const Ft = function(l, e, t) {
  const n = r.computed(() => t.value ? "/" : w.davRootPath), i = r.computed(() => t.value ? A.generateRemoteUrl("webdav").replace("/remote.php", "/public.php") : w.davRemoteURL), s = r.computed(() => {
    if (t.value) {
      const d = document.getElementById("sharingToken").value, u = btoa("".concat(d, ":null")), m = w.davGetClient(i.value);
      return m.setHeaders({ Authorization: "Basic ".concat(u) }), m;
    }
    return w.davGetClient();
  }), v = (d) => {
    const u = w.davResultToNode(d, n.value, i.value);
    return t.value ? new Proxy(u, {
      get(m, k) {
        if (k === "dirname" || k === "path") {
          let S = m.source.slice(i.value.length);
          return S[0] !== "/" && (S = "/".concat(S)), k === "dirname" ? I.dirname(S) : S;
        }
        return m[k];
      }
    }) : u;
  }, g = r.ref([]), c = r.ref(!0);
  async function C(d) {
    const u = I.join(e.value, d);
    await s.value.createDirectory(I.join(n.value, u));
    const m = await p(u);
    return g.value.push(m), m;
  }
  async function p(d, u = void 0) {
    u = u != null ? u : n.value;
    const { data: m } = await s.value.stat("".concat(u).concat(d), {
      details: !0,
      data: w.davGetDefaultPropfind()
    });
    return v(m);
  }
  async function F() {
    if (c.value = !0, l.value === "favorites")
      g.value = await w.getFavoriteNodes(s.value, e.value, n.value);
    else if (l.value === "recent") {
      const d = Math.round(Date.now() / 1e3) - 1209600, { data: u } = await s.value.search("/", {
        details: !0,
        data: w.davGetRecentSearch(d)
      });
      g.value = u.results.map(v);
    } else {
      const d = await s.value.getDirectoryContents("".concat(n.value).concat(e.value), {
        details: !0,
        data: w.davGetDefaultPropfind()
      });
      g.value = d.data.map(v), t.value && (g.value = g.value.filter((u) => u.path !== e.value));
    }
    c.value = !1;
  }
  return r.watch([l, e], () => F()), {
    isLoading: c,
    files: g,
    loadFiles: () => F(),
    getFile: p,
    createDirectory: C
  };
};
/**
 * @copyright Copyright (c) 2023 Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @author Ferdinand Thiessen <opensource@fthiessen.de>
 *
 * @license AGPL-3.0-or-later
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
const St = function(l) {
  const e = r.computed(() => l.value.map((n) => n.split("/")));
  return {
    isSupportedMimeType: (n) => {
      const i = n.split("/");
      return e.value.some(
        ([s, v]) => (
          // check mime type matches or is wildcard
          (i[0] === s || s === "*") && (i[1] === v || v === "*")
        )
      );
    }
  };
}, $t = {
  name: "FilePicker"
}, Nt = /* @__PURE__ */ r.defineComponent({
  ...$t,
  props: {
    buttons: null,
    name: null,
    allowPickDirectory: { type: Boolean, default: !1 },
    container: { default: "body" },
    filterFn: { default: void 0 },
    mimetypeFilter: { default: () => [] },
    multiselect: { type: Boolean, default: !0 },
    path: { default: "/" }
  },
  emits: ["close"],
  setup(l, { emit: e }) {
    const t = l, { isPublic: n } = U(), i = r.computed(() => (typeof t.buttons == "function" ? t.buttons(p.value, u.value, c.value) : t.buttons).map((_) => ({
      ..._,
      callback: async () => {
        s = !0, v(_.callback);
      }
    })));
    let s = !1;
    const v = async (o) => {
      const _ = p.value.length === 0 && t.allowPickDirectory ? [await L(u.value)] : p.value;
      o(_), e("close", _), s = !1;
    }, g = () => {
      s || e("close");
    }, c = r.ref("files"), C = r.computed(() => c.value === "favorites" ? h.t("Favorites") : c.value === "recent" ? h.t("Recent") : ""), p = r.ref([]), F = r.ref((window == null ? void 0 : window.sessionStorage.getItem("NC.FilePicker.LastPath")) || "/"), d = r.ref(), u = r.computed({
      // Only use the path for the files view as favorites and recent only works on the root
      get: () => c.value === "files" ? d.value || t.path || F.value : "/",
      /**
       * Navigate to the new path and save it to the session storage
       *
       * @param path The new path
       */
      set: (o) => {
        t.path === void 0 && window.sessionStorage.setItem("NC.FilePicker.LastPath", o), d.value = o, p.value = [];
      }
    }), m = r.ref(""), { isSupportedMimeType: k } = St(r.toRef(t, "mimetypeFilter")), { files: N, isLoading: S, loadFiles: z, getFile: L, createDirectory: x } = Ft(c, u, n);
    r.onMounted(() => z());
    const $ = r.computed(() => {
      let o = N.value;
      return t.mimetypeFilter.length > 0 && (o = o.filter((_) => _.type === "folder" || _.mime && k(_.mime))), m.value && (o = o.filter((_) => _.basename.toLowerCase().includes(m.value.toLowerCase()))), t.filterFn && (o = o.filter((_) => t.filterFn(_))), o;
    }), a = r.computed(() => c.value === "files" ? h.t("Upload some content or sync with your devices!") : c.value === "recent" ? h.t("Files and folders you recently modified will show up here.") : h.t("Files and folders you mark as favorite will show up here."));
    return { __sfc: !0, props: t, emit: e, isPublic: n, dialogButtons: i, isHandlingCallback: s, handleButtonClick: v, handleClose: g, currentView: c, viewHeadline: C, selectedFiles: p, savedPath: F, navigatedPath: d, currentPath: u, filterString: m, isSupportedMimeType: k, files: N, isLoading: S, loadFiles: z, getFile: L, createDirectory: x, filteredFiles: $, noFilesDescription: a, onCreateFolder: async (o) => {
      try {
        await x(o);
      } catch (_) {
        console.warn("Could not create new folder", { name: o, error: _ }), O.showError(h.t("Could not create the new folder"));
      }
    }, IconFile: E, DialogBase: y.DialogBase, FileList: Ve, FilePickerBreadcrumbs: Xe, FilePickerNavigation: bt, NcEmptyContent: b.NcEmptyContent, t: h.t };
  }
});
var xt = function() {
  var e = this, t = e._self._c, n = e._self._setupProxy;
  return t(n.DialogBase, { attrs: { container: e.container, name: e.name, buttons: n.dialogButtons, size: "large", "content-classes": "file-picker__content", "dialog-classes": "file-picker", "navigation-classes": "file-picker__navigation" }, on: { close: n.handleClose }, scopedSlots: e._u([{ key: "navigation", fn: function({ isCollapsed: i }) {
    return [t(n.FilePickerNavigation, { attrs: { "is-collapsed": i, "current-view": n.currentView, "filter-string": n.filterString }, on: { "update:currentView": function(s) {
      n.currentView = s;
    }, "update:current-view": function(s) {
      n.currentView = s;
    }, "update:filterString": function(s) {
      n.filterString = s;
    }, "update:filter-string": function(s) {
      n.filterString = s;
    } } })];
  } }]) }, [t("div", { staticClass: "file-picker__main" }, [n.currentView === "files" ? t(n.FilePickerBreadcrumbs, { attrs: { path: n.currentPath, "show-menu": e.allowPickDirectory }, on: { "update:path": function(i) {
    n.currentPath = i;
  }, "create-node": n.onCreateFolder } }) : t("div", { staticClass: "file-picker__view" }, [t("h3", [e._v(e._s(n.viewHeadline))])]), n.isLoading || n.filteredFiles.length > 0 ? t(n.FileList, { attrs: { "allow-pick-directory": e.allowPickDirectory, files: n.filteredFiles, multiselect: e.multiselect, loading: n.isLoading, path: n.currentPath, "selected-files": n.selectedFiles, name: n.viewHeadline }, on: { "update:path": [function(i) {
    n.currentPath = i;
  }, function(i) {
    n.currentView = "files";
  }], "update:selectedFiles": function(i) {
    n.selectedFiles = i;
  }, "update:selected-files": function(i) {
    n.selectedFiles = i;
  } } }) : n.filterString ? t(n.NcEmptyContent, { attrs: { name: n.t("No matching files"), description: n.t("No files matching your filter were found.") }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t(n.IconFile)];
  }, proxy: !0 }]) }) : t(n.NcEmptyContent, { attrs: { name: n.t("No files in here"), description: n.noFilesDescription }, scopedSlots: e._u([{ key: "icon", fn: function() {
    return [t(n.IconFile)];
  }, proxy: !0 }]) })], 1)]);
}, zt = [], Lt = /* @__PURE__ */ y.normalizeComponent(
  Nt,
  xt,
  zt,
  !1,
  null,
  "85764ff8",
  null,
  null
);
const Bt = Lt.exports;
exports.default = Bt;
