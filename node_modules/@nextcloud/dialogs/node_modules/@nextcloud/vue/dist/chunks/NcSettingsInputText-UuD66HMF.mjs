import '../assets/NcSettingsInputText-DbTNj9E6.css';
import { r as register, f as t41, a as t } from "./_l10n-CVKZRR_K.mjs";
import { G as GenRandomId } from "./GenRandomId-CMooMQt0.mjs";
import { n as normalizeComponent } from "./_plugin-vue2_normalizer-D637Qkok.mjs";
register(t41);
const _sfc_main = {
  name: "NcSettingsInputText",
  props: {
    /**
     * label of the select group element
     */
    label: {
      type: String,
      required: true
    },
    /**
     * hint of the select group input
     */
    hint: {
      type: String,
      default: ""
    },
    /**
     * value of the select group input
     */
    value: {
      type: String,
      default: ""
    },
    /**
     * disabled state of the settings select group input
     */
    disabled: {
      type: Boolean,
      default: false
    },
    /**
     * id attribute of the select group element
     */
    id: {
      type: String,
      default: () => "settings-input-text-" + GenRandomId(),
      validator: (id) => id.trim() !== ""
    }
  },
  emits: [
    "update:value",
    "input",
    "submit",
    "change"
  ],
  data() {
    return {
      submitTranslated: t("Submit")
    };
  },
  computed: {
    /**
     * @return {string}
     */
    idSubmit() {
      return this.id + "-submit";
    }
  },
  methods: {
    onInput(event) {
      this.$emit("input", event);
      this.$emit("update:value", event.target.value);
    },
    onSubmit(event) {
      if (!this.disabled) {
        this.$emit("submit", event);
      }
    },
    onChange(event) {
      this.$emit("change", event);
    }
  }
};
var _sfc_render = function render() {
  var _vm = this, _c = _vm._self._c;
  return _c("form", { ref: "form", attrs: { "disabled": _vm.disabled }, on: { "submit": function($event) {
    $event.preventDefault();
    $event.stopPropagation();
    return _vm.onSubmit.apply(null, arguments);
  } } }, [_c("div", { staticClass: "input-wrapper" }, [_c("label", { staticClass: "action-input__label", attrs: { "for": _vm.id } }, [_vm._v(_vm._s(_vm.label))]), _c("input", { attrs: { "id": _vm.id, "type": "text", "disabled": _vm.disabled }, domProps: { "value": _vm.value }, on: { "input": _vm.onInput, "change": _vm.onChange } }), _c("input", { staticClass: "action-input__submit", attrs: { "id": _vm.idSubmit, "type": "submit" }, domProps: { "value": _vm.submitTranslated } }), _vm.hint ? _c("p", { staticClass: "hint" }, [_vm._v(" " + _vm._s(_vm.hint) + " ")]) : _vm._e()])]);
};
var _sfc_staticRenderFns = [];
var __component__ = /* @__PURE__ */ normalizeComponent(
  _sfc_main,
  _sfc_render,
  _sfc_staticRenderFns,
  false,
  null,
  "f5a7bd55",
  null,
  null
);
const NcSettingsInputText = __component__.exports;
export {
  NcSettingsInputText as N
};
//# sourceMappingURL=NcSettingsInputText-UuD66HMF.mjs.map
