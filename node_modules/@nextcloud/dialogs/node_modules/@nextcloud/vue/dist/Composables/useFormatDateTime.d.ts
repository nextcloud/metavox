import { Ref } from 'vue';

interface FormatDateOptions {
    /**
     * The format used for displaying, or if relative time is used the format used for the title
     */
    format?: Intl.DateTimeFormatOptions;
    /**
     * Ignore seconds when displaying the relative time and just show `a few seconds ago`
     */
    ignoreSeconds?: boolean;
    /**
     * Wether to display the timestamp as time from now
     */
    relativeTime?: false | 'long' | 'short' | 'narrow';
}
type MaybeRef<T> = T | Ref<T>;
/**
 * Composable for formatting time stamps using current users locale and language
 *
 * @param {Date | number | import('vue').Ref<Date> | import('vue').Ref<number>} timestamp Current timestamp
 * @param {object} opts Optional options
 * @param {Intl.DateTimeFormatOptions} opts.format The format used for displaying, or if relative time is used the format used for the title (optional)
 * @param {boolean} opts.ignoreSeconds Ignore seconds when displaying the relative time and just show `a few seconds ago`
 * @param {false | 'long' | 'short' | 'narrow'} opts.relativeTime Wether to display the timestamp as time from now (optional)
 */
export declare function useFormatDateTime(timestamp?: MaybeRef<Date | number>, opts?: MaybeRef<FormatDateOptions>): {
    formattedTime: import('vue').ComputedRef<string>;
    formattedFullTime: import('vue').ComputedRef<string>;
    options: Ref<{
        format: {
            localeMatcher?: "best fit" | "lookup" | undefined;
            weekday?: "long" | "short" | "narrow" | undefined;
            era?: "long" | "short" | "narrow" | undefined;
            year?: "numeric" | "2-digit" | undefined;
            month?: "long" | "short" | "narrow" | "numeric" | "2-digit" | undefined;
            day?: "numeric" | "2-digit" | undefined;
            hour?: "numeric" | "2-digit" | undefined;
            minute?: "numeric" | "2-digit" | undefined;
            second?: "numeric" | "2-digit" | undefined;
            timeZoneName?: "long" | "short" | "shortOffset" | "longOffset" | "shortGeneric" | "longGeneric" | undefined;
            formatMatcher?: "best fit" | "basic" | undefined;
            hour12?: boolean | undefined;
            timeZone?: string | undefined;
            calendar?: string | undefined;
            dayPeriod?: "long" | "short" | "narrow" | undefined;
            numberingSystem?: string | undefined;
            dateStyle?: "full" | "long" | "short" | "medium" | undefined;
            timeStyle?: "full" | "long" | "short" | "medium" | undefined;
            hourCycle?: "h11" | "h12" | "h23" | "h24" | undefined;
            fractionalSecondDigits?: 1 | 3 | 2 | undefined;
        };
        ignoreSeconds: boolean;
        relativeTime: false | "long" | "short" | "narrow";
    }>;
};
export {};
